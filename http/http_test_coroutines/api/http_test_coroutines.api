public abstract class com/hexagonkt/http/test/BaseTest {
	public fun <init> ()V
	protected final fun assertResponseContains (Lcom/hexagonkt/http/model/HttpResponsePort;Lcom/hexagonkt/http/model/HttpStatus;[Ljava/lang/String;)V
	protected final fun assertResponseContains (Lcom/hexagonkt/http/model/HttpResponsePort;[Ljava/lang/String;)V
	protected final fun assertResponseEquals (Lcom/hexagonkt/http/model/HttpResponsePort;Lcom/hexagonkt/http/model/HttpStatus;Ljava/lang/String;)V
	public static synthetic fun assertResponseEquals$default (Lcom/hexagonkt/http/test/BaseTest;Lcom/hexagonkt/http/model/HttpResponsePort;Lcom/hexagonkt/http/model/HttpStatus;Ljava/lang/String;ILjava/lang/Object;)V
	protected final fun basicAuth (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public static synthetic fun basicAuth$default (Lcom/hexagonkt/http/test/BaseTest;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
	protected final fun getClient ()Lcom/hexagonkt/http/client/HttpClient;
	protected abstract fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected abstract fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServer ()Lcom/hexagonkt/http/server/coroutines/HttpServer;
	protected abstract fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected abstract fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
	public final fun shutDown ()V
	public final fun startUp ()V
}

public abstract class com/hexagonkt/http/test/examples/BenchmarkIT : com/hexagonkt/http/test/examples/BooksTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun Example benchmark ()V
}

public final class com/hexagonkt/http/test/examples/BenchmarkSimulation : io/gatling/javaapi/core/Simulation {
	public fun <init> ()V
}

public abstract class com/hexagonkt/http/test/examples/BooksTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun Book not found returns a 404 ()V
	public final fun Create book returns 201 and new book ID ()V
	public final fun Create book returns 400 if a parameter is missing ()V
	public final fun Delete book returns the deleted record ID ()V
	public final fun Delete not found book returns a 404 ()V
	public final fun Get book returns all book's fields ()V
	public final fun Invalid method returns 405 ()V
	public final fun List books contains all books IDs ()V
	public final fun Not handled method returns 404 ()V
	public final fun Update book overrides existing book data ()V
	public final fun Update not found book returns a 404 ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
}

public final class com/hexagonkt/http/test/examples/BooksTest$Book {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lcom/hexagonkt/http/test/examples/BooksTest$Book;
	public static synthetic fun copy$default (Lcom/hexagonkt/http/test/examples/BooksTest$Book;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lcom/hexagonkt/http/test/examples/BooksTest$Book;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAuthor ()Ljava/lang/String;
	public final fun getTitle ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class com/hexagonkt/http/test/examples/ClientTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ljava/util/List;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ljava/util/List;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun Cookies are sent correctly ()V
	public final fun Create HTTP clients ()V
	public final fun Exceptions are returned as internal server errors ()V
	public fun Form parameters are sent correctly ()V
	public final fun HTTP generic requests work ok ()V
	public final fun HTTP methods with body and content type work ok ()V
	public final fun HTTP methods with body work ok ()V
	public final fun HTTP methods without body work ok ()V
	public final fun Integers are sent properly ()V
	public final fun JSON requests works as expected ()V
	public final fun Parameters are set properly ()V
	public fun Redirects are handled correctly correctly ()V
	public final fun Request HTTPS example ()V
	public final fun Strings are sent properly ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
	public final fun resetHandler ()V
	public final fun setUpSerializationFormats ()V
}

public abstract class com/hexagonkt/http/test/examples/CookiesTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun Cookies contain correct values ()V
	public final fun Create cookie adds a new cookie to the request ()V
	public final fun Empty cookies assures there is no cookies ()V
	public final fun Full cookie lifecycle ()V
	public final fun Remove cookie deletes the given cookie ()V
	public final fun Remove not available cookie does not fail ()V
	public final fun clearCookies ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
}

public abstract class com/hexagonkt/http/test/examples/CorsTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun Allowed CORS pre-flight without origin ()V
	public final fun Allowed origin is returned properly ()V
	public final fun CORS full pre-flight ()V
	public final fun CORS pre-flight ()V
	public final fun CORS pre-flight with allowed headers ()V
	public final fun CORS pre-flight with empty request method ()V
	public final fun CORS pre-flight with mismatched origin ()V
	public final fun CORS pre-flight with not allowed headers ()V
	public final fun CORS pre-flight with not allowed method ()V
	public final fun CORS pre-flight without origin ()V
	public final fun CORS pre-flight without request method ()V
	public final fun Request with not allowed origin is forbidden ()V
	public final fun Request without origin continues as non CORS ()V
	public final fun Simple CORS request ()V
	public final fun Simple CORS request with exposed headers ()V
	public final fun Simple CORS request with not allowed method ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	public final fun getPath ()Lcom/hexagonkt/http/handlers/coroutines/PathHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
}

public abstract class com/hexagonkt/http/test/examples/ErrorsTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun A runtime exception returns a 500 code ()V
	public final fun Base error handler catch all exceptions that subclass a given one ()V
	public final fun Halt stops request with 500 status code ()V
	public final fun Handle exception allows to catch unhandled callback exceptions ()V
	public final fun Handling status code allows to change the returned code ()V
	public final fun Invalid body returns 500 status code ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
}

public final class com/hexagonkt/http/test/examples/ErrorsTest$CustomException : java/lang/IllegalArgumentException {
	public fun <init> ()V
}

public abstract class com/hexagonkt/http/test/examples/FilesTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun An static file from resources can be fetched ()V
	public final fun Files content type is returned properly ()V
	public final fun Files mounted on a path are returned properly ()V
	public final fun Not found resources return 404 ()V
	public final fun Parameters are separated from each other ()V
	public final fun Requesting a folder with an existing file name returns 404 ()V
	public final fun Sending files works properly ()V
	public final fun Sending multi part content works properly ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
}

public abstract class com/hexagonkt/http/test/examples/FiltersTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun After handlers can be chained ()V
	public final fun HTTP request with valid credentials returns valid response ()V
	public final fun Request with invalid password returns 403 ()V
	public final fun Request with invalid user returns 403 ()V
	public final fun Request without authorization returns 401 ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
}

public abstract class com/hexagonkt/http/test/examples/HttpsTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun Key stores contains the proper aliases ()V
	public final fun Serve HTTP2 works properly ()V
	public final fun Serve HTTPS example ()V
	public final fun Serve HTTPS works properly ()V
	public final fun Serve insecure HTTPS example ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
}

public abstract class com/hexagonkt/http/test/examples/SamplesTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun callbacks ()V
	public final fun errors ()V
	public final fun files ()V
	public final fun filters ()V
	public final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	public final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	public final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
	public final fun mockRequest ()V
	public final fun routeGroups ()V
	public final fun routers ()V
	public final fun routesCreation ()V
	public final fun serverCreation ()V
	public final fun shutDown ()V
	public final fun startUp ()V
	public final fun test ()V
}

public abstract class com/hexagonkt/http/test/examples/SseTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun SSE requests get published events on the server ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
}

public abstract class com/hexagonkt/http/test/examples/WebSocketsTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun Serve WS works properly ()V
	public final fun Serve WSS over HTTP2 works properly ()V
	public final fun Serve WSS works properly ()V
	public final fun WebSockets client check start and stop states ()V
	public final fun WebSockets connections can be checked before session is created ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
}

public abstract class com/hexagonkt/http/test/examples/ZipTest : com/hexagonkt/http/test/BaseTest {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun Use ZIP encoding example ()V
	public fun Use ZIP encoding without enabling the feature example ()V
	protected final fun getClientAdapter ()Lkotlin/jvm/functions/Function0;
	protected fun getHandler ()Lcom/hexagonkt/http/handlers/coroutines/HttpHandler;
	protected final fun getServerAdapter ()Lkotlin/jvm/functions/Function0;
	protected final fun getServerSettings ()Lcom/hexagonkt/http/server/coroutines/HttpServerSettings;
}

