/*
 * For details on how to build and publish and release the project, check `contributing.md`.
 */

buildscript {
    repositories {
        jcenter ()
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.1.51'
    id 'org.jetbrains.dokka' version '0.9.15'
    id 'jacoco'

    id 'org.ajoberstar.git-publish' version '0.3.0' apply false
    id 'com.jfrog.bintray' version '1.7.3' apply false
    id 'org.xbib.gradle.plugin.jbake' version '1.2.1' apply false
    id 'uk.co.cacoethes.lazybones-templates' version '1.2.3' apply false
    id 'me.champeau.gradle.jmh' version '0.4.4' apply false
    id 'com.fizzed.rocker' version '0.22.0' apply false
}

apply from: 'gradle/release.gradle'

clean {
    delete 'build', '.gradle', 'log', 'out'

    delete (
        fileTree(rootDir) { include '**/*.log' },
        fileTree(rootDir) { include '**/*.hprof' },
        fileTree(rootDir) { include '**/*.class' }
    )
}

task publish(
    dependsOn:
        project.getTasksByName ('bintrayUpload', true) +
        tasks.getByPath(':hexagon_site:gitPublishPush') +
        tasks.getByPath(':hexagon_starters:publishAllTemplates')
)

repositories {
    jcenter ()
}

task jacocoReport(dependsOn: getTasksByName ('jacocoTestReport', true), type: JacocoReport) {
    executionData = files(fileTree(rootDir.absolutePath).include("**/build/jacoco/test.exec"))

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        html.enabled = true
        xml.enabled = true
    }
}
