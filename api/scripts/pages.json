[{"name":"object Csv : SerializationFormat","description":"com.hexagonkt.serialization.csv.Csv","location":"serialization_csv/com.hexagonkt.serialization.csv/-csv/index.html","searchKeys":["Csv","object Csv : SerializationFormat","com.hexagonkt.serialization.csv.Csv"]},{"name":"open override fun <T : Any> parse(input: InputStream, type: KClass<T>): T","description":"com.hexagonkt.serialization.csv.Csv.parse","location":"serialization_csv/com.hexagonkt.serialization.csv/-csv/parse.html","searchKeys":["parse","open override fun <T : Any> parse(input: InputStream, type: KClass<T>): T","com.hexagonkt.serialization.csv.Csv.parse"]},{"name":"open override fun <T : Any> parseObjects(input: InputStream, type: KClass<T>): List<T>","description":"com.hexagonkt.serialization.csv.Csv.parseObjects","location":"serialization_csv/com.hexagonkt.serialization.csv/-csv/parse-objects.html","searchKeys":["parseObjects","open override fun <T : Any> parseObjects(input: InputStream, type: KClass<T>): List<T>","com.hexagonkt.serialization.csv.Csv.parseObjects"]},{"name":"open override fun serialize(obj: Any, output: OutputStream)","description":"com.hexagonkt.serialization.csv.Csv.serialize","location":"serialization_csv/com.hexagonkt.serialization.csv/-csv/serialize.html","searchKeys":["serialize","open override fun serialize(obj: Any, output: OutputStream)","com.hexagonkt.serialization.csv.Csv.serialize"]},{"name":"open override val contentType: String","description":"com.hexagonkt.serialization.csv.Csv.contentType","location":"serialization_csv/com.hexagonkt.serialization.csv/-csv/content-type.html","searchKeys":["contentType","open override val contentType: String","com.hexagonkt.serialization.csv.Csv.contentType"]},{"name":"open override val extensions: Set<String>","description":"com.hexagonkt.serialization.csv.Csv.extensions","location":"serialization_csv/com.hexagonkt.serialization.csv/-csv/extensions.html","searchKeys":["extensions","open override val extensions: Set<String>","com.hexagonkt.serialization.csv.Csv.extensions"]},{"name":"open override val isBinary: Boolean = false","description":"com.hexagonkt.serialization.csv.Csv.isBinary","location":"serialization_csv/com.hexagonkt.serialization.csv/-csv/is-binary.html","searchKeys":["isBinary","open override val isBinary: Boolean = false","com.hexagonkt.serialization.csv.Csv.isBinary"]},{"name":"fun JacksonTextFormat(extensions: LinkedHashSet<String>, factoryGenerator: () -> JsonFactory? = null)","description":"com.hexagonkt.serialization.json.JacksonTextFormat.JacksonTextFormat","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-text-format/-jackson-text-format.html","searchKeys":["JacksonTextFormat","fun JacksonTextFormat(extensions: LinkedHashSet<String>, factoryGenerator: () -> JsonFactory? = null)","com.hexagonkt.serialization.json.JacksonTextFormat.JacksonTextFormat"]},{"name":"fun createObjectMapper(mapperFactory: JsonFactory = MappingJsonFactory()): ObjectMapper","description":"com.hexagonkt.serialization.json.JacksonHelper.createObjectMapper","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-helper/create-object-mapper.html","searchKeys":["createObjectMapper","fun createObjectMapper(mapperFactory: JsonFactory = MappingJsonFactory()): ObjectMapper","com.hexagonkt.serialization.json.JacksonHelper.createObjectMapper"]},{"name":"fun parseException(e: Exception?): ParseException","description":"com.hexagonkt.serialization.json.JacksonHelper.parseException","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-helper/parse-exception.html","searchKeys":["parseException","fun parseException(e: Exception?): ParseException","com.hexagonkt.serialization.json.JacksonHelper.parseException"]},{"name":"fun setupObjectMapper(objectMapper: ObjectMapper): ObjectMapper","description":"com.hexagonkt.serialization.json.JacksonHelper.setupObjectMapper","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-helper/setup-object-mapper.html","searchKeys":["setupObjectMapper","fun setupObjectMapper(objectMapper: ObjectMapper): ObjectMapper","com.hexagonkt.serialization.json.JacksonHelper.setupObjectMapper"]},{"name":"object JacksonHelper","description":"com.hexagonkt.serialization.json.JacksonHelper","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-helper/index.html","searchKeys":["JacksonHelper","object JacksonHelper","com.hexagonkt.serialization.json.JacksonHelper"]},{"name":"object JacksonMapper : Mapper","description":"com.hexagonkt.serialization.json.JacksonMapper","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-mapper/index.html","searchKeys":["JacksonMapper","object JacksonMapper : Mapper","com.hexagonkt.serialization.json.JacksonMapper"]},{"name":"object Json : JacksonTextFormat","description":"com.hexagonkt.serialization.json.Json","location":"serialization_json/com.hexagonkt.serialization.json/-json/index.html","searchKeys":["Json","object Json : JacksonTextFormat","com.hexagonkt.serialization.json.Json"]},{"name":"open class JacksonTextFormat(extensions: LinkedHashSet<String>, factoryGenerator: () -> JsonFactory?) : SerializationFormat","description":"com.hexagonkt.serialization.json.JacksonTextFormat","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-text-format/index.html","searchKeys":["JacksonTextFormat","open class JacksonTextFormat(extensions: LinkedHashSet<String>, factoryGenerator: () -> JsonFactory?) : SerializationFormat","com.hexagonkt.serialization.json.JacksonTextFormat"]},{"name":"open override fun <T : Any> parse(input: InputStream, type: KClass<T>): T","description":"com.hexagonkt.serialization.json.JacksonTextFormat.parse","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-text-format/parse.html","searchKeys":["parse","open override fun <T : Any> parse(input: InputStream, type: KClass<T>): T","com.hexagonkt.serialization.json.JacksonTextFormat.parse"]},{"name":"open override fun <T : Any> parseObjects(input: InputStream, type: KClass<T>): List<T>","description":"com.hexagonkt.serialization.json.JacksonTextFormat.parseObjects","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-text-format/parse-objects.html","searchKeys":["parseObjects","open override fun <T : Any> parseObjects(input: InputStream, type: KClass<T>): List<T>","com.hexagonkt.serialization.json.JacksonTextFormat.parseObjects"]},{"name":"open override fun <T : Any> toObject(map: Map<*, *>, type: KClass<T>): T","description":"com.hexagonkt.serialization.json.JacksonMapper.toObject","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-mapper/to-object.html","searchKeys":["toObject","open override fun <T : Any> toObject(map: Map<*, *>, type: KClass<T>): T","com.hexagonkt.serialization.json.JacksonMapper.toObject"]},{"name":"open override fun serialize(obj: Any): String","description":"com.hexagonkt.serialization.json.JacksonTextFormat.serialize","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-text-format/serialize.html","searchKeys":["serialize","open override fun serialize(obj: Any): String","com.hexagonkt.serialization.json.JacksonTextFormat.serialize"]},{"name":"open override fun serialize(obj: Any, output: OutputStream)","description":"com.hexagonkt.serialization.json.JacksonTextFormat.serialize","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-text-format/serialize.html","searchKeys":["serialize","open override fun serialize(obj: Any, output: OutputStream)","com.hexagonkt.serialization.json.JacksonTextFormat.serialize"]},{"name":"open override fun toFieldsMap(instance: Any): Map<*, *>","description":"com.hexagonkt.serialization.json.JacksonMapper.toFieldsMap","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-mapper/to-fields-map.html","searchKeys":["toFieldsMap","open override fun toFieldsMap(instance: Any): Map<*, *>","com.hexagonkt.serialization.json.JacksonMapper.toFieldsMap"]},{"name":"open override val contentType: String","description":"com.hexagonkt.serialization.json.JacksonTextFormat.contentType","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-text-format/content-type.html","searchKeys":["contentType","open override val contentType: String","com.hexagonkt.serialization.json.JacksonTextFormat.contentType"]},{"name":"open override val isBinary: Boolean = false","description":"com.hexagonkt.serialization.json.JacksonTextFormat.isBinary","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-text-format/is-binary.html","searchKeys":["isBinary","open override val isBinary: Boolean = false","com.hexagonkt.serialization.json.JacksonTextFormat.isBinary"]},{"name":"override val extensions: LinkedHashSet<String>","description":"com.hexagonkt.serialization.json.JacksonTextFormat.extensions","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-text-format/extensions.html","searchKeys":["extensions","override val extensions: LinkedHashSet<String>","com.hexagonkt.serialization.json.JacksonTextFormat.extensions"]},{"name":"val mapper: ObjectMapper","description":"com.hexagonkt.serialization.json.JacksonHelper.mapper","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-helper/mapper.html","searchKeys":["mapper","val mapper: ObjectMapper","com.hexagonkt.serialization.json.JacksonHelper.mapper"]},{"name":"val mapper: ObjectMapper","description":"com.hexagonkt.serialization.json.JacksonTextFormat.mapper","location":"serialization_json/com.hexagonkt.serialization.json/-jackson-text-format/mapper.html","searchKeys":["mapper","val mapper: ObjectMapper","com.hexagonkt.serialization.json.JacksonTextFormat.mapper"]},{"name":"abstract class ServletServer(router: Router, async: Boolean) : ServletContextListener","description":"com.hexagonkt.http.server.servlet.ServletServer","location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/index.html","searchKeys":["ServletServer","abstract class ServletServer(router: Router, async: Boolean) : ServletContextListener","com.hexagonkt.http.server.servlet.ServletServer"]},{"name":"class ServletFilter(router: List<RequestHandler>, serverSettings: ServerSettings) : Filter","description":"com.hexagonkt.http.server.servlet.ServletFilter","location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/index.html","searchKeys":["ServletFilter","class ServletFilter(router: List<RequestHandler>, serverSettings: ServerSettings) : Filter","com.hexagonkt.http.server.servlet.ServletFilter"]},{"name":"fun ServletFilter(router: List<RequestHandler>, serverSettings: ServerSettings)","description":"com.hexagonkt.http.server.servlet.ServletFilter.ServletFilter","location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/-servlet-filter.html","searchKeys":["ServletFilter","fun ServletFilter(router: List<RequestHandler>, serverSettings: ServerSettings)","com.hexagonkt.http.server.servlet.ServletFilter.ServletFilter"]},{"name":"fun ServletServer(router: Router = Router(), async: Boolean = false)","description":"com.hexagonkt.http.server.servlet.ServletServer.ServletServer","location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/-servlet-server.html","searchKeys":["ServletServer","fun ServletServer(router: Router = Router(), async: Boolean = false)","com.hexagonkt.http.server.servlet.ServletServer.ServletServer"]},{"name":"open override fun contextDestroyed(sce: ServletContextEvent?)","description":"com.hexagonkt.http.server.servlet.ServletServer.contextDestroyed","location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/context-destroyed.html","searchKeys":["contextDestroyed","open override fun contextDestroyed(sce: ServletContextEvent?)","com.hexagonkt.http.server.servlet.ServletServer.contextDestroyed"]},{"name":"open override fun contextInitialized(sce: ServletContextEvent)","description":"com.hexagonkt.http.server.servlet.ServletServer.contextInitialized","location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/context-initialized.html","searchKeys":["contextInitialized","open override fun contextInitialized(sce: ServletContextEvent)","com.hexagonkt.http.server.servlet.ServletServer.contextInitialized"]},{"name":"open override fun destroy()","description":"com.hexagonkt.http.server.servlet.ServletFilter.destroy","location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/destroy.html","searchKeys":["destroy","open override fun destroy()","com.hexagonkt.http.server.servlet.ServletFilter.destroy"]},{"name":"open override fun doFilter(request: ServletRequest, response: ServletResponse, chain: FilterChain)","description":"com.hexagonkt.http.server.servlet.ServletFilter.doFilter","location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/do-filter.html","searchKeys":["doFilter","open override fun doFilter(request: ServletRequest, response: ServletResponse, chain: FilterChain)","com.hexagonkt.http.server.servlet.ServletFilter.doFilter"]},{"name":"open override fun init(filterConfig: FilterConfig)","description":"com.hexagonkt.http.server.servlet.ServletFilter.init","location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/init.html","searchKeys":["init","open override fun init(filterConfig: FilterConfig)","com.hexagonkt.http.server.servlet.ServletFilter.init"]},{"name":"abstract fun render(url: URL, context: Map<String, *>, locale: Locale = Jvm.locale): String","description":"com.hexagonkt.templates.TemplatePort.render","location":"templates/com.hexagonkt.templates/-template-port/render.html","searchKeys":["render","abstract fun render(url: URL, context: Map<String, *>, locale: Locale = Jvm.locale): String","com.hexagonkt.templates.TemplatePort.render"]},{"name":"fun render(url: URL, context: Map<String, *>, locale: Locale = Jvm.locale): String","description":"com.hexagonkt.templates.TemplateManager.render","location":"templates/com.hexagonkt.templates/-template-manager/render.html","searchKeys":["render","fun render(url: URL, context: Map<String, *>, locale: Locale = Jvm.locale): String","com.hexagonkt.templates.TemplateManager.render"]},{"name":"interface TemplatePort","description":"com.hexagonkt.templates.TemplatePort","location":"templates/com.hexagonkt.templates/-template-port/index.html","searchKeys":["TemplatePort","interface TemplatePort","com.hexagonkt.templates.TemplatePort"]},{"name":"object TemplateManager","description":"com.hexagonkt.templates.TemplateManager","location":"templates/com.hexagonkt.templates/-template-manager/index.html","searchKeys":["TemplateManager","object TemplateManager","com.hexagonkt.templates.TemplateManager"]},{"name":"var adapters: Map<Regex, TemplatePort>","description":"com.hexagonkt.templates.TemplateManager.adapters","location":"templates/com.hexagonkt.templates/-template-manager/adapters.html","searchKeys":["adapters","var adapters: Map<Regex, TemplatePort>","com.hexagonkt.templates.TemplateManager.adapters"]},{"name":"object PebbleAdapter : TemplatePort","description":"com.hexagonkt.templates.pebble.PebbleAdapter","location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter/index.html","searchKeys":["PebbleAdapter","object PebbleAdapter : TemplatePort","com.hexagonkt.templates.pebble.PebbleAdapter"]},{"name":"open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","description":"com.hexagonkt.templates.pebble.PebbleAdapter.render","location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter/render.html","searchKeys":["render","open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","com.hexagonkt.templates.pebble.PebbleAdapter.render"]},{"name":"class AhcAdapter : ClientPort","description":"com.hexagonkt.http.client.ahc.AhcAdapter","location":"http_client_ahc/com.hexagonkt.http.client.ahc/-ahc-adapter/index.html","searchKeys":["AhcAdapter","class AhcAdapter : ClientPort","com.hexagonkt.http.client.ahc.AhcAdapter"]},{"name":"fun AhcAdapter()","description":"com.hexagonkt.http.client.ahc.AhcAdapter.AhcAdapter","location":"http_client_ahc/com.hexagonkt.http.client.ahc/-ahc-adapter/-ahc-adapter.html","searchKeys":["AhcAdapter","fun AhcAdapter()","com.hexagonkt.http.client.ahc.AhcAdapter.AhcAdapter"]},{"name":"open override fun send(client: Client, request: Request): Response<String>","description":"com.hexagonkt.http.client.ahc.AhcAdapter.send","location":"http_client_ahc/com.hexagonkt.http.client.ahc/-ahc-adapter/send.html","searchKeys":["send","open override fun send(client: Client, request: Request): Response<String>","com.hexagonkt.http.client.ahc.AhcAdapter.send"]},{"name":"class JettyServletAdapter : ServerPort","description":"com.hexagonkt.http.server.jetty.JettyServletAdapter","location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/index.html","searchKeys":["JettyServletAdapter","class JettyServletAdapter : ServerPort","com.hexagonkt.http.server.jetty.JettyServletAdapter"]},{"name":"fun JettyServletAdapter()","description":"com.hexagonkt.http.server.jetty.JettyServletAdapter.JettyServletAdapter","location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/-jetty-servlet-adapter.html","searchKeys":["JettyServletAdapter","fun JettyServletAdapter()","com.hexagonkt.http.server.jetty.JettyServletAdapter.JettyServletAdapter"]},{"name":"fun serve(settings: ServerSettings = ServerSettings(), block: Router.() -> Unit): Server","description":"com.hexagonkt.http.server.jetty.serve","location":"http_server_jetty/com.hexagonkt.http.server.jetty/serve.html","searchKeys":["serve","fun serve(settings: ServerSettings = ServerSettings(), block: Router.() -> Unit): Server","com.hexagonkt.http.server.jetty.serve"]},{"name":"fun serve(settings: ServerSettings = ServerSettings(), router: Router): Server","description":"com.hexagonkt.http.server.jetty.serve","location":"http_server_jetty/com.hexagonkt.http.server.jetty/serve.html","searchKeys":["serve","fun serve(settings: ServerSettings = ServerSettings(), router: Router): Server","com.hexagonkt.http.server.jetty.serve"]},{"name":"open override fun runtimePort(): Int","description":"com.hexagonkt.http.server.jetty.JettyServletAdapter.runtimePort","location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/runtime-port.html","searchKeys":["runtimePort","open override fun runtimePort(): Int","com.hexagonkt.http.server.jetty.JettyServletAdapter.runtimePort"]},{"name":"open override fun shutdown()","description":"com.hexagonkt.http.server.jetty.JettyServletAdapter.shutdown","location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/shutdown.html","searchKeys":["shutdown","open override fun shutdown()","com.hexagonkt.http.server.jetty.JettyServletAdapter.shutdown"]},{"name":"open override fun started(): Boolean","description":"com.hexagonkt.http.server.jetty.JettyServletAdapter.started","location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/started.html","searchKeys":["started","open override fun started(): Boolean","com.hexagonkt.http.server.jetty.JettyServletAdapter.started"]},{"name":"open override fun startup(server: Server)","description":"com.hexagonkt.http.server.jetty.JettyServletAdapter.startup","location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/startup.html","searchKeys":["startup","open override fun startup(server: Server)","com.hexagonkt.http.server.jetty.JettyServletAdapter.startup"]},{"name":"open override fun supportedFeatures(): Set<ServerFeature>","description":"com.hexagonkt.http.server.jetty.JettyServletAdapter.supportedFeatures","location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/supported-features.html","searchKeys":["supportedFeatures","open override fun supportedFeatures(): Set<ServerFeature>","com.hexagonkt.http.server.jetty.JettyServletAdapter.supportedFeatures"]},{"name":"open override fun supportedOptions(): Set<String>","description":"com.hexagonkt.http.server.jetty.JettyServletAdapter.supportedOptions","location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/supported-options.html","searchKeys":["supportedOptions","open override fun supportedOptions(): Set<String>","com.hexagonkt.http.server.jetty.JettyServletAdapter.supportedOptions"]},{"name":"open override fun supportedProtocols(): Set<Protocol>","description":"com.hexagonkt.http.server.jetty.JettyServletAdapter.supportedProtocols","location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/supported-protocols.html","searchKeys":["supportedProtocols","open override fun supportedProtocols(): Set<Protocol>","com.hexagonkt.http.server.jetty.JettyServletAdapter.supportedProtocols"]},{"name":"object LogbackLoggingAdapter : LoggingPort","description":"com.hexagonkt.logging.logback.LogbackLoggingAdapter","location":"logging_logback/com.hexagonkt.logging.logback/-logback-logging-adapter/index.html","searchKeys":["LogbackLoggingAdapter","object LogbackLoggingAdapter : LoggingPort","com.hexagonkt.logging.logback.LogbackLoggingAdapter"]},{"name":"open override fun createLogger(name: String): LoggerPort","description":"com.hexagonkt.logging.logback.LogbackLoggingAdapter.createLogger","location":"logging_logback/com.hexagonkt.logging.logback/-logback-logging-adapter/create-logger.html","searchKeys":["createLogger","open override fun createLogger(name: String): LoggerPort","com.hexagonkt.logging.logback.LogbackLoggingAdapter.createLogger"]},{"name":"open override fun setLoggerLevel(name: String, level: LoggingLevel)","description":"com.hexagonkt.logging.logback.LogbackLoggingAdapter.setLoggerLevel","location":"logging_logback/com.hexagonkt.logging.logback/-logback-logging-adapter/set-logger-level.html","searchKeys":["setLoggerLevel","open override fun setLoggerLevel(name: String, level: LoggingLevel)","com.hexagonkt.logging.logback.LogbackLoggingAdapter.setLoggerLevel"]},{"name":"object Yaml : JacksonTextFormat","description":"com.hexagonkt.serialization.yaml.Yaml","location":"serialization_yaml/com.hexagonkt.serialization.yaml/-yaml/index.html","searchKeys":["Yaml","object Yaml : JacksonTextFormat","com.hexagonkt.serialization.yaml.Yaml"]},{"name":"abstract class UrlResourceBundle(url: URL) : MapResourceBundle","description":"com.hexagonkt.serialization.UrlResourceBundle","location":"serialization/com.hexagonkt.serialization/-url-resource-bundle/index.html","searchKeys":["UrlResourceBundle","abstract class UrlResourceBundle(url: URL) : MapResourceBundle","com.hexagonkt.serialization.UrlResourceBundle"]},{"name":"abstract fun <T : Any> parse(input: InputStream, type: KClass<T>): T","description":"com.hexagonkt.serialization.SerializationFormat.parse","location":"serialization/com.hexagonkt.serialization/-serialization-format/parse.html","searchKeys":["parse","abstract fun <T : Any> parse(input: InputStream, type: KClass<T>): T","com.hexagonkt.serialization.SerializationFormat.parse"]},{"name":"abstract fun <T : Any> parseObjects(input: InputStream, type: KClass<T>): List<T>","description":"com.hexagonkt.serialization.SerializationFormat.parseObjects","location":"serialization/com.hexagonkt.serialization/-serialization-format/parse-objects.html","searchKeys":["parseObjects","abstract fun <T : Any> parseObjects(input: InputStream, type: KClass<T>): List<T>","com.hexagonkt.serialization.SerializationFormat.parseObjects"]},{"name":"abstract fun <T : Any> toObject(map: Map<*, *>, type: KClass<T>): T","description":"com.hexagonkt.serialization.Mapper.toObject","location":"serialization/com.hexagonkt.serialization/-mapper/to-object.html","searchKeys":["toObject","abstract fun <T : Any> toObject(map: Map<*, *>, type: KClass<T>): T","com.hexagonkt.serialization.Mapper.toObject"]},{"name":"abstract fun serialize(obj: Any, output: OutputStream)","description":"com.hexagonkt.serialization.SerializationFormat.serialize","location":"serialization/com.hexagonkt.serialization/-serialization-format/serialize.html","searchKeys":["serialize","abstract fun serialize(obj: Any, output: OutputStream)","com.hexagonkt.serialization.SerializationFormat.serialize"]},{"name":"abstract fun toFieldsMap(instance: Any): Map<*, *>","description":"com.hexagonkt.serialization.Mapper.toFieldsMap","location":"serialization/com.hexagonkt.serialization/-mapper/to-fields-map.html","searchKeys":["toFieldsMap","abstract fun toFieldsMap(instance: Any): Map<*, *>","com.hexagonkt.serialization.Mapper.toFieldsMap"]},{"name":"abstract val contentType: String","description":"com.hexagonkt.serialization.SerializationFormat.contentType","location":"serialization/com.hexagonkt.serialization/-serialization-format/content-type.html","searchKeys":["contentType","abstract val contentType: String","com.hexagonkt.serialization.SerializationFormat.contentType"]},{"name":"abstract val extensions: Set<String>","description":"com.hexagonkt.serialization.SerializationFormat.extensions","location":"serialization/com.hexagonkt.serialization/-serialization-format/extensions.html","searchKeys":["extensions","abstract val extensions: Set<String>","com.hexagonkt.serialization.SerializationFormat.extensions"]},{"name":"abstract val isBinary: Boolean","description":"com.hexagonkt.serialization.SerializationFormat.isBinary","location":"serialization/com.hexagonkt.serialization/-serialization-format/is-binary.html","searchKeys":["isBinary","abstract val isBinary: Boolean","com.hexagonkt.serialization.SerializationFormat.isBinary"]},{"name":"class ParseException(field: String, cause: Throwable?) : RuntimeException","description":"com.hexagonkt.serialization.ParseException","location":"serialization/com.hexagonkt.serialization/-parse-exception/index.html","searchKeys":["ParseException","class ParseException(field: String, cause: Throwable?) : RuntimeException","com.hexagonkt.serialization.ParseException"]},{"name":"data class ContentType(format: SerializationFormat, charset: Charset?)","description":"com.hexagonkt.serialization.ContentType","location":"serialization/com.hexagonkt.serialization/-content-type/index.html","searchKeys":["ContentType","data class ContentType(format: SerializationFormat, charset: Charset?)","com.hexagonkt.serialization.ContentType"]},{"name":"fun <T : Any> File.parse(type: KClass<T>): T","description":"com.hexagonkt.serialization.parse","location":"serialization/com.hexagonkt.serialization/parse.html","searchKeys":["parse","fun <T : Any> File.parse(type: KClass<T>): T","com.hexagonkt.serialization.parse"]},{"name":"fun <T : Any> File.parseObjects(type: KClass<T>): List<T>","description":"com.hexagonkt.serialization.parseObjects","location":"serialization/com.hexagonkt.serialization/parse-objects.html","searchKeys":["parseObjects","fun <T : Any> File.parseObjects(type: KClass<T>): List<T>","com.hexagonkt.serialization.parseObjects"]},{"name":"fun <T : Any> InputStream.parse(type: KClass<T>, format: SerializationFormat = requireDefaultFormat()): T","description":"com.hexagonkt.serialization.parse","location":"serialization/com.hexagonkt.serialization/parse.html","searchKeys":["parse","fun <T : Any> InputStream.parse(type: KClass<T>, format: SerializationFormat = requireDefaultFormat()): T","com.hexagonkt.serialization.parse"]},{"name":"fun <T : Any> InputStream.parseObjects(type: KClass<T>, format: SerializationFormat = requireDefaultFormat()): List<T>","description":"com.hexagonkt.serialization.parseObjects","location":"serialization/com.hexagonkt.serialization/parse-objects.html","searchKeys":["parseObjects","fun <T : Any> InputStream.parseObjects(type: KClass<T>, format: SerializationFormat = requireDefaultFormat()): List<T>","com.hexagonkt.serialization.parseObjects"]},{"name":"fun <T : Any> Map<*, *>.toObject(type: KClass<T>): T","description":"com.hexagonkt.serialization.toObject","location":"serialization/com.hexagonkt.serialization/to-object.html","searchKeys":["toObject","fun <T : Any> Map<*, *>.toObject(type: KClass<T>): T","com.hexagonkt.serialization.toObject"]},{"name":"fun <T : Any> String.parse(type: KClass<T>, format: SerializationFormat = requireDefaultFormat()): T","description":"com.hexagonkt.serialization.parse","location":"serialization/com.hexagonkt.serialization/parse.html","searchKeys":["parse","fun <T : Any> String.parse(type: KClass<T>, format: SerializationFormat = requireDefaultFormat()): T","com.hexagonkt.serialization.parse"]},{"name":"fun <T : Any> String.parseObjects(type: KClass<T>, format: SerializationFormat = requireDefaultFormat()): List<T>","description":"com.hexagonkt.serialization.parseObjects","location":"serialization/com.hexagonkt.serialization/parse-objects.html","searchKeys":["parseObjects","fun <T : Any> String.parseObjects(type: KClass<T>, format: SerializationFormat = requireDefaultFormat()): List<T>","com.hexagonkt.serialization.parseObjects"]},{"name":"fun <T : Any> URL.parse(type: KClass<T>): T","description":"com.hexagonkt.serialization.parse","location":"serialization/com.hexagonkt.serialization/parse.html","searchKeys":["parse","fun <T : Any> URL.parse(type: KClass<T>): T","com.hexagonkt.serialization.parse"]},{"name":"fun <T : Any> URL.parseObjects(type: KClass<T>): List<T>","description":"com.hexagonkt.serialization.parseObjects","location":"serialization/com.hexagonkt.serialization/parse-objects.html","searchKeys":["parseObjects","fun <T : Any> URL.parseObjects(type: KClass<T>): List<T>","com.hexagonkt.serialization.parseObjects"]},{"name":"fun Any.serialize(contentType: String): String","description":"com.hexagonkt.serialization.serialize","location":"serialization/com.hexagonkt.serialization/serialize.html","searchKeys":["serialize","fun Any.serialize(contentType: String): String","com.hexagonkt.serialization.serialize"]},{"name":"fun Any.serialize(format: SerializationFormat = requireDefaultFormat()): String","description":"com.hexagonkt.serialization.serialize","location":"serialization/com.hexagonkt.serialization/serialize.html","searchKeys":["serialize","fun Any.serialize(format: SerializationFormat = requireDefaultFormat()): String","com.hexagonkt.serialization.serialize"]},{"name":"fun Any.toFieldsMap(): Map<*, *>","description":"com.hexagonkt.serialization.toFieldsMap","location":"serialization/com.hexagonkt.serialization/to-fields-map.html","searchKeys":["toFieldsMap","fun Any.toFieldsMap(): Map<*, *>","com.hexagonkt.serialization.toFieldsMap"]},{"name":"fun ContentType(format: SerializationFormat, charset: Charset? = null)","description":"com.hexagonkt.serialization.ContentType.ContentType","location":"serialization/com.hexagonkt.serialization/-content-type/-content-type.html","searchKeys":["ContentType","fun ContentType(format: SerializationFormat, charset: Charset? = null)","com.hexagonkt.serialization.ContentType.ContentType"]},{"name":"fun ParseException(field: String, cause: Throwable? = null)","description":"com.hexagonkt.serialization.ParseException.ParseException","location":"serialization/com.hexagonkt.serialization/-parse-exception/-parse-exception.html","searchKeys":["ParseException","fun ParseException(field: String, cause: Throwable? = null)","com.hexagonkt.serialization.ParseException.ParseException"]},{"name":"fun UrlResourceBundle(url: URL)","description":"com.hexagonkt.serialization.UrlResourceBundle.UrlResourceBundle","location":"serialization/com.hexagonkt.serialization/-url-resource-bundle/-url-resource-bundle.html","searchKeys":["UrlResourceBundle","fun UrlResourceBundle(url: URL)","com.hexagonkt.serialization.UrlResourceBundle.UrlResourceBundle"]},{"name":"fun contentTypeOf(extension: String): String?","description":"com.hexagonkt.serialization.SerializationManager.contentTypeOf","location":"serialization/com.hexagonkt.serialization/-serialization-manager/content-type-of.html","searchKeys":["contentTypeOf","fun contentTypeOf(extension: String): String?","com.hexagonkt.serialization.SerializationManager.contentTypeOf"]},{"name":"fun contentTypeOf(file: File): String?","description":"com.hexagonkt.serialization.SerializationManager.contentTypeOf","location":"serialization/com.hexagonkt.serialization/-serialization-manager/content-type-of.html","searchKeys":["contentTypeOf","fun contentTypeOf(file: File): String?","com.hexagonkt.serialization.SerializationManager.contentTypeOf"]},{"name":"fun contentTypeOf(url: URL): String?","description":"com.hexagonkt.serialization.SerializationManager.contentTypeOf","location":"serialization/com.hexagonkt.serialization/-serialization-manager/content-type-of.html","searchKeys":["contentTypeOf","fun contentTypeOf(url: URL): String?","com.hexagonkt.serialization.SerializationManager.contentTypeOf"]},{"name":"fun defaultFormat(defaultFormat: SerializationFormat)","description":"com.hexagonkt.serialization.SerializationManager.defaultFormat","location":"serialization/com.hexagonkt.serialization/-serialization-manager/default-format.html","searchKeys":["defaultFormat","fun defaultFormat(defaultFormat: SerializationFormat)","com.hexagonkt.serialization.SerializationManager.defaultFormat"]},{"name":"fun formatOf(contentType: String): SerializationFormat","description":"com.hexagonkt.serialization.SerializationManager.formatOf","location":"serialization/com.hexagonkt.serialization/-serialization-manager/format-of.html","searchKeys":["formatOf","fun formatOf(contentType: String): SerializationFormat","com.hexagonkt.serialization.SerializationManager.formatOf"]},{"name":"fun formatOf(contentType: String, defaultFormat: SerializationFormat): SerializationFormat","description":"com.hexagonkt.serialization.SerializationManager.formatOf","location":"serialization/com.hexagonkt.serialization/-serialization-manager/format-of.html","searchKeys":["formatOf","fun formatOf(contentType: String, defaultFormat: SerializationFormat): SerializationFormat","com.hexagonkt.serialization.SerializationManager.formatOf"]},{"name":"fun formatOf(file: File): SerializationFormat","description":"com.hexagonkt.serialization.SerializationManager.formatOf","location":"serialization/com.hexagonkt.serialization/-serialization-manager/format-of.html","searchKeys":["formatOf","fun formatOf(file: File): SerializationFormat","com.hexagonkt.serialization.SerializationManager.formatOf"]},{"name":"fun formatOf(url: URL): SerializationFormat","description":"com.hexagonkt.serialization.SerializationManager.formatOf","location":"serialization/com.hexagonkt.serialization/-serialization-manager/format-of.html","searchKeys":["formatOf","fun formatOf(url: URL): SerializationFormat","com.hexagonkt.serialization.SerializationManager.formatOf"]},{"name":"fun formats(vararg formats: SerializationFormat)","description":"com.hexagonkt.serialization.SerializationManager.formats","location":"serialization/com.hexagonkt.serialization/-serialization-manager/formats.html","searchKeys":["formats","fun formats(vararg formats: SerializationFormat)","com.hexagonkt.serialization.SerializationManager.formats"]},{"name":"fun requireDefaultFormat(): SerializationFormat","description":"com.hexagonkt.serialization.SerializationManager.requireDefaultFormat","location":"serialization/com.hexagonkt.serialization/-serialization-manager/require-default-format.html","searchKeys":["requireDefaultFormat","fun requireDefaultFormat(): SerializationFormat","com.hexagonkt.serialization.SerializationManager.requireDefaultFormat"]},{"name":"fun requireMapper(): Mapper","description":"com.hexagonkt.serialization.SerializationManager.requireMapper","location":"serialization/com.hexagonkt.serialization/-serialization-manager/require-mapper.html","searchKeys":["requireMapper","fun requireMapper(): Mapper","com.hexagonkt.serialization.SerializationManager.requireMapper"]},{"name":"inline fun <T : Any> File.parse(): T","description":"com.hexagonkt.serialization.parse","location":"serialization/com.hexagonkt.serialization/parse.html","searchKeys":["parse","inline fun <T : Any> File.parse(): T","com.hexagonkt.serialization.parse"]},{"name":"inline fun <T : Any> File.parseObjects(): List<T>","description":"com.hexagonkt.serialization.parseObjects","location":"serialization/com.hexagonkt.serialization/parse-objects.html","searchKeys":["parseObjects","inline fun <T : Any> File.parseObjects(): List<T>","com.hexagonkt.serialization.parseObjects"]},{"name":"inline fun <T : Any> InputStream.parse(format: SerializationFormat = requireDefaultFormat()): T","description":"com.hexagonkt.serialization.parse","location":"serialization/com.hexagonkt.serialization/parse.html","searchKeys":["parse","inline fun <T : Any> InputStream.parse(format: SerializationFormat = requireDefaultFormat()): T","com.hexagonkt.serialization.parse"]},{"name":"inline fun <T : Any> InputStream.parseObjects(format: SerializationFormat = requireDefaultFormat()): List<T>","description":"com.hexagonkt.serialization.parseObjects","location":"serialization/com.hexagonkt.serialization/parse-objects.html","searchKeys":["parseObjects","inline fun <T : Any> InputStream.parseObjects(format: SerializationFormat = requireDefaultFormat()): List<T>","com.hexagonkt.serialization.parseObjects"]},{"name":"inline fun <T : Any> Map<*, *>.toObject(): T","description":"com.hexagonkt.serialization.toObject","location":"serialization/com.hexagonkt.serialization/to-object.html","searchKeys":["toObject","inline fun <T : Any> Map<*, *>.toObject(): T","com.hexagonkt.serialization.toObject"]},{"name":"inline fun <T : Any> String.parse(format: SerializationFormat = requireDefaultFormat()): T","description":"com.hexagonkt.serialization.parse","location":"serialization/com.hexagonkt.serialization/parse.html","searchKeys":["parse","inline fun <T : Any> String.parse(format: SerializationFormat = requireDefaultFormat()): T","com.hexagonkt.serialization.parse"]},{"name":"inline fun <T : Any> String.parseObjects(format: SerializationFormat = requireDefaultFormat()): List<T>","description":"com.hexagonkt.serialization.parseObjects","location":"serialization/com.hexagonkt.serialization/parse-objects.html","searchKeys":["parseObjects","inline fun <T : Any> String.parseObjects(format: SerializationFormat = requireDefaultFormat()): List<T>","com.hexagonkt.serialization.parseObjects"]},{"name":"inline fun <T : Any> URL.parse(): T","description":"com.hexagonkt.serialization.parse","location":"serialization/com.hexagonkt.serialization/parse.html","searchKeys":["parse","inline fun <T : Any> URL.parse(): T","com.hexagonkt.serialization.parse"]},{"name":"inline fun <T : Any> URL.parseObjects(): List<T>","description":"com.hexagonkt.serialization.parseObjects","location":"serialization/com.hexagonkt.serialization/parse-objects.html","searchKeys":["parseObjects","inline fun <T : Any> URL.parseObjects(): List<T>","com.hexagonkt.serialization.parseObjects"]},{"name":"interface Mapper","description":"com.hexagonkt.serialization.Mapper","location":"serialization/com.hexagonkt.serialization/-mapper/index.html","searchKeys":["Mapper","interface Mapper","com.hexagonkt.serialization.Mapper"]},{"name":"interface SerializationFormat","description":"com.hexagonkt.serialization.SerializationFormat","location":"serialization/com.hexagonkt.serialization/-serialization-format/index.html","searchKeys":["SerializationFormat","interface SerializationFormat","com.hexagonkt.serialization.SerializationFormat"]},{"name":"object SerializationManager","description":"com.hexagonkt.serialization.SerializationManager","location":"serialization/com.hexagonkt.serialization/-serialization-manager/index.html","searchKeys":["SerializationManager","object SerializationManager","com.hexagonkt.serialization.SerializationManager"]},{"name":"open fun serialize(obj: Any): String","description":"com.hexagonkt.serialization.SerializationFormat.serialize","location":"serialization/com.hexagonkt.serialization/-serialization-format/serialize.html","searchKeys":["serialize","open fun serialize(obj: Any): String","com.hexagonkt.serialization.SerializationFormat.serialize"]},{"name":"open override fun toString(): String","description":"com.hexagonkt.serialization.ContentType.toString","location":"serialization/com.hexagonkt.serialization/-content-type/to-string.html","searchKeys":["toString","open override fun toString(): String","com.hexagonkt.serialization.ContentType.toString"]},{"name":"val charset: Charset? = null","description":"com.hexagonkt.serialization.ContentType.charset","location":"serialization/com.hexagonkt.serialization/-content-type/charset.html","searchKeys":["charset","val charset: Charset? = null","com.hexagonkt.serialization.ContentType.charset"]},{"name":"val field: String","description":"com.hexagonkt.serialization.ParseException.field","location":"serialization/com.hexagonkt.serialization/-parse-exception/field.html","searchKeys":["field","val field: String","com.hexagonkt.serialization.ParseException.field"]},{"name":"val format: SerializationFormat","description":"com.hexagonkt.serialization.ContentType.format","location":"serialization/com.hexagonkt.serialization/-content-type/format.html","searchKeys":["format","val format: SerializationFormat","com.hexagonkt.serialization.ContentType.format"]},{"name":"val url: URL","description":"com.hexagonkt.serialization.UrlResourceBundle.url","location":"serialization/com.hexagonkt.serialization/-url-resource-bundle/url.html","searchKeys":["url","val url: URL","com.hexagonkt.serialization.UrlResourceBundle.url"]},{"name":"var defaultFormat: SerializationFormat?","description":"com.hexagonkt.serialization.SerializationManager.defaultFormat","location":"serialization/com.hexagonkt.serialization/-serialization-manager/default-format.html","searchKeys":["defaultFormat","var defaultFormat: SerializationFormat?","com.hexagonkt.serialization.SerializationManager.defaultFormat"]},{"name":"var formats: LinkedHashSet<SerializationFormat>","description":"com.hexagonkt.serialization.SerializationManager.formats","location":"serialization/com.hexagonkt.serialization/-serialization-manager/formats.html","searchKeys":["formats","var formats: LinkedHashSet<SerializationFormat>","com.hexagonkt.serialization.SerializationManager.formats"]},{"name":"var mapper: Mapper? = null","description":"com.hexagonkt.serialization.SerializationManager.mapper","location":"serialization/com.hexagonkt.serialization/-serialization-manager/mapper.html","searchKeys":["mapper","var mapper: Mapper? = null","com.hexagonkt.serialization.SerializationManager.mapper"]},{"name":"DEBUG()","description":"com.hexagonkt.core.logging.LoggingLevel.DEBUG","location":"core/com.hexagonkt.core.logging/-logging-level/-d-e-b-u-g/index.html","searchKeys":["DEBUG","DEBUG()","com.hexagonkt.core.logging.LoggingLevel.DEBUG"]},{"name":"ERROR()","description":"com.hexagonkt.core.logging.LoggingLevel.ERROR","location":"core/com.hexagonkt.core.logging/-logging-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR()","com.hexagonkt.core.logging.LoggingLevel.ERROR"]},{"name":"INFO()","description":"com.hexagonkt.core.logging.LoggingLevel.INFO","location":"core/com.hexagonkt.core.logging/-logging-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO()","com.hexagonkt.core.logging.LoggingLevel.INFO"]},{"name":"OFF()","description":"com.hexagonkt.core.logging.LoggingLevel.OFF","location":"core/com.hexagonkt.core.logging/-logging-level/-o-f-f/index.html","searchKeys":["OFF","OFF()","com.hexagonkt.core.logging.LoggingLevel.OFF"]},{"name":"TRACE()","description":"com.hexagonkt.core.logging.LoggingLevel.TRACE","location":"core/com.hexagonkt.core.logging/-logging-level/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE()","com.hexagonkt.core.logging.LoggingLevel.TRACE"]},{"name":"WARN()","description":"com.hexagonkt.core.logging.LoggingLevel.WARN","location":"core/com.hexagonkt.core.logging/-logging-level/-w-a-r-n/index.html","searchKeys":["WARN","WARN()","com.hexagonkt.core.logging.LoggingLevel.WARN"]},{"name":"abstract class MapResourceBundle(map: Map<*, *>) : ListResourceBundle","description":"com.hexagonkt.core.helpers.MapResourceBundle","location":"core/com.hexagonkt.core.helpers/-map-resource-bundle/index.html","searchKeys":["MapResourceBundle","abstract class MapResourceBundle(map: Map<*, *>) : ListResourceBundle","com.hexagonkt.core.helpers.MapResourceBundle"]},{"name":"abstract fun <E : Throwable> log(level: LoggingLevel, exception: E, message: (E) -> Any?)","description":"com.hexagonkt.core.logging.LoggerPort.log","location":"core/com.hexagonkt.core.logging/-logger-port/log.html","searchKeys":["log","abstract fun <E : Throwable> log(level: LoggingLevel, exception: E, message: (E) -> Any?)","com.hexagonkt.core.logging.LoggerPort.log"]},{"name":"abstract fun createLogger(name: String): LoggerPort","description":"com.hexagonkt.core.logging.LoggingPort.createLogger","location":"core/com.hexagonkt.core.logging/-logging-port/create-logger.html","searchKeys":["createLogger","abstract fun createLogger(name: String): LoggerPort","com.hexagonkt.core.logging.LoggingPort.createLogger"]},{"name":"abstract fun log(level: LoggingLevel, message: () -> Any?)","description":"com.hexagonkt.core.logging.LoggerPort.log","location":"core/com.hexagonkt.core.logging/-logger-port/log.html","searchKeys":["log","abstract fun log(level: LoggingLevel, message: () -> Any?)","com.hexagonkt.core.logging.LoggerPort.log"]},{"name":"abstract fun setLoggerLevel(name: String, level: LoggingLevel)","description":"com.hexagonkt.core.logging.LoggingPort.setLoggerLevel","location":"core/com.hexagonkt.core.logging/-logging-port/set-logger-level.html","searchKeys":["setLoggerLevel","abstract fun setLoggerLevel(name: String, level: LoggingLevel)","com.hexagonkt.core.logging.LoggingPort.setLoggerLevel"]},{"name":"class CodedException(code: Int, message: String, cause: Throwable?) : RuntimeException","description":"com.hexagonkt.core.helpers.CodedException","location":"core/com.hexagonkt.core.helpers/-coded-exception/index.html","searchKeys":["CodedException","class CodedException(code: Int, message: String, cause: Throwable?) : RuntimeException","com.hexagonkt.core.helpers.CodedException"]},{"name":"class Logger(name: String)","description":"com.hexagonkt.core.logging.Logger","location":"core/com.hexagonkt.core.logging/-logger/index.html","searchKeys":["Logger","class Logger(name: String)","com.hexagonkt.core.logging.Logger"]},{"name":"class MultiMap<K, V>(mapData: Map<K, List<V>>) : Map<K, V> ","description":"com.hexagonkt.core.helpers.MultiMap","location":"core/com.hexagonkt.core.helpers/-multi-map/index.html","searchKeys":["MultiMap","class MultiMap<K, V>(mapData: Map<K, List<V>>) : Map<K, V> ","com.hexagonkt.core.helpers.MultiMap"]},{"name":"class MultipleException(causes: List<Throwable>, message: String) : RuntimeException","description":"com.hexagonkt.core.helpers.MultipleException","location":"core/com.hexagonkt.core.helpers/-multiple-exception/index.html","searchKeys":["MultipleException","class MultipleException(causes: List<Throwable>, message: String) : RuntimeException","com.hexagonkt.core.helpers.MultipleException"]},{"name":"class PatternFormat(useColor: Boolean) : Formatter","description":"com.hexagonkt.core.logging.jul.PatternFormat","location":"core/com.hexagonkt.core.logging.jul/-pattern-format/index.html","searchKeys":["PatternFormat","class PatternFormat(useColor: Boolean) : Formatter","com.hexagonkt.core.logging.jul.PatternFormat"]},{"name":"class ResourceNotFoundException(message: String) : IOException","description":"com.hexagonkt.core.ResourceNotFoundException","location":"core/com.hexagonkt.core/-resource-not-found-exception/index.html","searchKeys":["ResourceNotFoundException","class ResourceNotFoundException(message: String) : IOException","com.hexagonkt.core.ResourceNotFoundException"]},{"name":"class SystemOutHandler(handlerFormatter: Formatter) : StreamHandler","description":"com.hexagonkt.core.logging.jul.SystemOutHandler","location":"core/com.hexagonkt.core.logging.jul/-system-out-handler/index.html","searchKeys":["SystemOutHandler","class SystemOutHandler(handlerFormatter: Formatter) : StreamHandler","com.hexagonkt.core.logging.jul.SystemOutHandler"]},{"name":"const val BLACK: String","description":"com.hexagonkt.core.helpers.Ansi.BLACK","location":"core/com.hexagonkt.core.helpers/-ansi/-b-l-a-c-k.html","searchKeys":["BLACK","const val BLACK: String","com.hexagonkt.core.helpers.Ansi.BLACK"]},{"name":"const val BLACK_BG: String","description":"com.hexagonkt.core.helpers.Ansi.BLACK_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-b-l-a-c-k_-b-g.html","searchKeys":["BLACK_BG","const val BLACK_BG: String","com.hexagonkt.core.helpers.Ansi.BLACK_BG"]},{"name":"const val BLINK: String","description":"com.hexagonkt.core.helpers.Ansi.BLINK","location":"core/com.hexagonkt.core.helpers/-ansi/-b-l-i-n-k.html","searchKeys":["BLINK","const val BLINK: String","com.hexagonkt.core.helpers.Ansi.BLINK"]},{"name":"const val BLINK_OFF: String","description":"com.hexagonkt.core.helpers.Ansi.BLINK_OFF","location":"core/com.hexagonkt.core.helpers/-ansi/-b-l-i-n-k_-o-f-f.html","searchKeys":["BLINK_OFF","const val BLINK_OFF: String","com.hexagonkt.core.helpers.Ansi.BLINK_OFF"]},{"name":"const val BLUE: String","description":"com.hexagonkt.core.helpers.Ansi.BLUE","location":"core/com.hexagonkt.core.helpers/-ansi/-b-l-u-e.html","searchKeys":["BLUE","const val BLUE: String","com.hexagonkt.core.helpers.Ansi.BLUE"]},{"name":"const val BLUE_BG: String","description":"com.hexagonkt.core.helpers.Ansi.BLUE_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-b-l-u-e_-b-g.html","searchKeys":["BLUE_BG","const val BLUE_BG: String","com.hexagonkt.core.helpers.Ansi.BLUE_BG"]},{"name":"const val BOLD: String","description":"com.hexagonkt.core.helpers.Ansi.BOLD","location":"core/com.hexagonkt.core.helpers/-ansi/-b-o-l-d.html","searchKeys":["BOLD","const val BOLD: String","com.hexagonkt.core.helpers.Ansi.BOLD"]},{"name":"const val BOLD_OFF: String","description":"com.hexagonkt.core.helpers.Ansi.BOLD_OFF","location":"core/com.hexagonkt.core.helpers/-ansi/-b-o-l-d_-o-f-f.html","searchKeys":["BOLD_OFF","const val BOLD_OFF: String","com.hexagonkt.core.helpers.Ansi.BOLD_OFF"]},{"name":"const val BRIGHT_BLACK: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_BLACK","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-b-l-a-c-k.html","searchKeys":["BRIGHT_BLACK","const val BRIGHT_BLACK: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_BLACK"]},{"name":"const val BRIGHT_BLACK_BG: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_BLACK_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-b-l-a-c-k_-b-g.html","searchKeys":["BRIGHT_BLACK_BG","const val BRIGHT_BLACK_BG: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_BLACK_BG"]},{"name":"const val BRIGHT_BLUE: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_BLUE","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-b-l-u-e.html","searchKeys":["BRIGHT_BLUE","const val BRIGHT_BLUE: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_BLUE"]},{"name":"const val BRIGHT_BLUE_BG: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_BLUE_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-b-l-u-e_-b-g.html","searchKeys":["BRIGHT_BLUE_BG","const val BRIGHT_BLUE_BG: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_BLUE_BG"]},{"name":"const val BRIGHT_CYAN: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_CYAN","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-c-y-a-n.html","searchKeys":["BRIGHT_CYAN","const val BRIGHT_CYAN: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_CYAN"]},{"name":"const val BRIGHT_CYAN_BG: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_CYAN_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-c-y-a-n_-b-g.html","searchKeys":["BRIGHT_CYAN_BG","const val BRIGHT_CYAN_BG: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_CYAN_BG"]},{"name":"const val BRIGHT_GREEN: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_GREEN","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-g-r-e-e-n.html","searchKeys":["BRIGHT_GREEN","const val BRIGHT_GREEN: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_GREEN"]},{"name":"const val BRIGHT_GREEN_BG: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_GREEN_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-g-r-e-e-n_-b-g.html","searchKeys":["BRIGHT_GREEN_BG","const val BRIGHT_GREEN_BG: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_GREEN_BG"]},{"name":"const val BRIGHT_MAGENTA: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_MAGENTA","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-m-a-g-e-n-t-a.html","searchKeys":["BRIGHT_MAGENTA","const val BRIGHT_MAGENTA: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_MAGENTA"]},{"name":"const val BRIGHT_MAGENTA_BG: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_MAGENTA_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-m-a-g-e-n-t-a_-b-g.html","searchKeys":["BRIGHT_MAGENTA_BG","const val BRIGHT_MAGENTA_BG: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_MAGENTA_BG"]},{"name":"const val BRIGHT_RED: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_RED","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-r-e-d.html","searchKeys":["BRIGHT_RED","const val BRIGHT_RED: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_RED"]},{"name":"const val BRIGHT_RED_BG: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_RED_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-r-e-d_-b-g.html","searchKeys":["BRIGHT_RED_BG","const val BRIGHT_RED_BG: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_RED_BG"]},{"name":"const val BRIGHT_WHITE: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_WHITE","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-w-h-i-t-e.html","searchKeys":["BRIGHT_WHITE","const val BRIGHT_WHITE: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_WHITE"]},{"name":"const val BRIGHT_WHITE_BG: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_WHITE_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-w-h-i-t-e_-b-g.html","searchKeys":["BRIGHT_WHITE_BG","const val BRIGHT_WHITE_BG: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_WHITE_BG"]},{"name":"const val BRIGHT_YELLOW: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_YELLOW","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-y-e-l-l-o-w.html","searchKeys":["BRIGHT_YELLOW","const val BRIGHT_YELLOW: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_YELLOW"]},{"name":"const val BRIGHT_YELLOW_BG: String","description":"com.hexagonkt.core.helpers.Ansi.BRIGHT_YELLOW_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-b-r-i-g-h-t_-y-e-l-l-o-w_-b-g.html","searchKeys":["BRIGHT_YELLOW_BG","const val BRIGHT_YELLOW_BG: String","com.hexagonkt.core.helpers.Ansi.BRIGHT_YELLOW_BG"]},{"name":"const val CYAN: String","description":"com.hexagonkt.core.helpers.Ansi.CYAN","location":"core/com.hexagonkt.core.helpers/-ansi/-c-y-a-n.html","searchKeys":["CYAN","const val CYAN: String","com.hexagonkt.core.helpers.Ansi.CYAN"]},{"name":"const val CYAN_BG: String","description":"com.hexagonkt.core.helpers.Ansi.CYAN_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-c-y-a-n_-b-g.html","searchKeys":["CYAN_BG","const val CYAN_BG: String","com.hexagonkt.core.helpers.Ansi.CYAN_BG"]},{"name":"const val DEFAULT: String","description":"com.hexagonkt.core.helpers.Ansi.DEFAULT","location":"core/com.hexagonkt.core.helpers/-ansi/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","const val DEFAULT: String","com.hexagonkt.core.helpers.Ansi.DEFAULT"]},{"name":"const val DEFAULT_BG: String","description":"com.hexagonkt.core.helpers.Ansi.DEFAULT_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-d-e-f-a-u-l-t_-b-g.html","searchKeys":["DEFAULT_BG","const val DEFAULT_BG: String","com.hexagonkt.core.helpers.Ansi.DEFAULT_BG"]},{"name":"const val GREEN: String","description":"com.hexagonkt.core.helpers.Ansi.GREEN","location":"core/com.hexagonkt.core.helpers/-ansi/-g-r-e-e-n.html","searchKeys":["GREEN","const val GREEN: String","com.hexagonkt.core.helpers.Ansi.GREEN"]},{"name":"const val GREEN_BG: String","description":"com.hexagonkt.core.helpers.Ansi.GREEN_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-g-r-e-e-n_-b-g.html","searchKeys":["GREEN_BG","const val GREEN_BG: String","com.hexagonkt.core.helpers.Ansi.GREEN_BG"]},{"name":"const val INVERSE: String","description":"com.hexagonkt.core.helpers.Ansi.INVERSE","location":"core/com.hexagonkt.core.helpers/-ansi/-i-n-v-e-r-s-e.html","searchKeys":["INVERSE","const val INVERSE: String","com.hexagonkt.core.helpers.Ansi.INVERSE"]},{"name":"const val INVERSE_OFF: String","description":"com.hexagonkt.core.helpers.Ansi.INVERSE_OFF","location":"core/com.hexagonkt.core.helpers/-ansi/-i-n-v-e-r-s-e_-o-f-f.html","searchKeys":["INVERSE_OFF","const val INVERSE_OFF: String","com.hexagonkt.core.helpers.Ansi.INVERSE_OFF"]},{"name":"const val MAGENTA: String","description":"com.hexagonkt.core.helpers.Ansi.MAGENTA","location":"core/com.hexagonkt.core.helpers/-ansi/-m-a-g-e-n-t-a.html","searchKeys":["MAGENTA","const val MAGENTA: String","com.hexagonkt.core.helpers.Ansi.MAGENTA"]},{"name":"const val MAGENTA_BG: String","description":"com.hexagonkt.core.helpers.Ansi.MAGENTA_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-m-a-g-e-n-t-a_-b-g.html","searchKeys":["MAGENTA_BG","const val MAGENTA_BG: String","com.hexagonkt.core.helpers.Ansi.MAGENTA_BG"]},{"name":"const val RED: String","description":"com.hexagonkt.core.helpers.Ansi.RED","location":"core/com.hexagonkt.core.helpers/-ansi/-r-e-d.html","searchKeys":["RED","const val RED: String","com.hexagonkt.core.helpers.Ansi.RED"]},{"name":"const val RED_BG: String","description":"com.hexagonkt.core.helpers.Ansi.RED_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-r-e-d_-b-g.html","searchKeys":["RED_BG","const val RED_BG: String","com.hexagonkt.core.helpers.Ansi.RED_BG"]},{"name":"const val RESET: String","description":"com.hexagonkt.core.helpers.Ansi.RESET","location":"core/com.hexagonkt.core.helpers/-ansi/-r-e-s-e-t.html","searchKeys":["RESET","const val RESET: String","com.hexagonkt.core.helpers.Ansi.RESET"]},{"name":"const val UNDERLINE: String","description":"com.hexagonkt.core.helpers.Ansi.UNDERLINE","location":"core/com.hexagonkt.core.helpers/-ansi/-u-n-d-e-r-l-i-n-e.html","searchKeys":["UNDERLINE","const val UNDERLINE: String","com.hexagonkt.core.helpers.Ansi.UNDERLINE"]},{"name":"const val UNDERLINE_OFF: String","description":"com.hexagonkt.core.helpers.Ansi.UNDERLINE_OFF","location":"core/com.hexagonkt.core.helpers/-ansi/-u-n-d-e-r-l-i-n-e_-o-f-f.html","searchKeys":["UNDERLINE_OFF","const val UNDERLINE_OFF: String","com.hexagonkt.core.helpers.Ansi.UNDERLINE_OFF"]},{"name":"const val WHITE: String","description":"com.hexagonkt.core.helpers.Ansi.WHITE","location":"core/com.hexagonkt.core.helpers/-ansi/-w-h-i-t-e.html","searchKeys":["WHITE","const val WHITE: String","com.hexagonkt.core.helpers.Ansi.WHITE"]},{"name":"const val WHITE_BG: String","description":"com.hexagonkt.core.helpers.Ansi.WHITE_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-w-h-i-t-e_-b-g.html","searchKeys":["WHITE_BG","const val WHITE_BG: String","com.hexagonkt.core.helpers.Ansi.WHITE_BG"]},{"name":"const val YELLOW: String","description":"com.hexagonkt.core.helpers.Ansi.YELLOW","location":"core/com.hexagonkt.core.helpers/-ansi/-y-e-l-l-o-w.html","searchKeys":["YELLOW","const val YELLOW: String","com.hexagonkt.core.helpers.Ansi.YELLOW"]},{"name":"const val YELLOW_BG: String","description":"com.hexagonkt.core.helpers.Ansi.YELLOW_BG","location":"core/com.hexagonkt.core.helpers/-ansi/-y-e-l-l-o-w_-b-g.html","searchKeys":["YELLOW_BG","const val YELLOW_BG: String","com.hexagonkt.core.helpers.Ansi.YELLOW_BG"]},{"name":"data class Glob(pattern: String)","description":"com.hexagonkt.core.helpers.Glob","location":"core/com.hexagonkt.core.helpers/-glob/index.html","searchKeys":["Glob","data class Glob(pattern: String)","com.hexagonkt.core.helpers.Glob"]},{"name":"enum LoggingLevel : Enum<LoggingLevel> ","description":"com.hexagonkt.core.logging.LoggingLevel","location":"core/com.hexagonkt.core.logging/-logging-level/index.html","searchKeys":["LoggingLevel","enum LoggingLevel : Enum<LoggingLevel> ","com.hexagonkt.core.logging.LoggingLevel"]},{"name":"fun <E : Throwable> error(exception: E, message: (E) -> Any?)","description":"com.hexagonkt.core.logging.Logger.error","location":"core/com.hexagonkt.core.logging/-logger/error.html","searchKeys":["error","fun <E : Throwable> error(exception: E, message: (E) -> Any?)","com.hexagonkt.core.logging.Logger.error"]},{"name":"fun <E : Throwable> warn(exception: E, message: (E) -> Any?)","description":"com.hexagonkt.core.logging.Logger.warn","location":"core/com.hexagonkt.core.logging/-logger/warn.html","searchKeys":["warn","fun <E : Throwable> warn(exception: E, message: (E) -> Any?)","com.hexagonkt.core.logging.Logger.warn"]},{"name":"fun <K, V> Map<K, List<V>>.toMultiMap(): MultiMap<K, V>","description":"com.hexagonkt.core.helpers.toMultiMap","location":"core/com.hexagonkt.core.helpers/to-multi-map.html","searchKeys":["toMultiMap","fun <K, V> Map<K, List<V>>.toMultiMap(): MultiMap<K, V>","com.hexagonkt.core.helpers.toMultiMap"]},{"name":"fun <K, V> Map<K, V>.require(name: K): V","description":"com.hexagonkt.core.helpers.require","location":"core/com.hexagonkt.core.helpers/require.html","searchKeys":["require","fun <K, V> Map<K, V>.require(name: K): V","com.hexagonkt.core.helpers.require"]},{"name":"fun <K, V> Map<K, V?>.filterEmpty(): Map<K, V>","description":"com.hexagonkt.core.helpers.filterEmpty","location":"core/com.hexagonkt.core.helpers/filter-empty.html","searchKeys":["filterEmpty","fun <K, V> Map<K, V?>.filterEmpty(): Map<K, V>","com.hexagonkt.core.helpers.filterEmpty"]},{"name":"fun <K, V> MultiMap(mapData: Map<K, List<V>>)","description":"com.hexagonkt.core.helpers.MultiMap.MultiMap","location":"core/com.hexagonkt.core.helpers/-multi-map/-multi-map.html","searchKeys":["MultiMap","fun <K, V> MultiMap(mapData: Map<K, List<V>>)","com.hexagonkt.core.helpers.MultiMap.MultiMap"]},{"name":"fun <K, V> multiMapOf(vararg pairs: Pair<K, List<V>>): MultiMap<K, V>","description":"com.hexagonkt.core.helpers.multiMapOf","location":"core/com.hexagonkt.core.helpers/multi-map-of.html","searchKeys":["multiMapOf","fun <K, V> multiMapOf(vararg pairs: Pair<K, List<V>>): MultiMap<K, V>","com.hexagonkt.core.helpers.multiMapOf"]},{"name":"fun <S : Any, T : Any> convert(source: S, target: KClass<T>): T","description":"com.hexagonkt.core.converters.ConvertersManager.convert","location":"core/com.hexagonkt.core.converters/-converters-manager/convert.html","searchKeys":["convert","fun <S : Any, T : Any> convert(source: S, target: KClass<T>): T","com.hexagonkt.core.converters.ConvertersManager.convert"]},{"name":"fun <S : Any, T : Any> register(key: Pair<KClass<S>, KClass<T>>, block: (S) -> T)","description":"com.hexagonkt.core.converters.ConvertersManager.register","location":"core/com.hexagonkt.core.converters/-converters-manager/register.html","searchKeys":["register","fun <S : Any, T : Any> register(key: Pair<KClass<S>, KClass<T>>, block: (S) -> T)","com.hexagonkt.core.converters.ConvertersManager.register"]},{"name":"fun <T : Any> Any.convert(target: KClass<T>): T","description":"com.hexagonkt.core.converters.convert","location":"core/com.hexagonkt.core.converters/convert.html","searchKeys":["convert","fun <T : Any> Any.convert(target: KClass<T>): T","com.hexagonkt.core.converters.convert"]},{"name":"fun <T : Any> Map<*, *>.requireKeys(vararg name: Any): T","description":"com.hexagonkt.core.helpers.requireKeys","location":"core/com.hexagonkt.core.helpers/require-keys.html","searchKeys":["requireKeys","fun <T : Any> Map<*, *>.requireKeys(vararg name: Any): T","com.hexagonkt.core.helpers.requireKeys"]},{"name":"fun <T : Any> systemSetting(type: KClass<T>, name: String): T?","description":"com.hexagonkt.core.helpers.Jvm.systemSetting","location":"core/com.hexagonkt.core.helpers/-jvm/system-setting.html","searchKeys":["systemSetting","fun <T : Any> systemSetting(type: KClass<T>, name: String): T?","com.hexagonkt.core.helpers.Jvm.systemSetting"]},{"name":"fun <T : ResourceBundle> resourceBundle(type: KClass<T>, locale: Locale = Locale.getDefault()): ResourceBundle","description":"com.hexagonkt.core.helpers.resourceBundle","location":"core/com.hexagonkt.core.helpers/resource-bundle.html","searchKeys":["resourceBundle","fun <T : ResourceBundle> resourceBundle(type: KClass<T>, locale: Locale = Locale.getDefault()): ResourceBundle","com.hexagonkt.core.helpers.resourceBundle"]},{"name":"fun <T> T.debug(prefix: String = \"\"): T","description":"com.hexagonkt.core.logging.debug","location":"core/com.hexagonkt.core.logging/debug.html","searchKeys":["debug","fun <T> T.debug(prefix: String = \"\"): T","com.hexagonkt.core.logging.debug"]},{"name":"fun <T> T.info(prefix: String = \"\"): T","description":"com.hexagonkt.core.logging.info","location":"core/com.hexagonkt.core.logging/info.html","searchKeys":["info","fun <T> T.info(prefix: String = \"\"): T","com.hexagonkt.core.logging.info"]},{"name":"fun <T> T.println(prefix: String = \"\"): T","description":"com.hexagonkt.core.helpers.println","location":"core/com.hexagonkt.core.helpers/println.html","searchKeys":["println","fun <T> T.println(prefix: String = \"\"): T","com.hexagonkt.core.helpers.println"]},{"name":"fun <T> T.trace(prefix: String = \"\"): T","description":"com.hexagonkt.core.logging.trace","location":"core/com.hexagonkt.core.logging/trace.html","searchKeys":["trace","fun <T> T.trace(prefix: String = \"\"): T","com.hexagonkt.core.logging.trace"]},{"name":"fun <T> retry(times: Int, delay: Long, block: () -> T): T","description":"com.hexagonkt.core.helpers.retry","location":"core/com.hexagonkt.core.helpers/retry.html","searchKeys":["retry","fun <T> retry(times: Int, delay: Long, block: () -> T): T","com.hexagonkt.core.helpers.retry"]},{"name":"fun <T> time(message: () -> Any? = { null }, block: () -> T): T","description":"com.hexagonkt.core.logging.Logger.time","location":"core/com.hexagonkt.core.logging/-logger/time.html","searchKeys":["time","fun <T> time(message: () -> Any? = { null }, block: () -> T): T","com.hexagonkt.core.logging.Logger.time"]},{"name":"fun <T> time(message: Any?, block: () -> T): T","description":"com.hexagonkt.core.logging.Logger.time","location":"core/com.hexagonkt.core.logging/-logger/time.html","searchKeys":["time","fun <T> time(message: Any?, block: () -> T): T","com.hexagonkt.core.logging.Logger.time"]},{"name":"fun <V> List<V?>.filterEmpty(): List<V>","description":"com.hexagonkt.core.helpers.filterEmpty","location":"core/com.hexagonkt.core.helpers/filter-empty.html","searchKeys":["filterEmpty","fun <V> List<V?>.filterEmpty(): List<V>","com.hexagonkt.core.helpers.filterEmpty"]},{"name":"fun <V> notEmpty(value: V?): Boolean","description":"com.hexagonkt.core.helpers.notEmpty","location":"core/com.hexagonkt.core.helpers/not-empty.html","searchKeys":["notEmpty","fun <V> notEmpty(value: V?): Boolean","com.hexagonkt.core.helpers.notEmpty"]},{"name":"fun <Z> Collection<Z>.ensureSize(count: IntRange): Collection<Z>","description":"com.hexagonkt.core.helpers.ensureSize","location":"core/com.hexagonkt.core.helpers/ensure-size.html","searchKeys":["ensureSize","fun <Z> Collection<Z>.ensureSize(count: IntRange): Collection<Z>","com.hexagonkt.core.helpers.ensureSize"]},{"name":"fun ByteArray.encodeToBase64(): String","description":"com.hexagonkt.core.helpers.encodeToBase64","location":"core/com.hexagonkt.core.helpers/encode-to-base64.html","searchKeys":["encodeToBase64","fun ByteArray.encodeToBase64(): String","com.hexagonkt.core.helpers.encodeToBase64"]},{"name":"fun CodedException(code: Int, message: String = \"\", cause: Throwable? = null)","description":"com.hexagonkt.core.helpers.CodedException.CodedException","location":"core/com.hexagonkt.core.helpers/-coded-exception/-coded-exception.html","searchKeys":["CodedException","fun CodedException(code: Int, message: String = \"\", cause: Throwable? = null)","com.hexagonkt.core.helpers.CodedException.CodedException"]},{"name":"fun Date.toLocalDate(): LocalDate","description":"com.hexagonkt.core.helpers.toLocalDate","location":"core/com.hexagonkt.core.helpers/to-local-date.html","searchKeys":["toLocalDate","fun Date.toLocalDate(): LocalDate","com.hexagonkt.core.helpers.toLocalDate"]},{"name":"fun Date.toLocalDateTime(): LocalDateTime","description":"com.hexagonkt.core.helpers.toLocalDateTime","location":"core/com.hexagonkt.core.helpers/to-local-date-time.html","searchKeys":["toLocalDateTime","fun Date.toLocalDateTime(): LocalDateTime","com.hexagonkt.core.helpers.toLocalDateTime"]},{"name":"fun Glob(pattern: String)","description":"com.hexagonkt.core.helpers.Glob.Glob","location":"core/com.hexagonkt.core.helpers/-glob/-glob.html","searchKeys":["Glob","fun Glob(pattern: String)","com.hexagonkt.core.helpers.Glob.Glob"]},{"name":"fun Int.toLocalDate(): LocalDate","description":"com.hexagonkt.core.helpers.toLocalDate","location":"core/com.hexagonkt.core.helpers/to-local-date.html","searchKeys":["toLocalDate","fun Int.toLocalDate(): LocalDate","com.hexagonkt.core.helpers.toLocalDate"]},{"name":"fun Int.toLocalTime(): LocalTime","description":"com.hexagonkt.core.helpers.toLocalTime","location":"core/com.hexagonkt.core.helpers/to-local-time.html","searchKeys":["toLocalTime","fun Int.toLocalTime(): LocalTime","com.hexagonkt.core.helpers.toLocalTime"]},{"name":"fun KeyStore.getPrivateKey(alias: String, password: String): RSAPrivateKey","description":"com.hexagonkt.core.security.getPrivateKey","location":"core/com.hexagonkt.core.security/get-private-key.html","searchKeys":["getPrivateKey","fun KeyStore.getPrivateKey(alias: String, password: String): RSAPrivateKey","com.hexagonkt.core.security.getPrivateKey"]},{"name":"fun KeyStore.getPublicKey(alias: String): RSAPublicKey","description":"com.hexagonkt.core.security.getPublicKey","location":"core/com.hexagonkt.core.security/get-public-key.html","searchKeys":["getPublicKey","fun KeyStore.getPublicKey(alias: String): RSAPublicKey","com.hexagonkt.core.security.getPublicKey"]},{"name":"fun List<String>.exec(workingDirectory: File = File(System.getProperty(\"user.dir\")), timeout: Long = Long.MAX_VALUE, fail: Boolean = false): String","description":"com.hexagonkt.core.helpers.exec","location":"core/com.hexagonkt.core.helpers/exec.html","searchKeys":["exec","fun List<String>.exec(workingDirectory: File = File(System.getProperty(\"user.dir\")), timeout: Long = Long.MAX_VALUE, fail: Boolean = false): String","com.hexagonkt.core.helpers.exec"]},{"name":"fun LocalDate.toDate(): Date","description":"com.hexagonkt.core.helpers.toDate","location":"core/com.hexagonkt.core.helpers/to-date.html","searchKeys":["toDate","fun LocalDate.toDate(): Date","com.hexagonkt.core.helpers.toDate"]},{"name":"fun LocalDate.toNumber(): Int","description":"com.hexagonkt.core.helpers.toNumber","location":"core/com.hexagonkt.core.helpers/to-number.html","searchKeys":["toNumber","fun LocalDate.toNumber(): Int","com.hexagonkt.core.helpers.toNumber"]},{"name":"fun LocalDateTime.toDate(): Date","description":"com.hexagonkt.core.helpers.toDate","location":"core/com.hexagonkt.core.helpers/to-date.html","searchKeys":["toDate","fun LocalDateTime.toDate(): Date","com.hexagonkt.core.helpers.toDate"]},{"name":"fun LocalDateTime.toNumber(): Long","description":"com.hexagonkt.core.helpers.toNumber","location":"core/com.hexagonkt.core.helpers/to-number.html","searchKeys":["toNumber","fun LocalDateTime.toNumber(): Long","com.hexagonkt.core.helpers.toNumber"]},{"name":"fun LocalDateTime.withZone(zoneId: ZoneId = Jvm.timeZone.toZoneId()): ZonedDateTime","description":"com.hexagonkt.core.helpers.withZone","location":"core/com.hexagonkt.core.helpers/with-zone.html","searchKeys":["withZone","fun LocalDateTime.withZone(zoneId: ZoneId = Jvm.timeZone.toZoneId()): ZonedDateTime","com.hexagonkt.core.helpers.withZone"]},{"name":"fun LocalTime.toNumber(): Int","description":"com.hexagonkt.core.helpers.toNumber","location":"core/com.hexagonkt.core.helpers/to-number.html","searchKeys":["toNumber","fun LocalTime.toNumber(): Int","com.hexagonkt.core.helpers.toNumber"]},{"name":"fun Logger(name: String)","description":"com.hexagonkt.core.logging.Logger.Logger","location":"core/com.hexagonkt.core.logging/-logger/-logger.html","searchKeys":["Logger","fun Logger(name: String)","com.hexagonkt.core.logging.Logger.Logger"]},{"name":"fun Logger(type: KClass<*>)","description":"com.hexagonkt.core.logging.Logger.Logger","location":"core/com.hexagonkt.core.logging/-logger/-logger.html","searchKeys":["Logger","fun Logger(type: KClass<*>)","com.hexagonkt.core.logging.Logger.Logger"]},{"name":"fun Long.toLocalDateTime(): LocalDateTime","description":"com.hexagonkt.core.helpers.toLocalDateTime","location":"core/com.hexagonkt.core.helpers/to-local-date-time.html","searchKeys":["toLocalDateTime","fun Long.toLocalDateTime(): LocalDateTime","com.hexagonkt.core.helpers.toLocalDateTime"]},{"name":"fun MapResourceBundle(map: Map<*, *>)","description":"com.hexagonkt.core.helpers.MapResourceBundle.MapResourceBundle","location":"core/com.hexagonkt.core.helpers/-map-resource-bundle/-map-resource-bundle.html","searchKeys":["MapResourceBundle","fun MapResourceBundle(map: Map<*, *>)","com.hexagonkt.core.helpers.MapResourceBundle.MapResourceBundle"]},{"name":"fun MultipleException(causes: List<Throwable>, message: String = \"\")","description":"com.hexagonkt.core.helpers.MultipleException.MultipleException","location":"core/com.hexagonkt.core.helpers/-multiple-exception/-multiple-exception.html","searchKeys":["MultipleException","fun MultipleException(causes: List<Throwable>, message: String = \"\")","com.hexagonkt.core.helpers.MultipleException.MultipleException"]},{"name":"fun MultipleException(message: String, causes: List<Throwable>)","description":"com.hexagonkt.core.helpers.MultipleException.MultipleException","location":"core/com.hexagonkt.core.helpers/-multiple-exception/-multiple-exception.html","searchKeys":["MultipleException","fun MultipleException(message: String, causes: List<Throwable>)","com.hexagonkt.core.helpers.MultipleException.MultipleException"]},{"name":"fun MultipleException(message: String, vararg causes: Throwable)","description":"com.hexagonkt.core.helpers.MultipleException.MultipleException","location":"core/com.hexagonkt.core.helpers/-multiple-exception/-multiple-exception.html","searchKeys":["MultipleException","fun MultipleException(message: String, vararg causes: Throwable)","com.hexagonkt.core.helpers.MultipleException.MultipleException"]},{"name":"fun MultipleException(vararg causes: Throwable)","description":"com.hexagonkt.core.helpers.MultipleException.MultipleException","location":"core/com.hexagonkt.core.helpers/-multiple-exception/-multiple-exception.html","searchKeys":["MultipleException","fun MultipleException(vararg causes: Throwable)","com.hexagonkt.core.helpers.MultipleException.MultipleException"]},{"name":"fun PatternFormat(useColor: Boolean = true)","description":"com.hexagonkt.core.logging.jul.PatternFormat.PatternFormat","location":"core/com.hexagonkt.core.logging.jul/-pattern-format/-pattern-format.html","searchKeys":["PatternFormat","fun PatternFormat(useColor: Boolean = true)","com.hexagonkt.core.logging.jul.PatternFormat.PatternFormat"]},{"name":"fun Regex.findGroups(text: String): List<MatchGroup>","description":"com.hexagonkt.core.helpers.findGroups","location":"core/com.hexagonkt.core.helpers/find-groups.html","searchKeys":["findGroups","fun Regex.findGroups(text: String): List<MatchGroup>","com.hexagonkt.core.helpers.findGroups"]},{"name":"fun ResourceNotFoundException(message: String)","description":"com.hexagonkt.core.ResourceNotFoundException.ResourceNotFoundException","location":"core/com.hexagonkt.core/-resource-not-found-exception/-resource-not-found-exception.html","searchKeys":["ResourceNotFoundException","fun ResourceNotFoundException(message: String)","com.hexagonkt.core.ResourceNotFoundException.ResourceNotFoundException"]},{"name":"fun String.banner(bannerDelimiter: String = \"*\"): String","description":"com.hexagonkt.core.helpers.banner","location":"core/com.hexagonkt.core.helpers/banner.html","searchKeys":["banner","fun String.banner(bannerDelimiter: String = \"*\"): String","com.hexagonkt.core.helpers.banner"]},{"name":"fun String.camelToSnake(): String","description":"com.hexagonkt.core.helpers.camelToSnake","location":"core/com.hexagonkt.core.helpers/camel-to-snake.html","searchKeys":["camelToSnake","fun String.camelToSnake(): String","com.hexagonkt.core.helpers.camelToSnake"]},{"name":"fun String.decodeBase64(): ByteArray","description":"com.hexagonkt.core.helpers.decodeBase64","location":"core/com.hexagonkt.core.helpers/decode-base64.html","searchKeys":["decodeBase64","fun String.decodeBase64(): ByteArray","com.hexagonkt.core.helpers.decodeBase64"]},{"name":"fun String.encodeToBase64(): String","description":"com.hexagonkt.core.helpers.encodeToBase64","location":"core/com.hexagonkt.core.helpers/encode-to-base64.html","searchKeys":["encodeToBase64","fun String.encodeToBase64(): String","com.hexagonkt.core.helpers.encodeToBase64"]},{"name":"fun String.exec(workingDirectory: File = File(System.getProperty(\"user.dir\")), timeout: Long = Long.MAX_VALUE, fail: Boolean = false): String","description":"com.hexagonkt.core.helpers.exec","location":"core/com.hexagonkt.core.helpers/exec.html","searchKeys":["exec","fun String.exec(workingDirectory: File = File(System.getProperty(\"user.dir\")), timeout: Long = Long.MAX_VALUE, fail: Boolean = false): String","com.hexagonkt.core.helpers.exec"]},{"name":"fun String.filter(prefix: String, suffix: String, vararg parameters: Pair<String, String>): String","description":"com.hexagonkt.core.helpers.filter","location":"core/com.hexagonkt.core.helpers/filter.html","searchKeys":["filter","fun String.filter(prefix: String, suffix: String, vararg parameters: Pair<String, String>): String","com.hexagonkt.core.helpers.filter"]},{"name":"fun String.filterVars(parameters: Map<*, *>): String","description":"com.hexagonkt.core.helpers.filterVars","location":"core/com.hexagonkt.core.helpers/filter-vars.html","searchKeys":["filterVars","fun String.filterVars(parameters: Map<*, *>): String","com.hexagonkt.core.helpers.filterVars"]},{"name":"fun String.filterVars(vararg parameters: Pair<*, *>): String","description":"com.hexagonkt.core.helpers.filterVars","location":"core/com.hexagonkt.core.helpers/filter-vars.html","searchKeys":["filterVars","fun String.filterVars(vararg parameters: Pair<*, *>): String","com.hexagonkt.core.helpers.filterVars"]},{"name":"fun String.prependIndent(count: Int = 4, pad: String = \" \"): String","description":"com.hexagonkt.core.helpers.prependIndent","location":"core/com.hexagonkt.core.helpers/prepend-indent.html","searchKeys":["prependIndent","fun String.prependIndent(count: Int = 4, pad: String = \" \"): String","com.hexagonkt.core.helpers.prependIndent"]},{"name":"fun String.snakeToCamel(): String","description":"com.hexagonkt.core.helpers.snakeToCamel","location":"core/com.hexagonkt.core.helpers/snake-to-camel.html","searchKeys":["snakeToCamel","fun String.snakeToCamel(): String","com.hexagonkt.core.helpers.snakeToCamel"]},{"name":"fun String.stripAccents(): String","description":"com.hexagonkt.core.helpers.stripAccents","location":"core/com.hexagonkt.core.helpers/strip-accents.html","searchKeys":["stripAccents","fun String.stripAccents(): String","com.hexagonkt.core.helpers.stripAccents"]},{"name":"fun String.toStream(): InputStream","description":"com.hexagonkt.core.helpers.toStream","location":"core/com.hexagonkt.core.helpers/to-stream.html","searchKeys":["toStream","fun String.toStream(): InputStream","com.hexagonkt.core.helpers.toStream"]},{"name":"fun SystemOutHandler(handlerFormatter: Formatter = PatternFormat())","description":"com.hexagonkt.core.logging.jul.SystemOutHandler.SystemOutHandler","location":"core/com.hexagonkt.core.logging.jul/-system-out-handler/-system-out-handler.html","searchKeys":["SystemOutHandler","fun SystemOutHandler(handlerFormatter: Formatter = PatternFormat())","com.hexagonkt.core.logging.jul.SystemOutHandler.SystemOutHandler"]},{"name":"fun Throwable.filterStackTrace(prefix: String): Array<out StackTraceElement>","description":"com.hexagonkt.core.helpers.filterStackTrace","location":"core/com.hexagonkt.core.helpers/filter-stack-trace.html","searchKeys":["filterStackTrace","fun Throwable.filterStackTrace(prefix: String): Array<out StackTraceElement>","com.hexagonkt.core.helpers.filterStackTrace"]},{"name":"fun Throwable.toText(prefix: String = \"\"): String","description":"com.hexagonkt.core.helpers.toText","location":"core/com.hexagonkt.core.helpers/to-text.html","searchKeys":["toText","fun Throwable.toText(prefix: String = \"\"): String","com.hexagonkt.core.helpers.toText"]},{"name":"fun UUID.bytes(): ByteArray","description":"com.hexagonkt.core.helpers.bytes","location":"core/com.hexagonkt.core.helpers/bytes.html","searchKeys":["bytes","fun UUID.bytes(): ByteArray","com.hexagonkt.core.helpers.bytes"]},{"name":"fun UUID.toBase64(): String","description":"com.hexagonkt.core.helpers.toBase64","location":"core/com.hexagonkt.core.helpers/to-base64.html","searchKeys":["toBase64","fun UUID.toBase64(): String","com.hexagonkt.core.helpers.toBase64"]},{"name":"fun ZonedDateTime.toDate(): Date","description":"com.hexagonkt.core.helpers.toDate","location":"core/com.hexagonkt.core.helpers/to-date.html","searchKeys":["toDate","fun ZonedDateTime.toDate(): Date","com.hexagonkt.core.helpers.toDate"]},{"name":"fun chainHmac(algorithm: String, vararg fields: String): ByteArray","description":"com.hexagonkt.core.security.chainHmac","location":"core/com.hexagonkt.core.security/chain-hmac.html","searchKeys":["chainHmac","fun chainHmac(algorithm: String, vararg fields: String): ByteArray","com.hexagonkt.core.security.chainHmac"]},{"name":"fun check(message: String = \"Multiple exceptions\", vararg blocks: () -> Unit)","description":"com.hexagonkt.core.helpers.check","location":"core/com.hexagonkt.core.helpers/check.html","searchKeys":["check","fun check(message: String = \"Multiple exceptions\", vararg blocks: () -> Unit)","com.hexagonkt.core.helpers.check"]},{"name":"fun createURLStreamHandler(protocol: String): URLStreamHandler?","description":"com.hexagonkt.core.ClasspathHandler.createURLStreamHandler","location":"core/com.hexagonkt.core/-classpath-handler/create-u-r-l-stream-handler.html","searchKeys":["createURLStreamHandler","fun createURLStreamHandler(protocol: String): URLStreamHandler?","com.hexagonkt.core.ClasspathHandler.createURLStreamHandler"]},{"name":"fun debug(message: () -> Any?)","description":"com.hexagonkt.core.logging.Logger.debug","location":"core/com.hexagonkt.core.logging/-logger/debug.html","searchKeys":["debug","fun debug(message: () -> Any?)","com.hexagonkt.core.logging.Logger.debug"]},{"name":"fun error(message: () -> Any?)","description":"com.hexagonkt.core.logging.Logger.error","location":"core/com.hexagonkt.core.logging/-logger/error.html","searchKeys":["error","fun error(message: () -> Any?)","com.hexagonkt.core.logging.Logger.error"]},{"name":"fun flare(message: () -> Any? = { \"\" })","description":"com.hexagonkt.core.logging.Logger.flare","location":"core/com.hexagonkt.core.logging/-logger/flare.html","searchKeys":["flare","fun flare(message: () -> Any? = { \"\" })","com.hexagonkt.core.logging.Logger.flare"]},{"name":"fun freePort(): Int","description":"com.hexagonkt.core.helpers.freePort","location":"core/com.hexagonkt.core.helpers/free-port.html","searchKeys":["freePort","fun freePort(): Int","com.hexagonkt.core.helpers.freePort"]},{"name":"fun hash(algorithm: String, data: ByteArray): ByteArray","description":"com.hexagonkt.core.security.hash","location":"core/com.hexagonkt.core.security/hash.html","searchKeys":["hash","fun hash(algorithm: String, data: ByteArray): ByteArray","com.hexagonkt.core.security.hash"]},{"name":"fun hash(algorithm: String, data: String): ByteArray","description":"com.hexagonkt.core.security.hash","location":"core/com.hexagonkt.core.security/hash.html","searchKeys":["hash","fun hash(algorithm: String, data: String): ByteArray","com.hexagonkt.core.security.hash"]},{"name":"fun hmac(algorithm: String, data: ByteArray, key: ByteArray): ByteArray","description":"com.hexagonkt.core.security.hmac","location":"core/com.hexagonkt.core.security/hmac.html","searchKeys":["hmac","fun hmac(algorithm: String, data: ByteArray, key: ByteArray): ByteArray","com.hexagonkt.core.security.hmac"]},{"name":"fun info(message: () -> Any?)","description":"com.hexagonkt.core.logging.Logger.info","location":"core/com.hexagonkt.core.logging/-logger/info.html","searchKeys":["info","fun info(message: () -> Any?)","com.hexagonkt.core.logging.Logger.info"]},{"name":"fun initialMemory(): String","description":"com.hexagonkt.core.helpers.Jvm.initialMemory","location":"core/com.hexagonkt.core.helpers/-jvm/initial-memory.html","searchKeys":["initialMemory","fun initialMemory(): String","com.hexagonkt.core.helpers.Jvm.initialMemory"]},{"name":"fun isPortOpened(port: Int): Boolean","description":"com.hexagonkt.core.helpers.isPortOpened","location":"core/com.hexagonkt.core.helpers/is-port-opened.html","searchKeys":["isPortOpened","fun isPortOpened(port: Int): Boolean","com.hexagonkt.core.helpers.isPortOpened"]},{"name":"fun loadKeyStore(resource: URL, password: String): KeyStore","description":"com.hexagonkt.core.security.loadKeyStore","location":"core/com.hexagonkt.core.security/load-key-store.html","searchKeys":["loadKeyStore","fun loadKeyStore(resource: URL, password: String): KeyStore","com.hexagonkt.core.security.loadKeyStore"]},{"name":"fun matches(text: String): Boolean","description":"com.hexagonkt.core.helpers.Glob.matches","location":"core/com.hexagonkt.core.helpers/-glob/matches.html","searchKeys":["matches","fun matches(text: String): Boolean","com.hexagonkt.core.helpers.Glob.matches"]},{"name":"fun registerHandler()","description":"com.hexagonkt.core.ClasspathHandler.registerHandler","location":"core/com.hexagonkt.core/-classpath-handler/register-handler.html","searchKeys":["registerHandler","fun registerHandler()","com.hexagonkt.core.ClasspathHandler.registerHandler"]},{"name":"fun remove(key: Pair<KClass<*>, KClass<*>>)","description":"com.hexagonkt.core.converters.ConvertersManager.remove","location":"core/com.hexagonkt.core.converters/-converters-manager/remove.html","searchKeys":["remove","fun remove(key: Pair<KClass<*>, KClass<*>>)","com.hexagonkt.core.converters.ConvertersManager.remove"]},{"name":"fun setLoggerLevel(instance: Any, level: LoggingLevel)","description":"com.hexagonkt.core.logging.LoggingManager.setLoggerLevel","location":"core/com.hexagonkt.core.logging/-logging-manager/set-logger-level.html","searchKeys":["setLoggerLevel","fun setLoggerLevel(instance: Any, level: LoggingLevel)","com.hexagonkt.core.logging.LoggingManager.setLoggerLevel"]},{"name":"fun setLoggerLevel(level: LoggingLevel)","description":"com.hexagonkt.core.logging.LoggingManager.setLoggerLevel","location":"core/com.hexagonkt.core.logging/-logging-manager/set-logger-level.html","searchKeys":["setLoggerLevel","fun setLoggerLevel(level: LoggingLevel)","com.hexagonkt.core.logging.LoggingManager.setLoggerLevel"]},{"name":"fun setLoggerLevel(name: String, level: LoggingLevel)","description":"com.hexagonkt.core.logging.LoggingManager.setLoggerLevel","location":"core/com.hexagonkt.core.logging/-logging-manager/set-logger-level.html","searchKeys":["setLoggerLevel","fun setLoggerLevel(name: String, level: LoggingLevel)","com.hexagonkt.core.logging.LoggingManager.setLoggerLevel"]},{"name":"fun setLoggerLevel(type: KClass<*>, level: LoggingLevel)","description":"com.hexagonkt.core.logging.LoggingManager.setLoggerLevel","location":"core/com.hexagonkt.core.logging/-logging-manager/set-logger-level.html","searchKeys":["setLoggerLevel","fun setLoggerLevel(type: KClass<*>, level: LoggingLevel)","com.hexagonkt.core.logging.LoggingManager.setLoggerLevel"]},{"name":"fun sign(algorithm: String, data: String, key: ByteArray): ByteArray","description":"com.hexagonkt.core.security.sign","location":"core/com.hexagonkt.core.security/sign.html","searchKeys":["sign","fun sign(algorithm: String, data: String, key: ByteArray): ByteArray","com.hexagonkt.core.security.sign"]},{"name":"fun systemFlag(name: String): Boolean","description":"com.hexagonkt.core.helpers.Jvm.systemFlag","location":"core/com.hexagonkt.core.helpers/-jvm/system-flag.html","searchKeys":["systemFlag","fun systemFlag(name: String): Boolean","com.hexagonkt.core.helpers.Jvm.systemFlag"]},{"name":"fun time(startNanos: Long, message: () -> Any? = { \"\" })","description":"com.hexagonkt.core.logging.Logger.time","location":"core/com.hexagonkt.core.logging/-logger/time.html","searchKeys":["time","fun time(startNanos: Long, message: () -> Any? = { \"\" })","com.hexagonkt.core.logging.Logger.time"]},{"name":"fun trace(message: () -> Any?)","description":"com.hexagonkt.core.logging.Logger.trace","location":"core/com.hexagonkt.core.logging/-logger/trace.html","searchKeys":["trace","fun trace(message: () -> Any?)","com.hexagonkt.core.logging.Logger.trace"]},{"name":"fun uptime(): String","description":"com.hexagonkt.core.helpers.Jvm.uptime","location":"core/com.hexagonkt.core.helpers/-jvm/uptime.html","searchKeys":["uptime","fun uptime(): String","com.hexagonkt.core.helpers.Jvm.uptime"]},{"name":"fun usedMemory(): String","description":"com.hexagonkt.core.helpers.Jvm.usedMemory","location":"core/com.hexagonkt.core.helpers/-jvm/used-memory.html","searchKeys":["usedMemory","fun usedMemory(): String","com.hexagonkt.core.helpers.Jvm.usedMemory"]},{"name":"fun utf8(vararg bytes: Int): String","description":"com.hexagonkt.core.helpers.utf8","location":"core/com.hexagonkt.core.helpers/utf8.html","searchKeys":["utf8","fun utf8(vararg bytes: Int): String","com.hexagonkt.core.helpers.utf8"]},{"name":"fun uuid(bytes: ByteArray): UUID","description":"com.hexagonkt.core.helpers.uuid","location":"core/com.hexagonkt.core.helpers/uuid.html","searchKeys":["uuid","fun uuid(bytes: ByteArray): UUID","com.hexagonkt.core.helpers.uuid"]},{"name":"fun uuid(text: String): UUID","description":"com.hexagonkt.core.helpers.uuid","location":"core/com.hexagonkt.core.helpers/uuid.html","searchKeys":["uuid","fun uuid(text: String): UUID","com.hexagonkt.core.helpers.uuid"]},{"name":"fun warn(message: () -> Any?)","description":"com.hexagonkt.core.logging.Logger.warn","location":"core/com.hexagonkt.core.logging/-logger/warn.html","searchKeys":["warn","fun warn(message: () -> Any?)","com.hexagonkt.core.logging.Logger.warn"]},{"name":"inline fun <T : Any> Any.convert(): T","description":"com.hexagonkt.core.converters.convert","location":"core/com.hexagonkt.core.converters/convert.html","searchKeys":["convert","inline fun <T : Any> Any.convert(): T","com.hexagonkt.core.converters.convert"]},{"name":"inline fun <T : Any> systemSetting(name: String): T?","description":"com.hexagonkt.core.helpers.Jvm.systemSetting","location":"core/com.hexagonkt.core.helpers/-jvm/system-setting.html","searchKeys":["systemSetting","inline fun <T : Any> systemSetting(name: String): T?","com.hexagonkt.core.helpers.Jvm.systemSetting"]},{"name":"inline fun <T : ResourceBundle> resourceBundle(locale: Locale = Locale.getDefault()): ResourceBundle","description":"com.hexagonkt.core.helpers.resourceBundle","location":"core/com.hexagonkt.core.helpers/resource-bundle.html","searchKeys":["resourceBundle","inline fun <T : ResourceBundle> resourceBundle(locale: Locale = Locale.getDefault()): ResourceBundle","com.hexagonkt.core.helpers.resourceBundle"]},{"name":"interface LoggerPort","description":"com.hexagonkt.core.logging.LoggerPort","location":"core/com.hexagonkt.core.logging/-logger-port/index.html","searchKeys":["LoggerPort","interface LoggerPort","com.hexagonkt.core.logging.LoggerPort"]},{"name":"interface LoggingPort","description":"com.hexagonkt.core.logging.LoggingPort","location":"core/com.hexagonkt.core.logging/-logging-port/index.html","searchKeys":["LoggingPort","interface LoggingPort","com.hexagonkt.core.logging.LoggingPort"]},{"name":"object Ansi","description":"com.hexagonkt.core.helpers.Ansi","location":"core/com.hexagonkt.core.helpers/-ansi/index.html","searchKeys":["Ansi","object Ansi","com.hexagonkt.core.helpers.Ansi"]},{"name":"object ClasspathHandler : URLStreamHandler","description":"com.hexagonkt.core.ClasspathHandler","location":"core/com.hexagonkt.core/-classpath-handler/index.html","searchKeys":["ClasspathHandler","object ClasspathHandler : URLStreamHandler","com.hexagonkt.core.ClasspathHandler"]},{"name":"object ConvertersManager","description":"com.hexagonkt.core.converters.ConvertersManager","location":"core/com.hexagonkt.core.converters/-converters-manager/index.html","searchKeys":["ConvertersManager","object ConvertersManager","com.hexagonkt.core.converters.ConvertersManager"]},{"name":"object JulLoggingAdapter : LoggingPort","description":"com.hexagonkt.core.logging.jul.JulLoggingAdapter","location":"core/com.hexagonkt.core.logging.jul/-jul-logging-adapter/index.html","searchKeys":["JulLoggingAdapter","object JulLoggingAdapter : LoggingPort","com.hexagonkt.core.logging.jul.JulLoggingAdapter"]},{"name":"object Jvm","description":"com.hexagonkt.core.helpers.Jvm","location":"core/com.hexagonkt.core.helpers/-jvm/index.html","searchKeys":["Jvm","object Jvm","com.hexagonkt.core.helpers.Jvm"]},{"name":"object LoggingManager","description":"com.hexagonkt.core.logging.LoggingManager","location":"core/com.hexagonkt.core.logging/-logging-manager/index.html","searchKeys":["LoggingManager","object LoggingManager","com.hexagonkt.core.logging.LoggingManager"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.hexagonkt.core.helpers.MultiMap.equals","location":"core/com.hexagonkt.core.helpers/-multi-map/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.hexagonkt.core.helpers.MultiMap.equals"]},{"name":"open operator override fun get(key: K): V?","description":"com.hexagonkt.core.helpers.MultiMap.get","location":"core/com.hexagonkt.core.helpers/-multi-map/get.html","searchKeys":["get","open operator override fun get(key: K): V?","com.hexagonkt.core.helpers.MultiMap.get"]},{"name":"open override fun containsKey(key: K): Boolean","description":"com.hexagonkt.core.helpers.MultiMap.containsKey","location":"core/com.hexagonkt.core.helpers/-multi-map/contains-key.html","searchKeys":["containsKey","open override fun containsKey(key: K): Boolean","com.hexagonkt.core.helpers.MultiMap.containsKey"]},{"name":"open override fun containsValue(value: V): Boolean","description":"com.hexagonkt.core.helpers.MultiMap.containsValue","location":"core/com.hexagonkt.core.helpers/-multi-map/contains-value.html","searchKeys":["containsValue","open override fun containsValue(value: V): Boolean","com.hexagonkt.core.helpers.MultiMap.containsValue"]},{"name":"open override fun createLogger(name: String): LoggerPort","description":"com.hexagonkt.core.logging.jul.JulLoggingAdapter.createLogger","location":"core/com.hexagonkt.core.logging.jul/-jul-logging-adapter/create-logger.html","searchKeys":["createLogger","open override fun createLogger(name: String): LoggerPort","com.hexagonkt.core.logging.jul.JulLoggingAdapter.createLogger"]},{"name":"open override fun format(record: LogRecord): String","description":"com.hexagonkt.core.logging.jul.PatternFormat.format","location":"core/com.hexagonkt.core.logging.jul/-pattern-format/format.html","searchKeys":["format","open override fun format(record: LogRecord): String","com.hexagonkt.core.logging.jul.PatternFormat.format"]},{"name":"open override fun hashCode(): Int","description":"com.hexagonkt.core.helpers.MultiMap.hashCode","location":"core/com.hexagonkt.core.helpers/-multi-map/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.hexagonkt.core.helpers.MultiMap.hashCode"]},{"name":"open override fun isEmpty(): Boolean","description":"com.hexagonkt.core.helpers.MultiMap.isEmpty","location":"core/com.hexagonkt.core.helpers/-multi-map/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","com.hexagonkt.core.helpers.MultiMap.isEmpty"]},{"name":"open override fun publish(record: LogRecord)","description":"com.hexagonkt.core.logging.jul.SystemOutHandler.publish","location":"core/com.hexagonkt.core.logging.jul/-system-out-handler/publish.html","searchKeys":["publish","open override fun publish(record: LogRecord)","com.hexagonkt.core.logging.jul.SystemOutHandler.publish"]},{"name":"open override fun setLoggerLevel(name: String, level: LoggingLevel)","description":"com.hexagonkt.core.logging.jul.JulLoggingAdapter.setLoggerLevel","location":"core/com.hexagonkt.core.logging.jul/-jul-logging-adapter/set-logger-level.html","searchKeys":["setLoggerLevel","open override fun setLoggerLevel(name: String, level: LoggingLevel)","com.hexagonkt.core.logging.jul.JulLoggingAdapter.setLoggerLevel"]},{"name":"open override val entries: Set<Map.Entry<K, V>>","description":"com.hexagonkt.core.helpers.MultiMap.entries","location":"core/com.hexagonkt.core.helpers/-multi-map/entries.html","searchKeys":["entries","open override val entries: Set<Map.Entry<K, V>>","com.hexagonkt.core.helpers.MultiMap.entries"]},{"name":"open override val keys: Set<K>","description":"com.hexagonkt.core.helpers.MultiMap.keys","location":"core/com.hexagonkt.core.helpers/-multi-map/keys.html","searchKeys":["keys","open override val keys: Set<K>","com.hexagonkt.core.helpers.MultiMap.keys"]},{"name":"open override val size: Int","description":"com.hexagonkt.core.helpers.MultiMap.size","location":"core/com.hexagonkt.core.helpers/-multi-map/size.html","searchKeys":["size","open override val size: Int","com.hexagonkt.core.helpers.MultiMap.size"]},{"name":"open override val values: Collection<V>","description":"com.hexagonkt.core.helpers.MultiMap.values","location":"core/com.hexagonkt.core.helpers/-multi-map/values.html","searchKeys":["values","open override val values: Collection<V>","com.hexagonkt.core.helpers.MultiMap.values"]},{"name":"operator fun Map<*, *>.get(vararg keys: Any): Any?","description":"com.hexagonkt.core.helpers.get","location":"core/com.hexagonkt.core.helpers/get.html","searchKeys":["get","operator fun Map<*, *>.get(vararg keys: Any): Any?","com.hexagonkt.core.helpers.get"]},{"name":"operator fun plus(element: MultiMap<K, V>): MultiMap<K, V>","description":"com.hexagonkt.core.helpers.MultiMap.plus","location":"core/com.hexagonkt.core.helpers/-multi-map/plus.html","searchKeys":["plus","operator fun plus(element: MultiMap<K, V>): MultiMap<K, V>","com.hexagonkt.core.helpers.MultiMap.plus"]},{"name":"operator fun plus(element: Pair<K, List<V>>): MultiMap<K, V>","description":"com.hexagonkt.core.helpers.MultiMap.plus","location":"core/com.hexagonkt.core.helpers/-multi-map/plus.html","searchKeys":["plus","operator fun plus(element: Pair<K, List<V>>): MultiMap<K, V>","com.hexagonkt.core.helpers.MultiMap.plus"]},{"name":"val allValues: Map<K, List<V>>","description":"com.hexagonkt.core.helpers.MultiMap.allValues","location":"core/com.hexagonkt.core.helpers/-multi-map/all-values.html","searchKeys":["allValues","val allValues: Map<K, List<V>>","com.hexagonkt.core.helpers.MultiMap.allValues"]},{"name":"val causes: List<Throwable>","description":"com.hexagonkt.core.helpers.MultipleException.causes","location":"core/com.hexagonkt.core.helpers/-multiple-exception/causes.html","searchKeys":["causes","val causes: List<Throwable>","com.hexagonkt.core.helpers.MultipleException.causes"]},{"name":"val charset: Charset","description":"com.hexagonkt.core.helpers.Jvm.charset","location":"core/com.hexagonkt.core.helpers/-jvm/charset.html","searchKeys":["charset","val charset: Charset","com.hexagonkt.core.helpers.Jvm.charset"]},{"name":"val code: Int","description":"com.hexagonkt.core.helpers.CodedException.code","location":"core/com.hexagonkt.core.helpers/-coded-exception/code.html","searchKeys":["code","val code: Int","com.hexagonkt.core.helpers.CodedException.code"]},{"name":"val cpuCount: Int","description":"com.hexagonkt.core.helpers.Jvm.cpuCount","location":"core/com.hexagonkt.core.helpers/-jvm/cpu-count.html","searchKeys":["cpuCount","val cpuCount: Int","com.hexagonkt.core.helpers.Jvm.cpuCount"]},{"name":"val data: Array<Array<Any?>>","description":"com.hexagonkt.core.helpers.MapResourceBundle.data","location":"core/com.hexagonkt.core.helpers/-map-resource-bundle/data.html","searchKeys":["data","val data: Array<Array<Any?>>","com.hexagonkt.core.helpers.MapResourceBundle.data"]},{"name":"val eol: String","description":"com.hexagonkt.core.helpers.eol","location":"core/com.hexagonkt.core.helpers/eol.html","searchKeys":["eol","val eol: String","com.hexagonkt.core.helpers.eol"]},{"name":"val fail: Nothing","description":"com.hexagonkt.core.helpers.fail","location":"core/com.hexagonkt.core.helpers/fail.html","searchKeys":["fail","val fail: Nothing","com.hexagonkt.core.helpers.fail"]},{"name":"val hostname: String","description":"com.hexagonkt.core.helpers.Jvm.hostname","location":"core/com.hexagonkt.core.helpers/-jvm/hostname.html","searchKeys":["hostname","val hostname: String","com.hexagonkt.core.helpers.Jvm.hostname"]},{"name":"val id: String","description":"com.hexagonkt.core.helpers.Jvm.id","location":"core/com.hexagonkt.core.helpers/-jvm/id.html","searchKeys":["id","val id: String","com.hexagonkt.core.helpers.Jvm.id"]},{"name":"val ip: String","description":"com.hexagonkt.core.helpers.Jvm.ip","location":"core/com.hexagonkt.core.helpers/-jvm/ip.html","searchKeys":["ip","val ip: String","com.hexagonkt.core.helpers.Jvm.ip"]},{"name":"val locale: Locale","description":"com.hexagonkt.core.helpers.Jvm.locale","location":"core/com.hexagonkt.core.helpers/-jvm/locale.html","searchKeys":["locale","val locale: Locale","com.hexagonkt.core.helpers.Jvm.locale"]},{"name":"val localeCode: String","description":"com.hexagonkt.core.helpers.Jvm.localeCode","location":"core/com.hexagonkt.core.helpers/-jvm/locale-code.html","searchKeys":["localeCode","val localeCode: String","com.hexagonkt.core.helpers.Jvm.localeCode"]},{"name":"val logger: Logger","description":"com.hexagonkt.core.logging.logger","location":"core/com.hexagonkt.core.logging/logger.html","searchKeys":["logger","val logger: Logger","com.hexagonkt.core.logging.logger"]},{"name":"val map: Map<*, *>","description":"com.hexagonkt.core.helpers.MapResourceBundle.map","location":"core/com.hexagonkt.core.helpers/-map-resource-bundle/map.html","searchKeys":["map","val map: Map<*, *>","com.hexagonkt.core.helpers.MapResourceBundle.map"]},{"name":"val name: String","description":"com.hexagonkt.core.helpers.Jvm.name","location":"core/com.hexagonkt.core.helpers/-jvm/name.html","searchKeys":["name","val name: String","com.hexagonkt.core.helpers.Jvm.name"]},{"name":"val name: String","description":"com.hexagonkt.core.logging.Logger.name","location":"core/com.hexagonkt.core.logging/-logger/name.html","searchKeys":["name","val name: String","com.hexagonkt.core.logging.Logger.name"]},{"name":"val pattern: String","description":"com.hexagonkt.core.helpers.Glob.pattern","location":"core/com.hexagonkt.core.helpers/-glob/pattern.html","searchKeys":["pattern","val pattern: String","com.hexagonkt.core.helpers.Glob.pattern"]},{"name":"val regex: Regex","description":"com.hexagonkt.core.helpers.Glob.regex","location":"core/com.hexagonkt.core.helpers/-glob/regex.html","searchKeys":["regex","val regex: Regex","com.hexagonkt.core.helpers.Glob.regex"]},{"name":"val timeZone: TimeZone","description":"com.hexagonkt.core.helpers.Jvm.timeZone","location":"core/com.hexagonkt.core.helpers/-jvm/time-zone.html","searchKeys":["timeZone","val timeZone: TimeZone","com.hexagonkt.core.helpers.Jvm.timeZone"]},{"name":"val timezone: String","description":"com.hexagonkt.core.helpers.Jvm.timezone","location":"core/com.hexagonkt.core.helpers/-jvm/timezone.html","searchKeys":["timezone","val timezone: String","com.hexagonkt.core.helpers.Jvm.timezone"]},{"name":"val version: String","description":"com.hexagonkt.core.helpers.Jvm.version","location":"core/com.hexagonkt.core.helpers/-jvm/version.html","searchKeys":["version","val version: String","com.hexagonkt.core.helpers.Jvm.version"]},{"name":"var adapter: LoggingPort","description":"com.hexagonkt.core.logging.LoggingManager.adapter","location":"core/com.hexagonkt.core.logging/-logging-manager/adapter.html","searchKeys":["adapter","var adapter: LoggingPort","com.hexagonkt.core.logging.LoggingManager.adapter"]},{"name":"fun Call.fullContext(): Map<String, *>","description":"com.hexagonkt.web.fullContext","location":"web/com.hexagonkt.web/full-context.html","searchKeys":["fullContext","fun Call.fullContext(): Map<String, *>","com.hexagonkt.web.fullContext"]},{"name":"fun Call.html(block: HTML.() -> Unit)","description":"com.hexagonkt.web.html","location":"web/com.hexagonkt.web/html.html","searchKeys":["html","fun Call.html(block: HTML.() -> Unit)","com.hexagonkt.web.html"]},{"name":"fun Call.obtainLocale(): Locale","description":"com.hexagonkt.web.obtainLocale","location":"web/com.hexagonkt.web/obtain-locale.html","searchKeys":["obtainLocale","fun Call.obtainLocale(): Locale","com.hexagonkt.web.obtainLocale"]},{"name":"fun Call.template(templateEngine: TemplatePort, url: URL, context: Map<String, *> = fullContext(), locale: Locale = obtainLocale())","description":"com.hexagonkt.web.template","location":"web/com.hexagonkt.web/template.html","searchKeys":["template","fun Call.template(templateEngine: TemplatePort, url: URL, context: Map<String, *> = fullContext(), locale: Locale = obtainLocale())","com.hexagonkt.web.template"]},{"name":"fun Call.template(url: URL, context: Map<String, *> = fullContext(), locale: Locale = obtainLocale())","description":"com.hexagonkt.web.template","location":"web/com.hexagonkt.web/template.html","searchKeys":["template","fun Call.template(url: URL, context: Map<String, *> = fullContext(), locale: Locale = obtainLocale())","com.hexagonkt.web.template"]},{"name":"fun Call.templateType(url: URL)","description":"com.hexagonkt.web.templateType","location":"web/com.hexagonkt.web/template-type.html","searchKeys":["templateType","fun Call.templateType(url: URL)","com.hexagonkt.web.templateType"]},{"name":"object FreeMarkerAdapter : TemplatePort","description":"com.hexagonkt.templates.freemarker.FreeMarkerAdapter","location":"templates_freemarker/com.hexagonkt.templates.freemarker/-free-marker-adapter/index.html","searchKeys":["FreeMarkerAdapter","object FreeMarkerAdapter : TemplatePort","com.hexagonkt.templates.freemarker.FreeMarkerAdapter"]},{"name":"open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","description":"com.hexagonkt.templates.freemarker.FreeMarkerAdapter.render","location":"templates_freemarker/com.hexagonkt.templates.freemarker/-free-marker-adapter/render.html","searchKeys":["render","open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","com.hexagonkt.templates.freemarker.FreeMarkerAdapter.render"]},{"name":"DELETE()","description":"com.hexagonkt.http.Method.DELETE","location":"http/com.hexagonkt.http/-method/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE()","com.hexagonkt.http.Method.DELETE"]},{"name":"GET()","description":"com.hexagonkt.http.Method.GET","location":"http/com.hexagonkt.http/-method/-g-e-t/index.html","searchKeys":["GET","GET()","com.hexagonkt.http.Method.GET"]},{"name":"HEAD()","description":"com.hexagonkt.http.Method.HEAD","location":"http/com.hexagonkt.http/-method/-h-e-a-d/index.html","searchKeys":["HEAD","HEAD()","com.hexagonkt.http.Method.HEAD"]},{"name":"HTTP()","description":"com.hexagonkt.http.Protocol.HTTP","location":"http/com.hexagonkt.http/-protocol/-h-t-t-p/index.html","searchKeys":["HTTP","HTTP()","com.hexagonkt.http.Protocol.HTTP"]},{"name":"HTTP2()","description":"com.hexagonkt.http.Protocol.HTTP2","location":"http/com.hexagonkt.http/-protocol/-h-t-t-p2/index.html","searchKeys":["HTTP2","HTTP2()","com.hexagonkt.http.Protocol.HTTP2"]},{"name":"HTTPS()","description":"com.hexagonkt.http.Protocol.HTTPS","location":"http/com.hexagonkt.http/-protocol/-h-t-t-p-s/index.html","searchKeys":["HTTPS","HTTPS()","com.hexagonkt.http.Protocol.HTTPS"]},{"name":"OPTIONS()","description":"com.hexagonkt.http.Method.OPTIONS","location":"http/com.hexagonkt.http/-method/-o-p-t-i-o-n-s/index.html","searchKeys":["OPTIONS","OPTIONS()","com.hexagonkt.http.Method.OPTIONS"]},{"name":"PATCH()","description":"com.hexagonkt.http.Method.PATCH","location":"http/com.hexagonkt.http/-method/-p-a-t-c-h/index.html","searchKeys":["PATCH","PATCH()","com.hexagonkt.http.Method.PATCH"]},{"name":"POST()","description":"com.hexagonkt.http.Method.POST","location":"http/com.hexagonkt.http/-method/-p-o-s-t/index.html","searchKeys":["POST","POST()","com.hexagonkt.http.Method.POST"]},{"name":"PUT()","description":"com.hexagonkt.http.Method.PUT","location":"http/com.hexagonkt.http/-method/-p-u-t/index.html","searchKeys":["PUT","PUT()","com.hexagonkt.http.Method.PUT"]},{"name":"TRACE()","description":"com.hexagonkt.http.Method.TRACE","location":"http/com.hexagonkt.http/-method/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE()","com.hexagonkt.http.Method.TRACE"]},{"name":"data class Cookie(name: String, value: String, maxAge: Long, secure: Boolean)","description":"com.hexagonkt.http.Cookie","location":"http/com.hexagonkt.http/-cookie/index.html","searchKeys":["Cookie","data class Cookie(name: String, value: String, maxAge: Long, secure: Boolean)","com.hexagonkt.http.Cookie"]},{"name":"data class Part(contentType: String?, headers: Map<String, List<String>>, inputStream: InputStream, name: String, size: Long, submittedFileName: String?)","description":"com.hexagonkt.http.Part","location":"http/com.hexagonkt.http/-part/index.html","searchKeys":["Part","data class Part(contentType: String?, headers: Map<String, List<String>>, inputStream: InputStream, name: String, size: Long, submittedFileName: String?)","com.hexagonkt.http.Part"]},{"name":"data class Path(pattern: String)","description":"com.hexagonkt.http.Path","location":"http/com.hexagonkt.http/-path/index.html","searchKeys":["Path","data class Path(pattern: String)","com.hexagonkt.http.Path"]},{"name":"data class Route(path: Path, methods: LinkedHashSet<Method>)","description":"com.hexagonkt.http.Route","location":"http/com.hexagonkt.http/-route/index.html","searchKeys":["Route","data class Route(path: Path, methods: LinkedHashSet<Method>)","com.hexagonkt.http.Route"]},{"name":"data class SslSettings(keyStore: URL?, keyStorePassword: String, trustStore: URL?, trustStorePassword: String, clientAuth: Boolean)","description":"com.hexagonkt.http.SslSettings","location":"http/com.hexagonkt.http/-ssl-settings/index.html","searchKeys":["SslSettings","data class SslSettings(keyStore: URL?, keyStorePassword: String, trustStore: URL?, trustStorePassword: String, clientAuth: Boolean)","com.hexagonkt.http.SslSettings"]},{"name":"enum Method : Enum<Method> ","description":"com.hexagonkt.http.Method","location":"http/com.hexagonkt.http/-method/index.html","searchKeys":["Method","enum Method : Enum<Method> ","com.hexagonkt.http.Method"]},{"name":"enum Protocol : Enum<Protocol> ","description":"com.hexagonkt.http.Protocol","location":"http/com.hexagonkt.http/-protocol/index.html","searchKeys":["Protocol","enum Protocol : Enum<Protocol> ","com.hexagonkt.http.Protocol"]},{"name":"fun Cookie(name: String, value: String, maxAge: Long = -1, secure: Boolean = false)","description":"com.hexagonkt.http.Cookie.Cookie","location":"http/com.hexagonkt.http/-cookie/-cookie.html","searchKeys":["Cookie","fun Cookie(name: String, value: String, maxAge: Long = -1, secure: Boolean = false)","com.hexagonkt.http.Cookie.Cookie"]},{"name":"fun Part(contentType: String? = null, headers: Map<String, List<String>> = emptyMap(), inputStream: InputStream, name: String, size: Long = -1L, submittedFileName: String? = null)","description":"com.hexagonkt.http.Part.Part","location":"http/com.hexagonkt.http/-part/-part.html","searchKeys":["Part","fun Part(contentType: String? = null, headers: Map<String, List<String>> = emptyMap(), inputStream: InputStream, name: String, size: Long = -1L, submittedFileName: String? = null)","com.hexagonkt.http.Part.Part"]},{"name":"fun Part(name: String, inputStream: InputStream, submittedFileName: String)","description":"com.hexagonkt.http.Part.Part","location":"http/com.hexagonkt.http/-part/-part.html","searchKeys":["Part","fun Part(name: String, inputStream: InputStream, submittedFileName: String)","com.hexagonkt.http.Part.Part"]},{"name":"fun Part(name: String, value: String)","description":"com.hexagonkt.http.Part.Part","location":"http/com.hexagonkt.http/-part/-part.html","searchKeys":["Part","fun Part(name: String, value: String)","com.hexagonkt.http.Part.Part"]},{"name":"fun Path(pattern: String)","description":"com.hexagonkt.http.Path.Path","location":"http/com.hexagonkt.http/-path/-path.html","searchKeys":["Path","fun Path(pattern: String)","com.hexagonkt.http.Path.Path"]},{"name":"fun Route(path: Path, methods: LinkedHashSet<Method>)","description":"com.hexagonkt.http.Route.Route","location":"http/com.hexagonkt.http/-route/-route.html","searchKeys":["Route","fun Route(path: Path, methods: LinkedHashSet<Method>)","com.hexagonkt.http.Route.Route"]},{"name":"fun Route(path: Path, vararg methods: Method)","description":"com.hexagonkt.http.Route.Route","location":"http/com.hexagonkt.http/-route/-route.html","searchKeys":["Route","fun Route(path: Path, vararg methods: Method)","com.hexagonkt.http.Route.Route"]},{"name":"fun Route(path: String, vararg methods: Method)","description":"com.hexagonkt.http.Route.Route","location":"http/com.hexagonkt.http/-route/-route.html","searchKeys":["Route","fun Route(path: String, vararg methods: Method)","com.hexagonkt.http.Route.Route"]},{"name":"fun SslSettings(keyStore: URL? = null, keyStorePassword: String = \"\", trustStore: URL? = null, trustStorePassword: String = \"\", clientAuth: Boolean = false)","description":"com.hexagonkt.http.SslSettings.SslSettings","location":"http/com.hexagonkt.http/-ssl-settings/-ssl-settings.html","searchKeys":["SslSettings","fun SslSettings(keyStore: URL? = null, keyStorePassword: String = \"\", trustStore: URL? = null, trustStorePassword: String = \"\", clientAuth: Boolean = false)","com.hexagonkt.http.SslSettings.SslSettings"]},{"name":"fun String.urlDecode(): String","description":"com.hexagonkt.http.urlDecode","location":"http/com.hexagonkt.http/url-decode.html","searchKeys":["urlDecode","fun String.urlDecode(): String","com.hexagonkt.http.urlDecode"]},{"name":"fun String.urlEncode(): String","description":"com.hexagonkt.http.urlEncode","location":"http/com.hexagonkt.http/url-encode.html","searchKeys":["urlEncode","fun String.urlEncode(): String","com.hexagonkt.http.urlEncode"]},{"name":"fun any(path: String = \"/\"): Route","description":"com.hexagonkt.http.any","location":"http/com.hexagonkt.http/any.html","searchKeys":["any","fun any(path: String = \"/\"): Route","com.hexagonkt.http.any"]},{"name":"fun delete(path: String = \"/\"): Route","description":"com.hexagonkt.http.delete","location":"http/com.hexagonkt.http/delete.html","searchKeys":["delete","fun delete(path: String = \"/\"): Route","com.hexagonkt.http.delete"]},{"name":"fun extractParameters(requestUrl: String): Map<String, String>","description":"com.hexagonkt.http.Path.extractParameters","location":"http/com.hexagonkt.http/-path/extract-parameters.html","searchKeys":["extractParameters","fun extractParameters(requestUrl: String): Map<String, String>","com.hexagonkt.http.Path.extractParameters"]},{"name":"fun get(path: String = \"/\"): Route","description":"com.hexagonkt.http.get","location":"http/com.hexagonkt.http/get.html","searchKeys":["get","fun get(path: String = \"/\"): Route","com.hexagonkt.http.get"]},{"name":"fun head(path: String = \"/\"): Route","description":"com.hexagonkt.http.head","location":"http/com.hexagonkt.http/head.html","searchKeys":["head","fun head(path: String = \"/\"): Route","com.hexagonkt.http.head"]},{"name":"fun httpDate(date: LocalDateTime = LocalDateTime.now()): String","description":"com.hexagonkt.http.httpDate","location":"http/com.hexagonkt.http/http-date.html","searchKeys":["httpDate","fun httpDate(date: LocalDateTime = LocalDateTime.now()): String","com.hexagonkt.http.httpDate"]},{"name":"fun list(): List<Route>","description":"com.hexagonkt.http.Route.list","location":"http/com.hexagonkt.http/-route/list.html","searchKeys":["list","fun list(): List<Route>","com.hexagonkt.http.Route.list"]},{"name":"fun matches(requestUrl: String): Boolean","description":"com.hexagonkt.http.Path.matches","location":"http/com.hexagonkt.http/-path/matches.html","searchKeys":["matches","fun matches(requestUrl: String): Boolean","com.hexagonkt.http.Path.matches"]},{"name":"fun options(path: String = \"/\"): Route","description":"com.hexagonkt.http.options","location":"http/com.hexagonkt.http/options.html","searchKeys":["options","fun options(path: String = \"/\"): Route","com.hexagonkt.http.options"]},{"name":"fun parseQueryParameters(query: String): Map<String, List<String>>","description":"com.hexagonkt.http.parseQueryParameters","location":"http/com.hexagonkt.http/parse-query-parameters.html","searchKeys":["parseQueryParameters","fun parseQueryParameters(query: String): Map<String, List<String>>","com.hexagonkt.http.parseQueryParameters"]},{"name":"fun patch(path: String = \"/\"): Route","description":"com.hexagonkt.http.patch","location":"http/com.hexagonkt.http/patch.html","searchKeys":["patch","fun patch(path: String = \"/\"): Route","com.hexagonkt.http.patch"]},{"name":"fun post(path: String = \"/\"): Route","description":"com.hexagonkt.http.post","location":"http/com.hexagonkt.http/post.html","searchKeys":["post","fun post(path: String = \"/\"): Route","com.hexagonkt.http.post"]},{"name":"fun put(path: String = \"/\"): Route","description":"com.hexagonkt.http.put","location":"http/com.hexagonkt.http/put.html","searchKeys":["put","fun put(path: String = \"/\"): Route","com.hexagonkt.http.put"]},{"name":"fun trace(path: String = \"/\"): Route","description":"com.hexagonkt.http.trace","location":"http/com.hexagonkt.http/trace.html","searchKeys":["trace","fun trace(path: String = \"/\"): Route","com.hexagonkt.http.trace"]},{"name":"val ALL: LinkedHashSet<Method>","description":"com.hexagonkt.http.ALL","location":"http/com.hexagonkt.http/-a-l-l.html","searchKeys":["ALL","val ALL: LinkedHashSet<Method>","com.hexagonkt.http.ALL"]},{"name":"val clientAuth: Boolean = false","description":"com.hexagonkt.http.SslSettings.clientAuth","location":"http/com.hexagonkt.http/-ssl-settings/client-auth.html","searchKeys":["clientAuth","val clientAuth: Boolean = false","com.hexagonkt.http.SslSettings.clientAuth"]},{"name":"val contentType: String? = null","description":"com.hexagonkt.http.Part.contentType","location":"http/com.hexagonkt.http/-part/content-type.html","searchKeys":["contentType","val contentType: String? = null","com.hexagonkt.http.Part.contentType"]},{"name":"val hasParameters: Boolean","description":"com.hexagonkt.http.Path.hasParameters","location":"http/com.hexagonkt.http/-path/has-parameters.html","searchKeys":["hasParameters","val hasParameters: Boolean","com.hexagonkt.http.Path.hasParameters"]},{"name":"val hasWildcards: Boolean","description":"com.hexagonkt.http.Path.hasWildcards","location":"http/com.hexagonkt.http/-path/has-wildcards.html","searchKeys":["hasWildcards","val hasWildcards: Boolean","com.hexagonkt.http.Path.hasWildcards"]},{"name":"val headers: Map<String, List<String>>","description":"com.hexagonkt.http.Part.headers","location":"http/com.hexagonkt.http/-part/headers.html","searchKeys":["headers","val headers: Map<String, List<String>>","com.hexagonkt.http.Part.headers"]},{"name":"val inputStream: InputStream","description":"com.hexagonkt.http.Part.inputStream","location":"http/com.hexagonkt.http/-part/input-stream.html","searchKeys":["inputStream","val inputStream: InputStream","com.hexagonkt.http.Part.inputStream"]},{"name":"val keyStore: URL? = null","description":"com.hexagonkt.http.SslSettings.keyStore","location":"http/com.hexagonkt.http/-ssl-settings/key-store.html","searchKeys":["keyStore","val keyStore: URL? = null","com.hexagonkt.http.SslSettings.keyStore"]},{"name":"val keyStorePassword: String","description":"com.hexagonkt.http.SslSettings.keyStorePassword","location":"http/com.hexagonkt.http/-ssl-settings/key-store-password.html","searchKeys":["keyStorePassword","val keyStorePassword: String","com.hexagonkt.http.SslSettings.keyStorePassword"]},{"name":"val maxAge: Long","description":"com.hexagonkt.http.Cookie.maxAge","location":"http/com.hexagonkt.http/-cookie/max-age.html","searchKeys":["maxAge","val maxAge: Long","com.hexagonkt.http.Cookie.maxAge"]},{"name":"val methods: LinkedHashSet<Method>","description":"com.hexagonkt.http.Route.methods","location":"http/com.hexagonkt.http/-route/methods.html","searchKeys":["methods","val methods: LinkedHashSet<Method>","com.hexagonkt.http.Route.methods"]},{"name":"val name: String","description":"com.hexagonkt.http.Cookie.name","location":"http/com.hexagonkt.http/-cookie/name.html","searchKeys":["name","val name: String","com.hexagonkt.http.Cookie.name"]},{"name":"val name: String","description":"com.hexagonkt.http.Part.name","location":"http/com.hexagonkt.http/-part/name.html","searchKeys":["name","val name: String","com.hexagonkt.http.Part.name"]},{"name":"val parameterIndex: List<String>","description":"com.hexagonkt.http.Path.parameterIndex","location":"http/com.hexagonkt.http/-path/parameter-index.html","searchKeys":["parameterIndex","val parameterIndex: List<String>","com.hexagonkt.http.Path.parameterIndex"]},{"name":"val path: Path","description":"com.hexagonkt.http.Route.path","location":"http/com.hexagonkt.http/-route/path.html","searchKeys":["path","val path: Path","com.hexagonkt.http.Route.path"]},{"name":"val pattern: String","description":"com.hexagonkt.http.Path.pattern","location":"http/com.hexagonkt.http/-path/pattern.html","searchKeys":["pattern","val pattern: String","com.hexagonkt.http.Path.pattern"]},{"name":"val regex: Regex?","description":"com.hexagonkt.http.Path.regex","location":"http/com.hexagonkt.http/-path/regex.html","searchKeys":["regex","val regex: Regex?","com.hexagonkt.http.Path.regex"]},{"name":"val secure: Boolean = false","description":"com.hexagonkt.http.Cookie.secure","location":"http/com.hexagonkt.http/-cookie/secure.html","searchKeys":["secure","val secure: Boolean = false","com.hexagonkt.http.Cookie.secure"]},{"name":"val segments: List<String>","description":"com.hexagonkt.http.Path.segments","location":"http/com.hexagonkt.http/-path/segments.html","searchKeys":["segments","val segments: List<String>","com.hexagonkt.http.Path.segments"]},{"name":"val size: Long","description":"com.hexagonkt.http.Part.size","location":"http/com.hexagonkt.http/-part/size.html","searchKeys":["size","val size: Long","com.hexagonkt.http.Part.size"]},{"name":"val submittedFileName: String? = null","description":"com.hexagonkt.http.Part.submittedFileName","location":"http/com.hexagonkt.http/-part/submitted-file-name.html","searchKeys":["submittedFileName","val submittedFileName: String? = null","com.hexagonkt.http.Part.submittedFileName"]},{"name":"val trustStore: URL? = null","description":"com.hexagonkt.http.SslSettings.trustStore","location":"http/com.hexagonkt.http/-ssl-settings/trust-store.html","searchKeys":["trustStore","val trustStore: URL? = null","com.hexagonkt.http.SslSettings.trustStore"]},{"name":"val trustStorePassword: String","description":"com.hexagonkt.http.SslSettings.trustStorePassword","location":"http/com.hexagonkt.http/-ssl-settings/trust-store-password.html","searchKeys":["trustStorePassword","val trustStorePassword: String","com.hexagonkt.http.SslSettings.trustStorePassword"]},{"name":"val value: String","description":"com.hexagonkt.http.Cookie.value","location":"http/com.hexagonkt.http/-cookie/value.html","searchKeys":["value","val value: String","com.hexagonkt.http.Cookie.value"]},{"name":"abstract fun send(client: Client, request: Request): Response<String>","description":"com.hexagonkt.http.client.ClientPort.send","location":"http_client/com.hexagonkt.http.client/-client-port/send.html","searchKeys":["send","abstract fun send(client: Client, request: Request): Response<String>","com.hexagonkt.http.client.ClientPort.send"]},{"name":"class Client(adapter: ClientPort, endpoint: String, settings: ClientSettings)","description":"com.hexagonkt.http.client.Client","location":"http_client/com.hexagonkt.http.client/-client/index.html","searchKeys":["Client","class Client(adapter: ClientPort, endpoint: String, settings: ClientSettings)","com.hexagonkt.http.client.Client"]},{"name":"data class ClientSettings(contentType: String?, useCookies: Boolean, headers: Map<String, List<String>>, user: String?, password: String?, insecure: Boolean, sslSettings: SslSettings?)","description":"com.hexagonkt.http.client.ClientSettings","location":"http_client/com.hexagonkt.http.client/-client-settings/index.html","searchKeys":["ClientSettings","data class ClientSettings(contentType: String?, useCookies: Boolean, headers: Map<String, List<String>>, user: String?, password: String?, insecure: Boolean, sslSettings: SslSettings?)","com.hexagonkt.http.client.ClientSettings"]},{"name":"data class Request(method: Method, path: Path, body: Any?, headers: Map<String, List<String>>, pathParameters: Map<String, List<String>>, formParameters: Map<String, List<String>>, parts: Map<String, Part>, contentType: String?)","description":"com.hexagonkt.http.client.Request","location":"http_client/com.hexagonkt.http.client/-request/index.html","searchKeys":["Request","data class Request(method: Method, path: Path, body: Any?, headers: Map<String, List<String>>, pathParameters: Map<String, List<String>>, formParameters: Map<String, List<String>>, parts: Map<String, Part>, contentType: String?)","com.hexagonkt.http.client.Request"]},{"name":"data class Response<T>(status: Int, body: T?, headers: MutableMap<String, List<String>>, contentType: String?, inputStream: InputStream)","description":"com.hexagonkt.http.client.Response","location":"http_client/com.hexagonkt.http.client/-response/index.html","searchKeys":["Response","data class Response<T>(status: Int, body: T?, headers: MutableMap<String, List<String>>, contentType: String?, inputStream: InputStream)","com.hexagonkt.http.client.Response"]},{"name":"fun <T> Response(status: Int, body: T?, headers: MutableMap<String, List<String>>, contentType: String?, inputStream: InputStream)","description":"com.hexagonkt.http.client.Response.Response","location":"http_client/com.hexagonkt.http.client/-response/-response.html","searchKeys":["Response","fun <T> Response(status: Int, body: T?, headers: MutableMap<String, List<String>>, contentType: String?, inputStream: InputStream)","com.hexagonkt.http.client.Response.Response"]},{"name":"fun Client(adapter: ClientPort, endpoint: String = \"\", settings: ClientSettings = ClientSettings())","description":"com.hexagonkt.http.client.Client.Client","location":"http_client/com.hexagonkt.http.client/-client/-client.html","searchKeys":["Client","fun Client(adapter: ClientPort, endpoint: String = \"\", settings: ClientSettings = ClientSettings())","com.hexagonkt.http.client.Client.Client"]},{"name":"fun ClientSettings(contentType: String? = null, useCookies: Boolean = true, headers: Map<String, List<String>> = LinkedHashMap(), user: String? = null, password: String? = null, insecure: Boolean = false, sslSettings: SslSettings? = null)","description":"com.hexagonkt.http.client.ClientSettings.ClientSettings","location":"http_client/com.hexagonkt.http.client/-client-settings/-client-settings.html","searchKeys":["ClientSettings","fun ClientSettings(contentType: String? = null, useCookies: Boolean = true, headers: Map<String, List<String>> = LinkedHashMap(), user: String? = null, password: String? = null, insecure: Boolean = false, sslSettings: SslSettings? = null)","com.hexagonkt.http.client.ClientSettings.ClientSettings"]},{"name":"fun ClientSettings(format: SerializationFormat, useCookies: Boolean = true, headers: Map<String, List<String>> = LinkedHashMap(), user: String? = null, password: String? = null, insecure: Boolean = false)","description":"com.hexagonkt.http.client.ClientSettings.ClientSettings","location":"http_client/com.hexagonkt.http.client/-client-settings/-client-settings.html","searchKeys":["ClientSettings","fun ClientSettings(format: SerializationFormat, useCookies: Boolean = true, headers: Map<String, List<String>> = LinkedHashMap(), user: String? = null, password: String? = null, insecure: Boolean = false)","com.hexagonkt.http.client.ClientSettings.ClientSettings"]},{"name":"fun Request(method: Method, path: Path, body: Any? = null, headers: Map<String, List<String>> = emptyMap(), pathParameters: Map<String, List<String>> = emptyMap(), formParameters: Map<String, List<String>> = emptyMap(), parts: Map<String, Part> = emptyMap(), contentType: String? = null)","description":"com.hexagonkt.http.client.Request.Request","location":"http_client/com.hexagonkt.http.client/-request/-request.html","searchKeys":["Request","fun Request(method: Method, path: Path, body: Any? = null, headers: Map<String, List<String>> = emptyMap(), pathParameters: Map<String, List<String>> = emptyMap(), formParameters: Map<String, List<String>> = emptyMap(), parts: Map<String, Part> = emptyMap(), contentType: String? = null)","com.hexagonkt.http.client.Request.Request"]},{"name":"fun Request(method: Method, path: String, body: Any? = null, headers: Map<String, List<String>> = emptyMap(), pathParameters: Map<String, List<String>> = emptyMap(), formParameters: Map<String, List<String>> = emptyMap(), parts: Map<String, Part> = emptyMap(), contentType: String? = null)","description":"com.hexagonkt.http.client.Request.Request","location":"http_client/com.hexagonkt.http.client/-request/-request.html","searchKeys":["Request","fun Request(method: Method, path: String, body: Any? = null, headers: Map<String, List<String>> = emptyMap(), pathParameters: Map<String, List<String>> = emptyMap(), formParameters: Map<String, List<String>> = emptyMap(), parts: Map<String, Part> = emptyMap(), contentType: String? = null)","com.hexagonkt.http.client.Request.Request"]},{"name":"fun delete(path: String, body: Any, format: SerializationFormat): Response<String>","description":"com.hexagonkt.http.client.Client.delete","location":"http_client/com.hexagonkt.http.client/-client/delete.html","searchKeys":["delete","fun delete(path: String, body: Any, format: SerializationFormat): Response<String>","com.hexagonkt.http.client.Client.delete"]},{"name":"fun delete(path: String, body: Any? = null, contentType: String? = settings.contentType): Response<String>","description":"com.hexagonkt.http.client.Client.delete","location":"http_client/com.hexagonkt.http.client/-client/delete.html","searchKeys":["delete","fun delete(path: String, body: Any? = null, contentType: String? = settings.contentType): Response<String>","com.hexagonkt.http.client.Client.delete"]},{"name":"fun get(path: String, headers: Map<String, List<String>> = emptyMap(), body: Any, format: SerializationFormat): Response<String>","description":"com.hexagonkt.http.client.Client.get","location":"http_client/com.hexagonkt.http.client/-client/get.html","searchKeys":["get","fun get(path: String, headers: Map<String, List<String>> = emptyMap(), body: Any, format: SerializationFormat): Response<String>","com.hexagonkt.http.client.Client.get"]},{"name":"fun get(path: String, headers: Map<String, List<String>> = emptyMap(), body: Any? = null, contentType: String? = settings.contentType): Response<String>","description":"com.hexagonkt.http.client.Client.get","location":"http_client/com.hexagonkt.http.client/-client/get.html","searchKeys":["get","fun get(path: String, headers: Map<String, List<String>> = emptyMap(), body: Any? = null, contentType: String? = settings.contentType): Response<String>","com.hexagonkt.http.client.Client.get"]},{"name":"fun head(path: String, headers: Map<String, List<String>> = emptyMap()): Response<String>","description":"com.hexagonkt.http.client.Client.head","location":"http_client/com.hexagonkt.http.client/-client/head.html","searchKeys":["head","fun head(path: String, headers: Map<String, List<String>> = emptyMap()): Response<String>","com.hexagonkt.http.client.Client.head"]},{"name":"fun options(path: String, body: Any, format: SerializationFormat, headers: Map<String, List<String>> = emptyMap()): Response<String>","description":"com.hexagonkt.http.client.Client.options","location":"http_client/com.hexagonkt.http.client/-client/options.html","searchKeys":["options","fun options(path: String, body: Any, format: SerializationFormat, headers: Map<String, List<String>> = emptyMap()): Response<String>","com.hexagonkt.http.client.Client.options"]},{"name":"fun options(path: String, body: Any? = null, contentType: String? = settings.contentType, headers: Map<String, List<String>> = emptyMap()): Response<String>","description":"com.hexagonkt.http.client.Client.options","location":"http_client/com.hexagonkt.http.client/-client/options.html","searchKeys":["options","fun options(path: String, body: Any? = null, contentType: String? = settings.contentType, headers: Map<String, List<String>> = emptyMap()): Response<String>","com.hexagonkt.http.client.Client.options"]},{"name":"fun patch(path: String, body: Any, format: SerializationFormat): Response<String>","description":"com.hexagonkt.http.client.Client.patch","location":"http_client/com.hexagonkt.http.client/-client/patch.html","searchKeys":["patch","fun patch(path: String, body: Any, format: SerializationFormat): Response<String>","com.hexagonkt.http.client.Client.patch"]},{"name":"fun patch(path: String, body: Any? = null, contentType: String? = settings.contentType): Response<String>","description":"com.hexagonkt.http.client.Client.patch","location":"http_client/com.hexagonkt.http.client/-client/patch.html","searchKeys":["patch","fun patch(path: String, body: Any? = null, contentType: String? = settings.contentType): Response<String>","com.hexagonkt.http.client.Client.patch"]},{"name":"fun post(path: String, body: Any, format: SerializationFormat): Response<String>","description":"com.hexagonkt.http.client.Client.post","location":"http_client/com.hexagonkt.http.client/-client/post.html","searchKeys":["post","fun post(path: String, body: Any, format: SerializationFormat): Response<String>","com.hexagonkt.http.client.Client.post"]},{"name":"fun post(path: String, body: Any? = null, contentType: String? = settings.contentType): Response<String>","description":"com.hexagonkt.http.client.Client.post","location":"http_client/com.hexagonkt.http.client/-client/post.html","searchKeys":["post","fun post(path: String, body: Any? = null, contentType: String? = settings.contentType): Response<String>","com.hexagonkt.http.client.Client.post"]},{"name":"fun put(path: String, body: Any, format: SerializationFormat): Response<String>","description":"com.hexagonkt.http.client.Client.put","location":"http_client/com.hexagonkt.http.client/-client/put.html","searchKeys":["put","fun put(path: String, body: Any, format: SerializationFormat): Response<String>","com.hexagonkt.http.client.Client.put"]},{"name":"fun put(path: String, body: Any? = null, contentType: String? = settings.contentType): Response<String>","description":"com.hexagonkt.http.client.Client.put","location":"http_client/com.hexagonkt.http.client/-client/put.html","searchKeys":["put","fun put(path: String, body: Any? = null, contentType: String? = settings.contentType): Response<String>","com.hexagonkt.http.client.Client.put"]},{"name":"fun send(request: Request): Response<String>","description":"com.hexagonkt.http.client.Client.send","location":"http_client/com.hexagonkt.http.client/-client/send.html","searchKeys":["send","fun send(request: Request): Response<String>","com.hexagonkt.http.client.Client.send"]},{"name":"fun trace(path: String, body: Any, format: SerializationFormat): Response<String>","description":"com.hexagonkt.http.client.Client.trace","location":"http_client/com.hexagonkt.http.client/-client/trace.html","searchKeys":["trace","fun trace(path: String, body: Any, format: SerializationFormat): Response<String>","com.hexagonkt.http.client.Client.trace"]},{"name":"fun trace(path: String, body: Any? = null, contentType: String? = settings.contentType): Response<String>","description":"com.hexagonkt.http.client.Client.trace","location":"http_client/com.hexagonkt.http.client/-client/trace.html","searchKeys":["trace","fun trace(path: String, body: Any? = null, contentType: String? = settings.contentType): Response<String>","com.hexagonkt.http.client.Client.trace"]},{"name":"interface ClientPort","description":"com.hexagonkt.http.client.ClientPort","location":"http_client/com.hexagonkt.http.client/-client-port/index.html","searchKeys":["ClientPort","interface ClientPort","com.hexagonkt.http.client.ClientPort"]},{"name":"val body: Any? = null","description":"com.hexagonkt.http.client.Request.body","location":"http_client/com.hexagonkt.http.client/-request/body.html","searchKeys":["body","val body: Any? = null","com.hexagonkt.http.client.Request.body"]},{"name":"val contentType: String? = null","description":"com.hexagonkt.http.client.ClientSettings.contentType","location":"http_client/com.hexagonkt.http.client/-client-settings/content-type.html","searchKeys":["contentType","val contentType: String? = null","com.hexagonkt.http.client.ClientSettings.contentType"]},{"name":"val contentType: String? = null","description":"com.hexagonkt.http.client.Request.contentType","location":"http_client/com.hexagonkt.http.client/-request/content-type.html","searchKeys":["contentType","val contentType: String? = null","com.hexagonkt.http.client.Request.contentType"]},{"name":"val cookies: MutableMap<String, Cookie>","description":"com.hexagonkt.http.client.Client.cookies","location":"http_client/com.hexagonkt.http.client/-client/cookies.html","searchKeys":["cookies","val cookies: MutableMap<String, Cookie>","com.hexagonkt.http.client.Client.cookies"]},{"name":"val endpoint: String","description":"com.hexagonkt.http.client.Client.endpoint","location":"http_client/com.hexagonkt.http.client/-client/endpoint.html","searchKeys":["endpoint","val endpoint: String","com.hexagonkt.http.client.Client.endpoint"]},{"name":"val formParameters: Map<String, List<String>>","description":"com.hexagonkt.http.client.Request.formParameters","location":"http_client/com.hexagonkt.http.client/-request/form-parameters.html","searchKeys":["formParameters","val formParameters: Map<String, List<String>>","com.hexagonkt.http.client.Request.formParameters"]},{"name":"val headers: Map<String, List<String>>","description":"com.hexagonkt.http.client.ClientSettings.headers","location":"http_client/com.hexagonkt.http.client/-client-settings/headers.html","searchKeys":["headers","val headers: Map<String, List<String>>","com.hexagonkt.http.client.ClientSettings.headers"]},{"name":"val headers: Map<String, List<String>>","description":"com.hexagonkt.http.client.Request.headers","location":"http_client/com.hexagonkt.http.client/-request/headers.html","searchKeys":["headers","val headers: Map<String, List<String>>","com.hexagonkt.http.client.Request.headers"]},{"name":"val headers: MutableMap<String, List<String>>","description":"com.hexagonkt.http.client.Response.headers","location":"http_client/com.hexagonkt.http.client/-response/headers.html","searchKeys":["headers","val headers: MutableMap<String, List<String>>","com.hexagonkt.http.client.Response.headers"]},{"name":"val inputStream: InputStream","description":"com.hexagonkt.http.client.Response.inputStream","location":"http_client/com.hexagonkt.http.client/-response/input-stream.html","searchKeys":["inputStream","val inputStream: InputStream","com.hexagonkt.http.client.Response.inputStream"]},{"name":"val insecure: Boolean = false","description":"com.hexagonkt.http.client.ClientSettings.insecure","location":"http_client/com.hexagonkt.http.client/-client-settings/insecure.html","searchKeys":["insecure","val insecure: Boolean = false","com.hexagonkt.http.client.ClientSettings.insecure"]},{"name":"val method: Method","description":"com.hexagonkt.http.client.Request.method","location":"http_client/com.hexagonkt.http.client/-request/method.html","searchKeys":["method","val method: Method","com.hexagonkt.http.client.Request.method"]},{"name":"val parts: Map<String, Part>","description":"com.hexagonkt.http.client.Request.parts","location":"http_client/com.hexagonkt.http.client/-request/parts.html","searchKeys":["parts","val parts: Map<String, Part>","com.hexagonkt.http.client.Request.parts"]},{"name":"val password: String? = null","description":"com.hexagonkt.http.client.ClientSettings.password","location":"http_client/com.hexagonkt.http.client/-client-settings/password.html","searchKeys":["password","val password: String? = null","com.hexagonkt.http.client.ClientSettings.password"]},{"name":"val path: Path","description":"com.hexagonkt.http.client.Request.path","location":"http_client/com.hexagonkt.http.client/-request/path.html","searchKeys":["path","val path: Path","com.hexagonkt.http.client.Request.path"]},{"name":"val pathParameters: Map<String, List<String>>","description":"com.hexagonkt.http.client.Request.pathParameters","location":"http_client/com.hexagonkt.http.client/-request/path-parameters.html","searchKeys":["pathParameters","val pathParameters: Map<String, List<String>>","com.hexagonkt.http.client.Request.pathParameters"]},{"name":"val settings: ClientSettings","description":"com.hexagonkt.http.client.Client.settings","location":"http_client/com.hexagonkt.http.client/-client/settings.html","searchKeys":["settings","val settings: ClientSettings","com.hexagonkt.http.client.Client.settings"]},{"name":"val sslSettings: SslSettings? = null","description":"com.hexagonkt.http.client.ClientSettings.sslSettings","location":"http_client/com.hexagonkt.http.client/-client-settings/ssl-settings.html","searchKeys":["sslSettings","val sslSettings: SslSettings? = null","com.hexagonkt.http.client.ClientSettings.sslSettings"]},{"name":"val useCookies: Boolean = true","description":"com.hexagonkt.http.client.ClientSettings.useCookies","location":"http_client/com.hexagonkt.http.client/-client-settings/use-cookies.html","searchKeys":["useCookies","val useCookies: Boolean = true","com.hexagonkt.http.client.ClientSettings.useCookies"]},{"name":"val user: String? = null","description":"com.hexagonkt.http.client.ClientSettings.user","location":"http_client/com.hexagonkt.http.client/-client-settings/user.html","searchKeys":["user","val user: String? = null","com.hexagonkt.http.client.ClientSettings.user"]},{"name":"var body: T?","description":"com.hexagonkt.http.client.Response.body","location":"http_client/com.hexagonkt.http.client/-response/body.html","searchKeys":["body","var body: T?","com.hexagonkt.http.client.Response.body"]},{"name":"var contentType: String?","description":"com.hexagonkt.http.client.Response.contentType","location":"http_client/com.hexagonkt.http.client/-response/content-type.html","searchKeys":["contentType","var contentType: String?","com.hexagonkt.http.client.Response.contentType"]},{"name":"var status: Int","description":"com.hexagonkt.http.client.Response.status","location":"http_client/com.hexagonkt.http.client/-response/status.html","searchKeys":["status","var status: Int","com.hexagonkt.http.client.Response.status"]},{"name":"AFTER()","description":"com.hexagonkt.http.server.FilterOrder.AFTER","location":"http_server/com.hexagonkt.http.server/-filter-order/-a-f-t-e-r/index.html","searchKeys":["AFTER","AFTER()","com.hexagonkt.http.server.FilterOrder.AFTER"]},{"name":"BEFORE()","description":"com.hexagonkt.http.server.FilterOrder.BEFORE","location":"http_server/com.hexagonkt.http.server/-filter-order/-b-e-f-o-r-e/index.html","searchKeys":["BEFORE","BEFORE()","com.hexagonkt.http.server.FilterOrder.BEFORE"]},{"name":"SESSIONS()","description":"com.hexagonkt.http.server.ServerFeature.SESSIONS","location":"http_server/com.hexagonkt.http.server/-server-feature/-s-e-s-s-i-o-n-s/index.html","searchKeys":["SESSIONS","SESSIONS()","com.hexagonkt.http.server.ServerFeature.SESSIONS"]},{"name":"ZIP()","description":"com.hexagonkt.http.server.ServerFeature.ZIP","location":"http_server/com.hexagonkt.http.server/-server-feature/-z-i-p/index.html","searchKeys":["ZIP","ZIP()","com.hexagonkt.http.server.ServerFeature.ZIP"]},{"name":"abstract class BooksTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.BooksTest","location":"http_server/com.hexagonkt.http.server.examples/-books-test/index.html","searchKeys":["BooksTest","abstract class BooksTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.BooksTest"]},{"name":"abstract class CookiesTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.CookiesTest","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/index.html","searchKeys":["CookiesTest","abstract class CookiesTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.CookiesTest"]},{"name":"abstract class CorsTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.CorsTest","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/index.html","searchKeys":["CorsTest","abstract class CorsTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.CorsTest"]},{"name":"abstract class ErrorsTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.ErrorsTest","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/index.html","searchKeys":["ErrorsTest","abstract class ErrorsTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.ErrorsTest"]},{"name":"abstract class FilesTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.FilesTest","location":"http_server/com.hexagonkt.http.server.examples/-files-test/index.html","searchKeys":["FilesTest","abstract class FilesTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.FilesTest"]},{"name":"abstract class FiltersTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.FiltersTest","location":"http_server/com.hexagonkt.http.server.examples/-filters-test/index.html","searchKeys":["FiltersTest","abstract class FiltersTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.FiltersTest"]},{"name":"abstract class GenericTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.GenericTest","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/index.html","searchKeys":["GenericTest","abstract class GenericTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.GenericTest"]},{"name":"abstract class HttpsTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.HttpsTest","location":"http_server/com.hexagonkt.http.server.examples/-https-test/index.html","searchKeys":["HttpsTest","abstract class HttpsTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.HttpsTest"]},{"name":"abstract class PortHttpServerSamplesTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/index.html","searchKeys":["PortHttpServerSamplesTest","abstract class PortHttpServerSamplesTest(adapter: ServerPort)","com.hexagonkt.http.server.PortHttpServerSamplesTest"]},{"name":"abstract class SessionTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.SessionTest","location":"http_server/com.hexagonkt.http.server.examples/-session-test/index.html","searchKeys":["SessionTest","abstract class SessionTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.SessionTest"]},{"name":"abstract class ZipTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.ZipTest","location":"http_server/com.hexagonkt.http.server.examples/-zip-test/index.html","searchKeys":["ZipTest","abstract class ZipTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.ZipTest"]},{"name":"abstract fun addCookie(cookie: Cookie)","description":"com.hexagonkt.http.server.ResponsePort.addCookie","location":"http_server/com.hexagonkt.http.server/-response-port/add-cookie.html","searchKeys":["addCookie","abstract fun addCookie(cookie: Cookie)","com.hexagonkt.http.server.ResponsePort.addCookie"]},{"name":"abstract fun attributes(): Map<String, Any?>","description":"com.hexagonkt.http.server.SessionPort.attributes","location":"http_server/com.hexagonkt.http.server/-session-port/attributes.html","searchKeys":["attributes","abstract fun attributes(): Map<String, Any?>","com.hexagonkt.http.server.SessionPort.attributes"]},{"name":"abstract fun body(): Any","description":"com.hexagonkt.http.server.ResponsePort.body","location":"http_server/com.hexagonkt.http.server/-response-port/body.html","searchKeys":["body","abstract fun body(): Any","com.hexagonkt.http.server.ResponsePort.body"]},{"name":"abstract fun body(value: Any)","description":"com.hexagonkt.http.server.ResponsePort.body","location":"http_server/com.hexagonkt.http.server/-response-port/body.html","searchKeys":["body","abstract fun body(value: Any)","com.hexagonkt.http.server.ResponsePort.body"]},{"name":"abstract fun certificateChain(): List<X509Certificate>","description":"com.hexagonkt.http.server.RequestPort.certificateChain","location":"http_server/com.hexagonkt.http.server/-request-port/certificate-chain.html","searchKeys":["certificateChain","abstract fun certificateChain(): List<X509Certificate>","com.hexagonkt.http.server.RequestPort.certificateChain"]},{"name":"abstract fun contentLength(): Long","description":"com.hexagonkt.http.server.RequestPort.contentLength","location":"http_server/com.hexagonkt.http.server/-request-port/content-length.html","searchKeys":["contentLength","abstract fun contentLength(): Long","com.hexagonkt.http.server.RequestPort.contentLength"]},{"name":"abstract fun contentType(): String?","description":"com.hexagonkt.http.server.RequestPort.contentType","location":"http_server/com.hexagonkt.http.server/-request-port/content-type.html","searchKeys":["contentType","abstract fun contentType(): String?","com.hexagonkt.http.server.RequestPort.contentType"]},{"name":"abstract fun contentType(): String?","description":"com.hexagonkt.http.server.ResponsePort.contentType","location":"http_server/com.hexagonkt.http.server/-response-port/content-type.html","searchKeys":["contentType","abstract fun contentType(): String?","com.hexagonkt.http.server.ResponsePort.contentType"]},{"name":"abstract fun contentType(value: String?)","description":"com.hexagonkt.http.server.ResponsePort.contentType","location":"http_server/com.hexagonkt.http.server/-response-port/content-type.html","searchKeys":["contentType","abstract fun contentType(value: String?)","com.hexagonkt.http.server.ResponsePort.contentType"]},{"name":"abstract fun cookies(): Map<String, Cookie>","description":"com.hexagonkt.http.server.RequestPort.cookies","location":"http_server/com.hexagonkt.http.server/-request-port/cookies.html","searchKeys":["cookies","abstract fun cookies(): Map<String, Cookie>","com.hexagonkt.http.server.RequestPort.cookies"]},{"name":"abstract fun creationTime(): Long?","description":"com.hexagonkt.http.server.SessionPort.creationTime","location":"http_server/com.hexagonkt.http.server/-session-port/creation-time.html","searchKeys":["creationTime","abstract fun creationTime(): Long?","com.hexagonkt.http.server.SessionPort.creationTime"]},{"name":"abstract fun formParameters(): Map<String, List<String>>","description":"com.hexagonkt.http.server.RequestPort.formParameters","location":"http_server/com.hexagonkt.http.server/-request-port/form-parameters.html","searchKeys":["formParameters","abstract fun formParameters(): Map<String, List<String>>","com.hexagonkt.http.server.RequestPort.formParameters"]},{"name":"abstract fun getAttribute(name: String): Any?","description":"com.hexagonkt.http.server.SessionPort.getAttribute","location":"http_server/com.hexagonkt.http.server/-session-port/get-attribute.html","searchKeys":["getAttribute","abstract fun getAttribute(name: String): Any?","com.hexagonkt.http.server.SessionPort.getAttribute"]},{"name":"abstract fun headers(): Map<String, List<String>>","description":"com.hexagonkt.http.server.RequestPort.headers","location":"http_server/com.hexagonkt.http.server/-request-port/headers.html","searchKeys":["headers","abstract fun headers(): Map<String, List<String>>","com.hexagonkt.http.server.RequestPort.headers"]},{"name":"abstract fun host(): String","description":"com.hexagonkt.http.server.RequestPort.host","location":"http_server/com.hexagonkt.http.server/-request-port/host.html","searchKeys":["host","abstract fun host(): String","com.hexagonkt.http.server.RequestPort.host"]},{"name":"abstract fun id(): String?","description":"com.hexagonkt.http.server.SessionPort.id","location":"http_server/com.hexagonkt.http.server/-session-port/id.html","searchKeys":["id","abstract fun id(): String?","com.hexagonkt.http.server.SessionPort.id"]},{"name":"abstract fun invalidate()","description":"com.hexagonkt.http.server.SessionPort.invalidate","location":"http_server/com.hexagonkt.http.server/-session-port/invalidate.html","searchKeys":["invalidate","abstract fun invalidate()","com.hexagonkt.http.server.SessionPort.invalidate"]},{"name":"abstract fun ip(): String","description":"com.hexagonkt.http.server.RequestPort.ip","location":"http_server/com.hexagonkt.http.server/-request-port/ip.html","searchKeys":["ip","abstract fun ip(): String","com.hexagonkt.http.server.RequestPort.ip"]},{"name":"abstract fun isNew(): Boolean","description":"com.hexagonkt.http.server.SessionPort.isNew","location":"http_server/com.hexagonkt.http.server/-session-port/is-new.html","searchKeys":["isNew","abstract fun isNew(): Boolean","com.hexagonkt.http.server.SessionPort.isNew"]},{"name":"abstract fun lastAccessedTime(): Long?","description":"com.hexagonkt.http.server.SessionPort.lastAccessedTime","location":"http_server/com.hexagonkt.http.server/-session-port/last-accessed-time.html","searchKeys":["lastAccessedTime","abstract fun lastAccessedTime(): Long?","com.hexagonkt.http.server.SessionPort.lastAccessedTime"]},{"name":"abstract fun loadBody(): String","description":"com.hexagonkt.http.server.RequestPort.loadBody","location":"http_server/com.hexagonkt.http.server/-request-port/load-body.html","searchKeys":["loadBody","abstract fun loadBody(): String","com.hexagonkt.http.server.RequestPort.loadBody"]},{"name":"abstract fun maxInactiveInterval(): Int?","description":"com.hexagonkt.http.server.SessionPort.maxInactiveInterval","location":"http_server/com.hexagonkt.http.server/-session-port/max-inactive-interval.html","searchKeys":["maxInactiveInterval","abstract fun maxInactiveInterval(): Int?","com.hexagonkt.http.server.SessionPort.maxInactiveInterval"]},{"name":"abstract fun maxInactiveInterval(value: Int?)","description":"com.hexagonkt.http.server.SessionPort.maxInactiveInterval","location":"http_server/com.hexagonkt.http.server/-session-port/max-inactive-interval.html","searchKeys":["maxInactiveInterval","abstract fun maxInactiveInterval(value: Int?)","com.hexagonkt.http.server.SessionPort.maxInactiveInterval"]},{"name":"abstract fun method(): Method","description":"com.hexagonkt.http.server.RequestPort.method","location":"http_server/com.hexagonkt.http.server/-request-port/method.html","searchKeys":["method","abstract fun method(): Method","com.hexagonkt.http.server.RequestPort.method"]},{"name":"abstract fun outputStream(): OutputStream","description":"com.hexagonkt.http.server.ResponsePort.outputStream","location":"http_server/com.hexagonkt.http.server/-response-port/output-stream.html","searchKeys":["outputStream","abstract fun outputStream(): OutputStream","com.hexagonkt.http.server.ResponsePort.outputStream"]},{"name":"abstract fun parts(): Map<String, Part>","description":"com.hexagonkt.http.server.RequestPort.parts","location":"http_server/com.hexagonkt.http.server/-request-port/parts.html","searchKeys":["parts","abstract fun parts(): Map<String, Part>","com.hexagonkt.http.server.RequestPort.parts"]},{"name":"abstract fun path(): String","description":"com.hexagonkt.http.server.RequestPort.path","location":"http_server/com.hexagonkt.http.server/-request-port/path.html","searchKeys":["path","abstract fun path(): String","com.hexagonkt.http.server.RequestPort.path"]},{"name":"abstract fun pathParameters(): Map<String, String>","description":"com.hexagonkt.http.server.RequestPort.pathParameters","location":"http_server/com.hexagonkt.http.server/-request-port/path-parameters.html","searchKeys":["pathParameters","abstract fun pathParameters(): Map<String, String>","com.hexagonkt.http.server.RequestPort.pathParameters"]},{"name":"abstract fun port(): Int","description":"com.hexagonkt.http.server.RequestPort.port","location":"http_server/com.hexagonkt.http.server/-request-port/port.html","searchKeys":["port","abstract fun port(): Int","com.hexagonkt.http.server.RequestPort.port"]},{"name":"abstract fun queryParameters(): Map<String, List<String>>","description":"com.hexagonkt.http.server.RequestPort.queryParameters","location":"http_server/com.hexagonkt.http.server/-request-port/query-parameters.html","searchKeys":["queryParameters","abstract fun queryParameters(): Map<String, List<String>>","com.hexagonkt.http.server.RequestPort.queryParameters"]},{"name":"abstract fun queryString(): String","description":"com.hexagonkt.http.server.RequestPort.queryString","location":"http_server/com.hexagonkt.http.server/-request-port/query-string.html","searchKeys":["queryString","abstract fun queryString(): String","com.hexagonkt.http.server.RequestPort.queryString"]},{"name":"abstract fun redirect(url: String)","description":"com.hexagonkt.http.server.ResponsePort.redirect","location":"http_server/com.hexagonkt.http.server/-response-port/redirect.html","searchKeys":["redirect","abstract fun redirect(url: String)","com.hexagonkt.http.server.ResponsePort.redirect"]},{"name":"abstract fun remove(name: K)","description":"com.hexagonkt.http.server.Response.MapInterface.remove","location":"http_server/com.hexagonkt.http.server/-response/-map-interface/remove.html","searchKeys":["remove","abstract fun remove(name: K)","com.hexagonkt.http.server.Response.MapInterface.remove"]},{"name":"abstract fun removeAttribute(name: String)","description":"com.hexagonkt.http.server.SessionPort.removeAttribute","location":"http_server/com.hexagonkt.http.server/-session-port/remove-attribute.html","searchKeys":["removeAttribute","abstract fun removeAttribute(name: String)","com.hexagonkt.http.server.SessionPort.removeAttribute"]},{"name":"abstract fun removeCookie(name: String)","description":"com.hexagonkt.http.server.ResponsePort.removeCookie","location":"http_server/com.hexagonkt.http.server/-response-port/remove-cookie.html","searchKeys":["removeCookie","abstract fun removeCookie(name: String)","com.hexagonkt.http.server.ResponsePort.removeCookie"]},{"name":"abstract fun runtimePort(): Int","description":"com.hexagonkt.http.server.ServerPort.runtimePort","location":"http_server/com.hexagonkt.http.server/-server-port/runtime-port.html","searchKeys":["runtimePort","abstract fun runtimePort(): Int","com.hexagonkt.http.server.ServerPort.runtimePort"]},{"name":"abstract fun scheme(): String","description":"com.hexagonkt.http.server.RequestPort.scheme","location":"http_server/com.hexagonkt.http.server/-request-port/scheme.html","searchKeys":["scheme","abstract fun scheme(): String","com.hexagonkt.http.server.RequestPort.scheme"]},{"name":"abstract fun setAttribute(name: String, value: Any)","description":"com.hexagonkt.http.server.SessionPort.setAttribute","location":"http_server/com.hexagonkt.http.server/-session-port/set-attribute.html","searchKeys":["setAttribute","abstract fun setAttribute(name: String, value: Any)","com.hexagonkt.http.server.SessionPort.setAttribute"]},{"name":"abstract fun shutdown()","description":"com.hexagonkt.http.server.ServerPort.shutdown","location":"http_server/com.hexagonkt.http.server/-server-port/shutdown.html","searchKeys":["shutdown","abstract fun shutdown()","com.hexagonkt.http.server.ServerPort.shutdown"]},{"name":"abstract fun started(): Boolean","description":"com.hexagonkt.http.server.ServerPort.started","location":"http_server/com.hexagonkt.http.server/-server-port/started.html","searchKeys":["started","abstract fun started(): Boolean","com.hexagonkt.http.server.ServerPort.started"]},{"name":"abstract fun startup(server: Server)","description":"com.hexagonkt.http.server.ServerPort.startup","location":"http_server/com.hexagonkt.http.server/-server-port/startup.html","searchKeys":["startup","abstract fun startup(server: Server)","com.hexagonkt.http.server.ServerPort.startup"]},{"name":"abstract fun status(): Int","description":"com.hexagonkt.http.server.ResponsePort.status","location":"http_server/com.hexagonkt.http.server/-response-port/status.html","searchKeys":["status","abstract fun status(): Int","com.hexagonkt.http.server.ResponsePort.status"]},{"name":"abstract fun status(value: Int)","description":"com.hexagonkt.http.server.ResponsePort.status","location":"http_server/com.hexagonkt.http.server/-response-port/status.html","searchKeys":["status","abstract fun status(value: Int)","com.hexagonkt.http.server.ResponsePort.status"]},{"name":"abstract fun supportedFeatures(): Set<ServerFeature>","description":"com.hexagonkt.http.server.ServerPort.supportedFeatures","location":"http_server/com.hexagonkt.http.server/-server-port/supported-features.html","searchKeys":["supportedFeatures","abstract fun supportedFeatures(): Set<ServerFeature>","com.hexagonkt.http.server.ServerPort.supportedFeatures"]},{"name":"abstract fun supportedOptions(): Set<String>","description":"com.hexagonkt.http.server.ServerPort.supportedOptions","location":"http_server/com.hexagonkt.http.server/-server-port/supported-options.html","searchKeys":["supportedOptions","abstract fun supportedOptions(): Set<String>","com.hexagonkt.http.server.ServerPort.supportedOptions"]},{"name":"abstract fun supportedProtocols(): Set<Protocol>","description":"com.hexagonkt.http.server.ServerPort.supportedProtocols","location":"http_server/com.hexagonkt.http.server/-server-port/supported-protocols.html","searchKeys":["supportedProtocols","abstract fun supportedProtocols(): Set<Protocol>","com.hexagonkt.http.server.ServerPort.supportedProtocols"]},{"name":"abstract fun url(): String","description":"com.hexagonkt.http.server.RequestPort.url","location":"http_server/com.hexagonkt.http.server/-request-port/url.html","searchKeys":["url","abstract fun url(): String","com.hexagonkt.http.server.RequestPort.url"]},{"name":"abstract operator fun get(name: K): V?","description":"com.hexagonkt.http.server.Response.MapInterface.get","location":"http_server/com.hexagonkt.http.server/-response/-map-interface/get.html","searchKeys":["get","abstract operator fun get(name: K): V?","com.hexagonkt.http.server.Response.MapInterface.get"]},{"name":"abstract operator fun set(name: K, value: V?)","description":"com.hexagonkt.http.server.Response.MapInterface.set","location":"http_server/com.hexagonkt.http.server/-response/-map-interface/set.html","searchKeys":["set","abstract operator fun set(name: K, value: V?)","com.hexagonkt.http.server.Response.MapInterface.set"]},{"name":"abstract val route: Route","description":"com.hexagonkt.http.server.RequestHandler.route","location":"http_server/com.hexagonkt.http.server/-request-handler/route.html","searchKeys":["route","abstract val route: Route","com.hexagonkt.http.server.RequestHandler.route"]},{"name":"class Call(request: Request, response: Response, session: Session)","description":"com.hexagonkt.http.server.Call","location":"http_server/com.hexagonkt.http.server/-call/index.html","searchKeys":["Call","class Call(request: Request, response: Response, session: Session)","com.hexagonkt.http.server.Call"]},{"name":"class CustomException : IllegalArgumentException","description":"com.hexagonkt.http.server.examples.ErrorsTest.CustomException","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/-custom-exception/index.html","searchKeys":["CustomException","class CustomException : IllegalArgumentException","com.hexagonkt.http.server.examples.ErrorsTest.CustomException"]},{"name":"class Request(adapter: RequestPort)","description":"com.hexagonkt.http.server.Request","location":"http_server/com.hexagonkt.http.server/-request/index.html","searchKeys":["Request","class Request(adapter: RequestPort)","com.hexagonkt.http.server.Request"]},{"name":"class Response(adapter: ResponsePort)","description":"com.hexagonkt.http.server.Response","location":"http_server/com.hexagonkt.http.server/-response/index.html","searchKeys":["Response","class Response(adapter: ResponsePort)","com.hexagonkt.http.server.Response"]},{"name":"class Router(block: Router.() -> Unit)","description":"com.hexagonkt.http.server.Router","location":"http_server/com.hexagonkt.http.server/-router/index.html","searchKeys":["Router","class Router(block: Router.() -> Unit)","com.hexagonkt.http.server.Router"]},{"name":"class Session(adapter: SessionPort)","description":"com.hexagonkt.http.server.Session","location":"http_server/com.hexagonkt.http.server/-session/index.html","searchKeys":["Session","class Session(adapter: SessionPort)","com.hexagonkt.http.server.Session"]},{"name":"data class Book(author: String, title: String)","description":"com.hexagonkt.http.server.examples.BooksTest.Book","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-book/index.html","searchKeys":["Book","data class Book(author: String, title: String)","com.hexagonkt.http.server.examples.BooksTest.Book"]},{"name":"data class CodeHandler(route: Route, code: Int, callback: ErrorCodeCallback) : RequestHandler","description":"com.hexagonkt.http.server.RequestHandler.CodeHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-code-handler/index.html","searchKeys":["CodeHandler","data class CodeHandler(route: Route, code: Int, callback: ErrorCodeCallback) : RequestHandler","com.hexagonkt.http.server.RequestHandler.CodeHandler"]},{"name":"data class CorsSettings(allowedOrigin: Regex, allowedMethods: Set<Method>, allowedHeaders: Set<String>, exposedHeaders: Set<String>, supportCredentials: Boolean, preFlightStatus: Int, preFlightMaxAge: Long)","description":"com.hexagonkt.http.server.CorsSettings","location":"http_server/com.hexagonkt.http.server/-cors-settings/index.html","searchKeys":["CorsSettings","data class CorsSettings(allowedOrigin: Regex, allowedMethods: Set<Method>, allowedHeaders: Set<String>, exposedHeaders: Set<String>, supportCredentials: Boolean, preFlightStatus: Int, preFlightMaxAge: Long)","com.hexagonkt.http.server.CorsSettings"]},{"name":"data class ExceptionHandler(route: Route, exception: Class<out Exception>, callback: ExceptionCallback) : RequestHandler","description":"com.hexagonkt.http.server.RequestHandler.ExceptionHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/index.html","searchKeys":["ExceptionHandler","data class ExceptionHandler(route: Route, exception: Class<out Exception>, callback: ExceptionCallback) : RequestHandler","com.hexagonkt.http.server.RequestHandler.ExceptionHandler"]},{"name":"data class FileHandler(route: Route, file: File) : RequestHandler","description":"com.hexagonkt.http.server.RequestHandler.FileHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-file-handler/index.html","searchKeys":["FileHandler","data class FileHandler(route: Route, file: File) : RequestHandler","com.hexagonkt.http.server.RequestHandler.FileHandler"]},{"name":"data class FilterHandler(route: Route, order: FilterOrder, callback: RouteCallback) : RequestHandler","description":"com.hexagonkt.http.server.RequestHandler.FilterHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/index.html","searchKeys":["FilterHandler","data class FilterHandler(route: Route, order: FilterOrder, callback: RouteCallback) : RequestHandler","com.hexagonkt.http.server.RequestHandler.FilterHandler"]},{"name":"data class PathHandler(route: Route, router: Router) : RequestHandler","description":"com.hexagonkt.http.server.RequestHandler.PathHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-path-handler/index.html","searchKeys":["PathHandler","data class PathHandler(route: Route, router: Router) : RequestHandler","com.hexagonkt.http.server.RequestHandler.PathHandler"]},{"name":"data class ResourceHandler(route: Route, resource: URL) : RequestHandler","description":"com.hexagonkt.http.server.RequestHandler.ResourceHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/index.html","searchKeys":["ResourceHandler","data class ResourceHandler(route: Route, resource: URL) : RequestHandler","com.hexagonkt.http.server.RequestHandler.ResourceHandler"]},{"name":"data class RouteHandler(route: Route, callback: RouteCallback) : RequestHandler","description":"com.hexagonkt.http.server.RequestHandler.RouteHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-route-handler/index.html","searchKeys":["RouteHandler","data class RouteHandler(route: Route, callback: RouteCallback) : RequestHandler","com.hexagonkt.http.server.RequestHandler.RouteHandler"]},{"name":"data class Server(adapter: ServerPort, router: Router, settings: ServerSettings)","description":"com.hexagonkt.http.server.Server","location":"http_server/com.hexagonkt.http.server/-server/index.html","searchKeys":["Server","data class Server(adapter: ServerPort, router: Router, settings: ServerSettings)","com.hexagonkt.http.server.Server"]},{"name":"data class ServerSettings(bindAddress: InetAddress, bindPort: Int, contextPath: String, protocol: Protocol, sslSettings: SslSettings?, banner: String?, features: Set<ServerFeature>, options: Map<String, Any>)","description":"com.hexagonkt.http.server.ServerSettings","location":"http_server/com.hexagonkt.http.server/-server-settings/index.html","searchKeys":["ServerSettings","data class ServerSettings(bindAddress: InetAddress, bindPort: Int, contextPath: String, protocol: Protocol, sslSettings: SslSettings?, banner: String?, features: Set<ServerFeature>, options: Map<String, Any>)","com.hexagonkt.http.server.ServerSettings"]},{"name":"data class TestRequest(method: Method, scheme: String, host: String, ip: String, port: Int, path: String, pathParameters: Map<String, String>, queryString: String, url: String, parts: Map<String, Part>, queryParameters: Map<String, List<String>>, formParameters: Map<String, List<String>>, certificateChain: List<X509Certificate>, body: String, headers: Map<String, List<String>>, cookies: Map<String, Cookie>, contentType: String?, contentLength: Long) : RequestPort","description":"com.hexagonkt.http.server.test.TestRequest","location":"http_server/com.hexagonkt.http.server.test/-test-request/index.html","searchKeys":["TestRequest","data class TestRequest(method: Method, scheme: String, host: String, ip: String, port: Int, path: String, pathParameters: Map<String, String>, queryString: String, url: String, parts: Map<String, Part>, queryParameters: Map<String, List<String>>, formParameters: Map<String, List<String>>, certificateChain: List<X509Certificate>, body: String, headers: Map<String, List<String>>, cookies: Map<String, Cookie>, contentType: String?, contentLength: Long) : RequestPort","com.hexagonkt.http.server.test.TestRequest"]},{"name":"data class TestResponse(cookies: Map<String, Cookie>, body: Any, contentType: String?, status: Int, outputStream: OutputStream) : ResponsePort","description":"com.hexagonkt.http.server.test.TestResponse","location":"http_server/com.hexagonkt.http.server.test/-test-response/index.html","searchKeys":["TestResponse","data class TestResponse(cookies: Map<String, Cookie>, body: Any, contentType: String?, status: Int, outputStream: OutputStream) : ResponsePort","com.hexagonkt.http.server.test.TestResponse"]},{"name":"data class TestSession(attributes: Map<String, Any?>, creationTime: Long?, id: String?, maxInactiveInterval: Int?, lastAccessedTime: Long?) : SessionPort","description":"com.hexagonkt.http.server.test.TestSession","location":"http_server/com.hexagonkt.http.server.test/-test-session/index.html","searchKeys":["TestSession","data class TestSession(attributes: Map<String, Any?>, creationTime: Long?, id: String?, maxInactiveInterval: Int?, lastAccessedTime: Long?) : SessionPort","com.hexagonkt.http.server.test.TestSession"]},{"name":"enum FilterOrder : Enum<FilterOrder> ","description":"com.hexagonkt.http.server.FilterOrder","location":"http_server/com.hexagonkt.http.server/-filter-order/index.html","searchKeys":["FilterOrder","enum FilterOrder : Enum<FilterOrder> ","com.hexagonkt.http.server.FilterOrder"]},{"name":"enum ServerFeature : Enum<ServerFeature> ","description":"com.hexagonkt.http.server.ServerFeature","location":"http_server/com.hexagonkt.http.server/-server-feature/index.html","searchKeys":["ServerFeature","enum ServerFeature : Enum<ServerFeature> ","com.hexagonkt.http.server.ServerFeature"]},{"name":"fun <T : Any> body(type: KClass<T>): T","description":"com.hexagonkt.http.server.Request.body","location":"http_server/com.hexagonkt.http.server/-request/body.html","searchKeys":["body","fun <T : Any> body(type: KClass<T>): T","com.hexagonkt.http.server.Request.body"]},{"name":"fun <T : Any> bodyObjects(type: KClass<T>): List<T>","description":"com.hexagonkt.http.server.Request.bodyObjects","location":"http_server/com.hexagonkt.http.server/-request/body-objects.html","searchKeys":["bodyObjects","fun <T : Any> bodyObjects(type: KClass<T>): List<T>","com.hexagonkt.http.server.Request.bodyObjects"]},{"name":"fun A runtime exception returns a 500 code()","description":"com.hexagonkt.http.server.examples.ErrorsTest.A runtime exception returns a 500 code","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/-a runtime exception returns a 500 code.html","searchKeys":["A runtime exception returns a 500 code","fun A runtime exception returns a 500 code()","com.hexagonkt.http.server.examples.ErrorsTest.A runtime exception returns a 500 code"]},{"name":"fun Allowed origin is returned properly()","description":"com.hexagonkt.http.server.examples.CorsTest.Allowed origin is returned properly","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-allowed origin is returned properly.html","searchKeys":["Allowed origin is returned properly","fun Allowed origin is returned properly()","com.hexagonkt.http.server.examples.CorsTest.Allowed origin is returned properly"]},{"name":"fun An static file from resources can be fetched()","description":"com.hexagonkt.http.server.examples.FilesTest.An static file from resources can be fetched","location":"http_server/com.hexagonkt.http.server.examples/-files-test/-an static file from resources can be fetched.html","searchKeys":["An static file from resources can be fetched","fun An static file from resources can be fetched()","com.hexagonkt.http.server.examples.FilesTest.An static file from resources can be fetched"]},{"name":"fun Attribute is added to session()","description":"com.hexagonkt.http.server.examples.SessionTest.Attribute is added to session","location":"http_server/com.hexagonkt.http.server.examples/-session-test/-attribute is added to session.html","searchKeys":["Attribute is added to session","fun Attribute is added to session()","com.hexagonkt.http.server.examples.SessionTest.Attribute is added to session"]},{"name":"fun Base error handler catch all exceptions that subclass a given one()","description":"com.hexagonkt.http.server.examples.ErrorsTest.Base error handler catch all exceptions that subclass a given one","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/-base error handler catch all exceptions that subclass a given one.html","searchKeys":["Base error handler catch all exceptions that subclass a given one","fun Base error handler catch all exceptions that subclass a given one()","com.hexagonkt.http.server.examples.ErrorsTest.Base error handler catch all exceptions that subclass a given one"]},{"name":"fun Book not found returns a 404()","description":"com.hexagonkt.http.server.examples.BooksTest.Book not found returns a 404","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-book not found returns a 404.html","searchKeys":["Book not found returns a 404","fun Book not found returns a 404()","com.hexagonkt.http.server.examples.BooksTest.Book not found returns a 404"]},{"name":"fun Book(author: String, title: String)","description":"com.hexagonkt.http.server.examples.BooksTest.Book.Book","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-book/-book.html","searchKeys":["Book","fun Book(author: String, title: String)","com.hexagonkt.http.server.examples.BooksTest.Book.Book"]},{"name":"fun BooksTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.BooksTest.BooksTest","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-books-test.html","searchKeys":["BooksTest","fun BooksTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.BooksTest.BooksTest"]},{"name":"fun CORS full pre flight()","description":"com.hexagonkt.http.server.examples.CorsTest.CORS full pre flight","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s full pre flight.html","searchKeys":["CORS full pre flight","fun CORS full pre flight()","com.hexagonkt.http.server.examples.CorsTest.CORS full pre flight"]},{"name":"fun CORS pre flight with allowed headers()","description":"com.hexagonkt.http.server.examples.CorsTest.CORS pre flight with allowed headers","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with allowed headers.html","searchKeys":["CORS pre flight with allowed headers","fun CORS pre flight with allowed headers()","com.hexagonkt.http.server.examples.CorsTest.CORS pre flight with allowed headers"]},{"name":"fun CORS pre flight with empty request method()","description":"com.hexagonkt.http.server.examples.CorsTest.CORS pre flight with empty request method","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with empty request method.html","searchKeys":["CORS pre flight with empty request method","fun CORS pre flight with empty request method()","com.hexagonkt.http.server.examples.CorsTest.CORS pre flight with empty request method"]},{"name":"fun CORS pre flight with not allowed headers()","description":"com.hexagonkt.http.server.examples.CorsTest.CORS pre flight with not allowed headers","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with not allowed headers.html","searchKeys":["CORS pre flight with not allowed headers","fun CORS pre flight with not allowed headers()","com.hexagonkt.http.server.examples.CorsTest.CORS pre flight with not allowed headers"]},{"name":"fun CORS pre flight with not allowed method()","description":"com.hexagonkt.http.server.examples.CorsTest.CORS pre flight with not allowed method","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with not allowed method.html","searchKeys":["CORS pre flight with not allowed method","fun CORS pre flight with not allowed method()","com.hexagonkt.http.server.examples.CorsTest.CORS pre flight with not allowed method"]},{"name":"fun CORS pre flight without request method()","description":"com.hexagonkt.http.server.examples.CorsTest.CORS pre flight without request method","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight without request method.html","searchKeys":["CORS pre flight without request method","fun CORS pre flight without request method()","com.hexagonkt.http.server.examples.CorsTest.CORS pre flight without request method"]},{"name":"fun CORS pre flight()","description":"com.hexagonkt.http.server.examples.CorsTest.CORS pre flight","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight.html","searchKeys":["CORS pre flight","fun CORS pre flight()","com.hexagonkt.http.server.examples.CorsTest.CORS pre flight"]},{"name":"fun Call(request: Request, response: Response, session: Session)","description":"com.hexagonkt.http.server.Call.Call","location":"http_server/com.hexagonkt.http.server/-call/-call.html","searchKeys":["Call","fun Call(request: Request, response: Response, session: Session)","com.hexagonkt.http.server.Call.Call"]},{"name":"fun CodeHandler(route: Route, code: Int, callback: ErrorCodeCallback)","description":"com.hexagonkt.http.server.RequestHandler.CodeHandler.CodeHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-code-handler/-code-handler.html","searchKeys":["CodeHandler","fun CodeHandler(route: Route, code: Int, callback: ErrorCodeCallback)","com.hexagonkt.http.server.RequestHandler.CodeHandler.CodeHandler"]},{"name":"fun CookiesTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.CookiesTest.CookiesTest","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/-cookies-test.html","searchKeys":["CookiesTest","fun CookiesTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.CookiesTest.CookiesTest"]},{"name":"fun CorsSettings(allowedOrigin: Regex, allowedMethods: Set<Method> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = 204, preFlightMaxAge: Long = 0)","description":"com.hexagonkt.http.server.CorsSettings.CorsSettings","location":"http_server/com.hexagonkt.http.server/-cors-settings/-cors-settings.html","searchKeys":["CorsSettings","fun CorsSettings(allowedOrigin: Regex, allowedMethods: Set<Method> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = 204, preFlightMaxAge: Long = 0)","com.hexagonkt.http.server.CorsSettings.CorsSettings"]},{"name":"fun CorsSettings(allowedOrigin: String = \"*\", allowedMethods: Set<Method> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = 204, preFlightMaxAge: Long = 0)","description":"com.hexagonkt.http.server.CorsSettings.CorsSettings","location":"http_server/com.hexagonkt.http.server/-cors-settings/-cors-settings.html","searchKeys":["CorsSettings","fun CorsSettings(allowedOrigin: String = \"*\", allowedMethods: Set<Method> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = 204, preFlightMaxAge: Long = 0)","com.hexagonkt.http.server.CorsSettings.CorsSettings"]},{"name":"fun CorsTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.CorsTest.CorsTest","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-cors-test.html","searchKeys":["CorsTest","fun CorsTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.CorsTest.CorsTest"]},{"name":"fun Create book returns 201 and new book ID()","description":"com.hexagonkt.http.server.examples.BooksTest.Create book returns 201 and new book ID","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-create book returns 201 and new book -i-d.html","searchKeys":["Create book returns 201 and new book ID","fun Create book returns 201 and new book ID()","com.hexagonkt.http.server.examples.BooksTest.Create book returns 201 and new book ID"]},{"name":"fun Create cookie adds a new cookie to the request()","description":"com.hexagonkt.http.server.examples.CookiesTest.Create cookie adds a new cookie to the request","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/-create cookie adds a new cookie to the request.html","searchKeys":["Create cookie adds a new cookie to the request","fun Create cookie adds a new cookie to the request()","com.hexagonkt.http.server.examples.CookiesTest.Create cookie adds a new cookie to the request"]},{"name":"fun CustomException()","description":"com.hexagonkt.http.server.examples.ErrorsTest.CustomException.CustomException","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/-custom-exception/-custom-exception.html","searchKeys":["CustomException","fun CustomException()","com.hexagonkt.http.server.examples.ErrorsTest.CustomException.CustomException"]},{"name":"fun Delete book returns the deleted record ID()","description":"com.hexagonkt.http.server.examples.BooksTest.Delete book returns the deleted record ID","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-delete book returns the deleted record -i-d.html","searchKeys":["Delete book returns the deleted record ID","fun Delete book returns the deleted record ID()","com.hexagonkt.http.server.examples.BooksTest.Delete book returns the deleted record ID"]},{"name":"fun Empty cookies assures there is no cookies()","description":"com.hexagonkt.http.server.examples.CookiesTest.Empty cookies assures there is no cookies","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/-empty cookies assures there is no cookies.html","searchKeys":["Empty cookies assures there is no cookies","fun Empty cookies assures there is no cookies()","com.hexagonkt.http.server.examples.CookiesTest.Empty cookies assures there is no cookies"]},{"name":"fun Empty query string is handled properly()","description":"com.hexagonkt.http.server.examples.GenericTest.Empty query string is handled properly","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/-empty query string is handled properly.html","searchKeys":["Empty query string is handled properly","fun Empty query string is handled properly()","com.hexagonkt.http.server.examples.GenericTest.Empty query string is handled properly"]},{"name":"fun ErrorsTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.ErrorsTest.ErrorsTest","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/-errors-test.html","searchKeys":["ErrorsTest","fun ErrorsTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.ErrorsTest.ErrorsTest"]},{"name":"fun ExceptionHandler(route: Route, exception: Class<out Exception>, callback: ExceptionCallback)","description":"com.hexagonkt.http.server.RequestHandler.ExceptionHandler.ExceptionHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/-exception-handler.html","searchKeys":["ExceptionHandler","fun ExceptionHandler(route: Route, exception: Class<out Exception>, callback: ExceptionCallback)","com.hexagonkt.http.server.RequestHandler.ExceptionHandler.ExceptionHandler"]},{"name":"fun FileHandler(route: Route, file: File)","description":"com.hexagonkt.http.server.RequestHandler.FileHandler.FileHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-file-handler/-file-handler.html","searchKeys":["FileHandler","fun FileHandler(route: Route, file: File)","com.hexagonkt.http.server.RequestHandler.FileHandler.FileHandler"]},{"name":"fun Files content type is returned properly()","description":"com.hexagonkt.http.server.examples.FilesTest.Files content type is returned properly","location":"http_server/com.hexagonkt.http.server.examples/-files-test/-files content type is returned properly.html","searchKeys":["Files content type is returned properly","fun Files content type is returned properly()","com.hexagonkt.http.server.examples.FilesTest.Files content type is returned properly"]},{"name":"fun Files mounted on a path are returned properly()","description":"com.hexagonkt.http.server.examples.FilesTest.Files mounted on a path are returned properly","location":"http_server/com.hexagonkt.http.server.examples/-files-test/-files mounted on a path are returned properly.html","searchKeys":["Files mounted on a path are returned properly","fun Files mounted on a path are returned properly()","com.hexagonkt.http.server.examples.FilesTest.Files mounted on a path are returned properly"]},{"name":"fun FilesTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.FilesTest.FilesTest","location":"http_server/com.hexagonkt.http.server.examples/-files-test/-files-test.html","searchKeys":["FilesTest","fun FilesTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.FilesTest.FilesTest"]},{"name":"fun FilterHandler(route: Route, order: FilterOrder, callback: RouteCallback)","description":"com.hexagonkt.http.server.RequestHandler.FilterHandler.FilterHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/-filter-handler.html","searchKeys":["FilterHandler","fun FilterHandler(route: Route, order: FilterOrder, callback: RouteCallback)","com.hexagonkt.http.server.RequestHandler.FilterHandler.FilterHandler"]},{"name":"fun FiltersTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.FiltersTest.FiltersTest","location":"http_server/com.hexagonkt.http.server.examples/-filters-test/-filters-test.html","searchKeys":["FiltersTest","fun FiltersTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.FiltersTest.FiltersTest"]},{"name":"fun Full cookie lifecycle()","description":"com.hexagonkt.http.server.examples.CookiesTest.Full cookie lifecycle","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/-full cookie lifecycle.html","searchKeys":["Full cookie lifecycle","fun Full cookie lifecycle()","com.hexagonkt.http.server.examples.CookiesTest.Full cookie lifecycle"]},{"name":"fun GenericTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.GenericTest.GenericTest","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/-generic-test.html","searchKeys":["GenericTest","fun GenericTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.GenericTest.GenericTest"]},{"name":"fun Get book returns all book's fields()","description":"com.hexagonkt.http.server.examples.BooksTest.Get book returns all book's fields","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-get book returns all book's fields.html","searchKeys":["Get book returns all book's fields","fun Get book returns all book's fields()","com.hexagonkt.http.server.examples.BooksTest.Get book returns all book's fields"]},{"name":"fun HTTP methods are handled correctly()","description":"com.hexagonkt.http.server.examples.GenericTest.HTTP methods are handled correctly","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/-h-t-t-p methods are handled correctly.html","searchKeys":["HTTP methods are handled correctly","fun HTTP methods are handled correctly()","com.hexagonkt.http.server.examples.GenericTest.HTTP methods are handled correctly"]},{"name":"fun HTTP request with valid credentials returns valid response()","description":"com.hexagonkt.http.server.examples.FiltersTest.HTTP request with valid credentials returns valid response","location":"http_server/com.hexagonkt.http.server.examples/-filters-test/-h-t-t-p request with valid credentials returns valid response.html","searchKeys":["HTTP request with valid credentials returns valid response","fun HTTP request with valid credentials returns valid response()","com.hexagonkt.http.server.examples.FiltersTest.HTTP request with valid credentials returns valid response"]},{"name":"fun Halt stops request with 500 status code()","description":"com.hexagonkt.http.server.examples.ErrorsTest.Halt stops request with 500 status code","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/-halt stops request with 500 status code.html","searchKeys":["Halt stops request with 500 status code","fun Halt stops request with 500 status code()","com.hexagonkt.http.server.examples.ErrorsTest.Halt stops request with 500 status code"]},{"name":"fun Handle exception allows to catch unhandled callback exceptions()","description":"com.hexagonkt.http.server.examples.ErrorsTest.Handle exception allows to catch unhandled callback exceptions","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/-handle exception allows to catch unhandled callback exceptions.html","searchKeys":["Handle exception allows to catch unhandled callback exceptions","fun Handle exception allows to catch unhandled callback exceptions()","com.hexagonkt.http.server.examples.ErrorsTest.Handle exception allows to catch unhandled callback exceptions"]},{"name":"fun Handling status code allows to change the returned code()","description":"com.hexagonkt.http.server.examples.ErrorsTest.Handling status code allows to change the returned code","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/-handling status code allows to change the returned code.html","searchKeys":["Handling status code allows to change the returned code","fun Handling status code allows to change the returned code()","com.hexagonkt.http.server.examples.ErrorsTest.Handling status code allows to change the returned code"]},{"name":"fun HttpsTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.HttpsTest.HttpsTest","location":"http_server/com.hexagonkt.http.server.examples/-https-test/-https-test.html","searchKeys":["HttpsTest","fun HttpsTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.HttpsTest.HttpsTest"]},{"name":"fun Invalid method returns 405()","description":"com.hexagonkt.http.server.examples.BooksTest.Invalid method returns 405","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-invalid method returns 405.html","searchKeys":["Invalid method returns 405","fun Invalid method returns 405()","com.hexagonkt.http.server.examples.BooksTest.Invalid method returns 405"]},{"name":"fun List books contains all books IDs()","description":"com.hexagonkt.http.server.examples.BooksTest.List books contains all books IDs","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-list books contains all books -i-ds.html","searchKeys":["List books contains all books IDs","fun List books contains all books IDs()","com.hexagonkt.http.server.examples.BooksTest.List books contains all books IDs"]},{"name":"fun Not found resources return 404()","description":"com.hexagonkt.http.server.examples.FilesTest.Not found resources return 404","location":"http_server/com.hexagonkt.http.server.examples/-files-test/-not found resources return 404.html","searchKeys":["Not found resources return 404","fun Not found resources return 404()","com.hexagonkt.http.server.examples.FilesTest.Not found resources return 404"]},{"name":"fun Parameters are separated from each other()","description":"com.hexagonkt.http.server.examples.FilesTest.Parameters are separated from each other","location":"http_server/com.hexagonkt.http.server.examples/-files-test/-parameters are separated from each other.html","searchKeys":["Parameters are separated from each other","fun Parameters are separated from each other()","com.hexagonkt.http.server.examples.FilesTest.Parameters are separated from each other"]},{"name":"fun PathHandler(route: Route, router: Router)","description":"com.hexagonkt.http.server.RequestHandler.PathHandler.PathHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-path-handler/-path-handler.html","searchKeys":["PathHandler","fun PathHandler(route: Route, router: Router)","com.hexagonkt.http.server.RequestHandler.PathHandler.PathHandler"]},{"name":"fun PortHttpServerSamplesTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.PortHttpServerSamplesTest","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/-port-http-server-samples-test.html","searchKeys":["PortHttpServerSamplesTest","fun PortHttpServerSamplesTest(adapter: ServerPort)","com.hexagonkt.http.server.PortHttpServerSamplesTest.PortHttpServerSamplesTest"]},{"name":"fun Query string with no value parameters is handled properly()","description":"com.hexagonkt.http.server.examples.GenericTest.Query string with no value parameters is handled properly","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/-query string with no value parameters is handled properly.html","searchKeys":["Query string with no value parameters is handled properly","fun Query string with no value parameters is handled properly()","com.hexagonkt.http.server.examples.GenericTest.Query string with no value parameters is handled properly"]},{"name":"fun Remove cookie deletes the given cookie()","description":"com.hexagonkt.http.server.examples.CookiesTest.Remove cookie deletes the given cookie","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/-remove cookie deletes the given cookie.html","searchKeys":["Remove cookie deletes the given cookie","fun Remove cookie deletes the given cookie()","com.hexagonkt.http.server.examples.CookiesTest.Remove cookie deletes the given cookie"]},{"name":"fun Remove not available cookie does not fail()","description":"com.hexagonkt.http.server.examples.CookiesTest.Remove not available cookie does not fail","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/-remove not available cookie does not fail.html","searchKeys":["Remove not available cookie does not fail","fun Remove not available cookie does not fail()","com.hexagonkt.http.server.examples.CookiesTest.Remove not available cookie does not fail"]},{"name":"fun Request body is parsed properly()","description":"com.hexagonkt.http.server.examples.GenericTest.Request body is parsed properly","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/-request body is parsed properly.html","searchKeys":["Request body is parsed properly","fun Request body is parsed properly()","com.hexagonkt.http.server.examples.GenericTest.Request body is parsed properly"]},{"name":"fun Request data is read properly()","description":"com.hexagonkt.http.server.examples.GenericTest.Request data is read properly","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/-request data is read properly.html","searchKeys":["Request data is read properly","fun Request data is read properly()","com.hexagonkt.http.server.examples.GenericTest.Request data is read properly"]},{"name":"fun Request with invalid password returns 403()","description":"com.hexagonkt.http.server.examples.FiltersTest.Request with invalid password returns 403","location":"http_server/com.hexagonkt.http.server.examples/-filters-test/-request with invalid password returns 403.html","searchKeys":["Request with invalid password returns 403","fun Request with invalid password returns 403()","com.hexagonkt.http.server.examples.FiltersTest.Request with invalid password returns 403"]},{"name":"fun Request with invalid user returns 403()","description":"com.hexagonkt.http.server.examples.FiltersTest.Request with invalid user returns 403","location":"http_server/com.hexagonkt.http.server.examples/-filters-test/-request with invalid user returns 403.html","searchKeys":["Request with invalid user returns 403","fun Request with invalid user returns 403()","com.hexagonkt.http.server.examples.FiltersTest.Request with invalid user returns 403"]},{"name":"fun Request with not allowed origin is forbidden()","description":"com.hexagonkt.http.server.examples.CorsTest.Request with not allowed origin is forbidden","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-request with not allowed origin is forbidden.html","searchKeys":["Request with not allowed origin is forbidden","fun Request with not allowed origin is forbidden()","com.hexagonkt.http.server.examples.CorsTest.Request with not allowed origin is forbidden"]},{"name":"fun Request without authorization returns 401()","description":"com.hexagonkt.http.server.examples.FiltersTest.Request without authorization returns 401","location":"http_server/com.hexagonkt.http.server.examples/-filters-test/-request without authorization returns 401.html","searchKeys":["Request without authorization returns 401","fun Request without authorization returns 401()","com.hexagonkt.http.server.examples.FiltersTest.Request without authorization returns 401"]},{"name":"fun Request without origin continues as non CORS()","description":"com.hexagonkt.http.server.examples.CorsTest.Request without origin continues as non CORS","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-request without origin continues as non -c-o-r-s.html","searchKeys":["Request without origin continues as non CORS","fun Request without origin continues as non CORS()","com.hexagonkt.http.server.examples.CorsTest.Request without origin continues as non CORS"]},{"name":"fun Request(adapter: RequestPort)","description":"com.hexagonkt.http.server.Request.Request","location":"http_server/com.hexagonkt.http.server/-request/-request.html","searchKeys":["Request","fun Request(adapter: RequestPort)","com.hexagonkt.http.server.Request.Request"]},{"name":"fun Requesting a folder with an existing file name returns 404()","description":"com.hexagonkt.http.server.examples.FilesTest.Requesting a folder with an existing file name returns 404","location":"http_server/com.hexagonkt.http.server.examples/-files-test/-requesting a folder with an existing file name returns 404.html","searchKeys":["Requesting a folder with an existing file name returns 404","fun Requesting a folder with an existing file name returns 404()","com.hexagonkt.http.server.examples.FilesTest.Requesting a folder with an existing file name returns 404"]},{"name":"fun ResourceHandler(route: Route, resource: URL)","description":"com.hexagonkt.http.server.RequestHandler.ResourceHandler.ResourceHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/-resource-handler.html","searchKeys":["ResourceHandler","fun ResourceHandler(route: Route, resource: URL)","com.hexagonkt.http.server.RequestHandler.ResourceHandler.ResourceHandler"]},{"name":"fun Response data is generated properly()","description":"com.hexagonkt.http.server.examples.GenericTest.Response data is generated properly","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/-response data is generated properly.html","searchKeys":["Response data is generated properly","fun Response data is generated properly()","com.hexagonkt.http.server.examples.GenericTest.Response data is generated properly"]},{"name":"fun Response(adapter: ResponsePort)","description":"com.hexagonkt.http.server.Response.Response","location":"http_server/com.hexagonkt.http.server/-response/-response.html","searchKeys":["Response","fun Response(adapter: ResponsePort)","com.hexagonkt.http.server.Response.Response"]},{"name":"fun Root files content type is returned properly()","description":"com.hexagonkt.http.server.examples.GenericTest.Root files content type is returned properly","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/-root files content type is returned properly.html","searchKeys":["Root files content type is returned properly","fun Root files content type is returned properly()","com.hexagonkt.http.server.examples.GenericTest.Root files content type is returned properly"]},{"name":"fun RouteHandler(route: Route, callback: RouteCallback)","description":"com.hexagonkt.http.server.RequestHandler.RouteHandler.RouteHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/-route-handler/-route-handler.html","searchKeys":["RouteHandler","fun RouteHandler(route: Route, callback: RouteCallback)","com.hexagonkt.http.server.RequestHandler.RouteHandler.RouteHandler"]},{"name":"fun Router(block: Router.() -> Unit = {})","description":"com.hexagonkt.http.server.Router.Router","location":"http_server/com.hexagonkt.http.server/-router/-router.html","searchKeys":["Router","fun Router(block: Router.() -> Unit = {})","com.hexagonkt.http.server.Router.Router"]},{"name":"fun Sending files works properly()","description":"com.hexagonkt.http.server.examples.FilesTest.Sending files works properly","location":"http_server/com.hexagonkt.http.server.examples/-files-test/-sending files works properly.html","searchKeys":["Sending files works properly","fun Sending files works properly()","com.hexagonkt.http.server.examples.FilesTest.Sending files works properly"]},{"name":"fun Sending multi part content works properly()","description":"com.hexagonkt.http.server.examples.FilesTest.Sending multi part content works properly","location":"http_server/com.hexagonkt.http.server.examples/-files-test/-sending multi part content works properly.html","searchKeys":["Sending multi part content works properly","fun Sending multi part content works properly()","com.hexagonkt.http.server.examples.FilesTest.Sending multi part content works properly"]},{"name":"fun Serve HTTP2 works properly()","description":"com.hexagonkt.http.server.examples.HttpsTest.Serve HTTP2 works properly","location":"http_server/com.hexagonkt.http.server.examples/-https-test/-serve -h-t-t-p2 works properly.html","searchKeys":["Serve HTTP2 works properly","fun Serve HTTP2 works properly()","com.hexagonkt.http.server.examples.HttpsTest.Serve HTTP2 works properly"]},{"name":"fun Serve HTTPS example()","description":"com.hexagonkt.http.server.examples.HttpsTest.Serve HTTPS example","location":"http_server/com.hexagonkt.http.server.examples/-https-test/-serve -h-t-t-p-s example.html","searchKeys":["Serve HTTPS example","fun Serve HTTPS example()","com.hexagonkt.http.server.examples.HttpsTest.Serve HTTPS example"]},{"name":"fun Serve HTTPS works properly()","description":"com.hexagonkt.http.server.examples.HttpsTest.Serve HTTPS works properly","location":"http_server/com.hexagonkt.http.server.examples/-https-test/-serve -h-t-t-p-s works properly.html","searchKeys":["Serve HTTPS works properly","fun Serve HTTPS works properly()","com.hexagonkt.http.server.examples.HttpsTest.Serve HTTPS works properly"]},{"name":"fun Serve insecure HTTPS example()","description":"com.hexagonkt.http.server.examples.HttpsTest.Serve insecure HTTPS example","location":"http_server/com.hexagonkt.http.server.examples/-https-test/-serve insecure -h-t-t-p-s example.html","searchKeys":["Serve insecure HTTPS example","fun Serve insecure HTTPS example()","com.hexagonkt.http.server.examples.HttpsTest.Serve insecure HTTPS example"]},{"name":"fun Server(adapter: ServerPort, router: Router, settings: ServerSettings = ServerSettings())","description":"com.hexagonkt.http.server.Server.Server","location":"http_server/com.hexagonkt.http.server/-server/-server.html","searchKeys":["Server","fun Server(adapter: ServerPort, router: Router, settings: ServerSettings = ServerSettings())","com.hexagonkt.http.server.Server.Server"]},{"name":"fun Server(adapter: ServerPort, settings: ServerSettings = ServerSettings(), block: Router.() -> Unit)","description":"com.hexagonkt.http.server.Server.Server","location":"http_server/com.hexagonkt.http.server/-server/-server.html","searchKeys":["Server","fun Server(adapter: ServerPort, settings: ServerSettings = ServerSettings(), block: Router.() -> Unit)","com.hexagonkt.http.server.Server.Server"]},{"name":"fun ServerSettings(bindAddress: InetAddress = InetAddress.getLoopbackAddress(), bindPort: Int = 2010, contextPath: String = \"\", protocol: Protocol = HTTP, sslSettings: SslSettings? = null, banner: String? = null, features: Set<ServerFeature> = emptySet(), options: Map<String, Any> = emptyMap())","description":"com.hexagonkt.http.server.ServerSettings.ServerSettings","location":"http_server/com.hexagonkt.http.server/-server-settings/-server-settings.html","searchKeys":["ServerSettings","fun ServerSettings(bindAddress: InetAddress = InetAddress.getLoopbackAddress(), bindPort: Int = 2010, contextPath: String = \"\", protocol: Protocol = HTTP, sslSettings: SslSettings? = null, banner: String? = null, features: Set<ServerFeature> = emptySet(), options: Map<String, Any> = emptyMap())","com.hexagonkt.http.server.ServerSettings.ServerSettings"]},{"name":"fun Session attribute lifecycle test()","description":"com.hexagonkt.http.server.examples.SessionTest.Session attribute lifecycle test","location":"http_server/com.hexagonkt.http.server.examples/-session-test/-session attribute lifecycle test.html","searchKeys":["Session attribute lifecycle test","fun Session attribute lifecycle test()","com.hexagonkt.http.server.examples.SessionTest.Session attribute lifecycle test"]},{"name":"fun Session(adapter: SessionPort)","description":"com.hexagonkt.http.server.Session.Session","location":"http_server/com.hexagonkt.http.server/-session/-session.html","searchKeys":["Session","fun Session(adapter: SessionPort)","com.hexagonkt.http.server.Session.Session"]},{"name":"fun SessionTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.SessionTest.SessionTest","location":"http_server/com.hexagonkt.http.server.examples/-session-test/-session-test.html","searchKeys":["SessionTest","fun SessionTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.SessionTest.SessionTest"]},{"name":"fun Simple CORS request with exposed headers()","description":"com.hexagonkt.http.server.examples.CorsTest.Simple CORS request with exposed headers","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-simple -c-o-r-s request with exposed headers.html","searchKeys":["Simple CORS request with exposed headers","fun Simple CORS request with exposed headers()","com.hexagonkt.http.server.examples.CorsTest.Simple CORS request with exposed headers"]},{"name":"fun Simple CORS request with not allowed method()","description":"com.hexagonkt.http.server.examples.CorsTest.Simple CORS request with not allowed method","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-simple -c-o-r-s request with not allowed method.html","searchKeys":["Simple CORS request with not allowed method","fun Simple CORS request with not allowed method()","com.hexagonkt.http.server.examples.CorsTest.Simple CORS request with not allowed method"]},{"name":"fun Simple CORS request()","description":"com.hexagonkt.http.server.examples.CorsTest.Simple CORS request","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/-simple -c-o-r-s request.html","searchKeys":["Simple CORS request","fun Simple CORS request()","com.hexagonkt.http.server.examples.CorsTest.Simple CORS request"]},{"name":"fun TestRequest(method: Method = Method.GET, scheme: String = \"http\", host: String = \"localhost\", ip: String = \"127.0.0.1\", port: Int = 9090, path: String = \"/\", pathParameters: Map<String, String> = emptyMap(), queryString: String = \"\", url: String = \"://\", parts: Map<String, Part> = emptyMap(), queryParameters: Map<String, List<String>> = emptyMap(), formParameters: Map<String, List<String>> = emptyMap(), certificateChain: List<X509Certificate> = emptyList(), body: String = \"\", headers: Map<String, List<String>> = emptyMap(), cookies: Map<String, Cookie> = emptyMap(), contentType: String? = null, contentLength: Long = body.length.toLong())","description":"com.hexagonkt.http.server.test.TestRequest.TestRequest","location":"http_server/com.hexagonkt.http.server.test/-test-request/-test-request.html","searchKeys":["TestRequest","fun TestRequest(method: Method = Method.GET, scheme: String = \"http\", host: String = \"localhost\", ip: String = \"127.0.0.1\", port: Int = 9090, path: String = \"/\", pathParameters: Map<String, String> = emptyMap(), queryString: String = \"\", url: String = \"://\", parts: Map<String, Part> = emptyMap(), queryParameters: Map<String, List<String>> = emptyMap(), formParameters: Map<String, List<String>> = emptyMap(), certificateChain: List<X509Certificate> = emptyList(), body: String = \"\", headers: Map<String, List<String>> = emptyMap(), cookies: Map<String, Cookie> = emptyMap(), contentType: String? = null, contentLength: Long = body.length.toLong())","com.hexagonkt.http.server.test.TestRequest.TestRequest"]},{"name":"fun TestResponse(cookies: Map<String, Cookie> = emptyMap(), body: Any = \"\", contentType: String? = null, status: Int = 200, outputStream: OutputStream = ByteArrayOutputStream())","description":"com.hexagonkt.http.server.test.TestResponse.TestResponse","location":"http_server/com.hexagonkt.http.server.test/-test-response/-test-response.html","searchKeys":["TestResponse","fun TestResponse(cookies: Map<String, Cookie> = emptyMap(), body: Any = \"\", contentType: String? = null, status: Int = 200, outputStream: OutputStream = ByteArrayOutputStream())","com.hexagonkt.http.server.test.TestResponse.TestResponse"]},{"name":"fun TestSession(attributes: Map<String, Any?> = emptyMap(), creationTime: Long? = null, id: String? = null, maxInactiveInterval: Int? = null, lastAccessedTime: Long? = null)","description":"com.hexagonkt.http.server.test.TestSession.TestSession","location":"http_server/com.hexagonkt.http.server.test/-test-session/-test-session.html","searchKeys":["TestSession","fun TestSession(attributes: Map<String, Any?> = emptyMap(), creationTime: Long? = null, id: String? = null, maxInactiveInterval: Int? = null, lastAccessedTime: Long? = null)","com.hexagonkt.http.server.test.TestSession.TestSession"]},{"name":"fun Update book overrides existing book data()","description":"com.hexagonkt.http.server.examples.BooksTest.Update book overrides existing book data","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-update book overrides existing book data.html","searchKeys":["Update book overrides existing book data","fun Update book overrides existing book data()","com.hexagonkt.http.server.examples.BooksTest.Update book overrides existing book data"]},{"name":"fun Use ZIP encoding example()","description":"com.hexagonkt.http.server.examples.ZipTest.Use ZIP encoding example","location":"http_server/com.hexagonkt.http.server.examples/-zip-test/-use -z-i-p encoding example.html","searchKeys":["Use ZIP encoding example","fun Use ZIP encoding example()","com.hexagonkt.http.server.examples.ZipTest.Use ZIP encoding example"]},{"name":"fun Use ZIP encoding without enabling the feature example()","description":"com.hexagonkt.http.server.examples.ZipTest.Use ZIP encoding without enabling the feature example","location":"http_server/com.hexagonkt.http.server.examples/-zip-test/-use -z-i-p encoding without enabling the feature example.html","searchKeys":["Use ZIP encoding without enabling the feature example","fun Use ZIP encoding without enabling the feature example()","com.hexagonkt.http.server.examples.ZipTest.Use ZIP encoding without enabling the feature example"]},{"name":"fun ZipTest(adapter: ServerPort)","description":"com.hexagonkt.http.server.examples.ZipTest.ZipTest","location":"http_server/com.hexagonkt.http.server.examples/-zip-test/-zip-test.html","searchKeys":["ZipTest","fun ZipTest(adapter: ServerPort)","com.hexagonkt.http.server.examples.ZipTest.ZipTest"]},{"name":"fun accessControlAllowOrigin(origin: String): String","description":"com.hexagonkt.http.server.CorsSettings.accessControlAllowOrigin","location":"http_server/com.hexagonkt.http.server/-cors-settings/access-control-allow-origin.html","searchKeys":["accessControlAllowOrigin","fun accessControlAllowOrigin(origin: String): String","com.hexagonkt.http.server.CorsSettings.accessControlAllowOrigin"]},{"name":"fun addCookie(cookie: Cookie)","description":"com.hexagonkt.http.server.Response.addCookie","location":"http_server/com.hexagonkt.http.server/-response/add-cookie.html","searchKeys":["addCookie","fun addCookie(cookie: Cookie)","com.hexagonkt.http.server.Response.addCookie"]},{"name":"fun after(path: String = \"*\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.after","location":"http_server/com.hexagonkt.http.server/-router/after.html","searchKeys":["after","fun after(path: String = \"*\", block: RouteCallback)","com.hexagonkt.http.server.Router.after"]},{"name":"fun allParameters(): Map<String, Any>","description":"com.hexagonkt.http.server.Request.allParameters","location":"http_server/com.hexagonkt.http.server/-request/all-parameters.html","searchKeys":["allParameters","fun allParameters(): Map<String, Any>","com.hexagonkt.http.server.Request.allParameters"]},{"name":"fun allowOrigin(origin: String): Boolean","description":"com.hexagonkt.http.server.CorsSettings.allowOrigin","location":"http_server/com.hexagonkt.http.server/-cors-settings/allow-origin.html","searchKeys":["allowOrigin","fun allowOrigin(origin: String): Boolean","com.hexagonkt.http.server.CorsSettings.allowOrigin"]},{"name":"fun any(path: String = \"/\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.any","location":"http_server/com.hexagonkt.http.server/-router/any.html","searchKeys":["any","fun any(path: String = \"/\", block: RouteCallback)","com.hexagonkt.http.server.Router.any"]},{"name":"fun before(path: String = \"*\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.before","location":"http_server/com.hexagonkt.http.server/-router/before.html","searchKeys":["before","fun before(path: String = \"*\", block: RouteCallback)","com.hexagonkt.http.server.Router.before"]},{"name":"fun callbacks()","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.callbacks","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/callbacks.html","searchKeys":["callbacks","fun callbacks()","com.hexagonkt.http.server.PortHttpServerSamplesTest.callbacks"]},{"name":"fun clearCookies()","description":"com.hexagonkt.http.server.examples.CookiesTest.clearCookies","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/clear-cookies.html","searchKeys":["clearCookies","fun clearCookies()","com.hexagonkt.http.server.examples.CookiesTest.clearCookies"]},{"name":"fun contentType()","description":"com.hexagonkt.http.server.examples.GenericTest.contentType","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/content-type.html","searchKeys":["contentType","fun contentType()","com.hexagonkt.http.server.examples.GenericTest.contentType"]},{"name":"fun cors(settings: CorsSettings)","description":"com.hexagonkt.http.server.Router.cors","location":"http_server/com.hexagonkt.http.server/-router/cors.html","searchKeys":["cors","fun cors(settings: CorsSettings)","com.hexagonkt.http.server.Router.cors"]},{"name":"fun delete(path: String = \"/\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.delete","location":"http_server/com.hexagonkt.http.server/-router/delete.html","searchKeys":["delete","fun delete(path: String = \"/\", block: RouteCallback)","com.hexagonkt.http.server.Router.delete"]},{"name":"fun echoParamWithMaj()","description":"com.hexagonkt.http.server.examples.GenericTest.echoParamWithMaj","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/echo-param-with-maj.html","searchKeys":["echoParamWithMaj","fun echoParamWithMaj()","com.hexagonkt.http.server.examples.GenericTest.echoParamWithMaj"]},{"name":"fun echoParamWithUpperCaseInValue()","description":"com.hexagonkt.http.server.examples.GenericTest.echoParamWithUpperCaseInValue","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/echo-param-with-upper-case-in-value.html","searchKeys":["echoParamWithUpperCaseInValue","fun echoParamWithUpperCaseInValue()","com.hexagonkt.http.server.examples.GenericTest.echoParamWithUpperCaseInValue"]},{"name":"fun error(code: Int, block: ErrorCodeCallback)","description":"com.hexagonkt.http.server.Router.error","location":"http_server/com.hexagonkt.http.server/-router/error.html","searchKeys":["error","fun error(code: Int, block: ErrorCodeCallback)","com.hexagonkt.http.server.Router.error"]},{"name":"fun error(exception: Class<out Exception>, block: ExceptionCallback)","description":"com.hexagonkt.http.server.Router.error","location":"http_server/com.hexagonkt.http.server/-router/error.html","searchKeys":["error","fun error(exception: Class<out Exception>, block: ExceptionCallback)","com.hexagonkt.http.server.Router.error"]},{"name":"fun error(exception: KClass<out Exception>, block: ExceptionCallback)","description":"com.hexagonkt.http.server.Router.error","location":"http_server/com.hexagonkt.http.server/-router/error.html","searchKeys":["error","fun error(exception: KClass<out Exception>, block: ExceptionCallback)","com.hexagonkt.http.server.Router.error"]},{"name":"fun errors()","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.errors","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/errors.html","searchKeys":["errors","fun errors()","com.hexagonkt.http.server.PortHttpServerSamplesTest.errors"]},{"name":"fun files()","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.files","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/files.html","searchKeys":["files","fun files()","com.hexagonkt.http.server.PortHttpServerSamplesTest.files"]},{"name":"fun filters()","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.filters","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/filters.html","searchKeys":["filters","fun filters()","com.hexagonkt.http.server.PortHttpServerSamplesTest.filters"]},{"name":"fun flatRequestHandlers(h: List<RequestHandler> = requestHandlers): List<RequestHandler>","description":"com.hexagonkt.http.server.Router.flatRequestHandlers","location":"http_server/com.hexagonkt.http.server/-router/flat-request-handlers.html","searchKeys":["flatRequestHandlers","fun flatRequestHandlers(h: List<RequestHandler> = requestHandlers): List<RequestHandler>","com.hexagonkt.http.server.Router.flatRequestHandlers"]},{"name":"fun get(file: File)","description":"com.hexagonkt.http.server.Router.get","location":"http_server/com.hexagonkt.http.server/-router/get.html","searchKeys":["get","fun get(file: File)","com.hexagonkt.http.server.Router.get"]},{"name":"fun get(name: String): Any?","description":"com.hexagonkt.http.server.Session.get","location":"http_server/com.hexagonkt.http.server/-session/get.html","searchKeys":["get","fun get(name: String): Any?","com.hexagonkt.http.server.Session.get"]},{"name":"fun get(path: String = \"/\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.get","location":"http_server/com.hexagonkt.http.server/-router/get.html","searchKeys":["get","fun get(path: String = \"/\", block: RouteCallback)","com.hexagonkt.http.server.Router.get"]},{"name":"fun get(path: String, file: File)","description":"com.hexagonkt.http.server.Router.get","location":"http_server/com.hexagonkt.http.server/-router/get.html","searchKeys":["get","fun get(path: String, file: File)","com.hexagonkt.http.server.Router.get"]},{"name":"fun get(path: String, resource: URL)","description":"com.hexagonkt.http.server.Router.get","location":"http_server/com.hexagonkt.http.server/-router/get.html","searchKeys":["get","fun get(path: String, resource: URL)","com.hexagonkt.http.server.Router.get"]},{"name":"fun get(resource: URL)","description":"com.hexagonkt.http.server.Router.get","location":"http_server/com.hexagonkt.http.server/-router/get.html","searchKeys":["get","fun get(resource: URL)","com.hexagonkt.http.server.Router.get"]},{"name":"fun getRoot()","description":"com.hexagonkt.http.server.examples.GenericTest.getRoot","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/get-root.html","searchKeys":["getRoot","fun getRoot()","com.hexagonkt.http.server.examples.GenericTest.getRoot"]},{"name":"fun halt(code: Int = 500, content: Any = \"\"): Nothing","description":"com.hexagonkt.http.server.Call.halt","location":"http_server/com.hexagonkt.http.server/-call/halt.html","searchKeys":["halt","fun halt(code: Int = 500, content: Any = \"\"): Nothing","com.hexagonkt.http.server.Call.halt"]},{"name":"fun halt(content: Any): Nothing","description":"com.hexagonkt.http.server.Call.halt","location":"http_server/com.hexagonkt.http.server/-call/halt.html","searchKeys":["halt","fun halt(content: Any): Nothing","com.hexagonkt.http.server.Call.halt"]},{"name":"fun head(path: String = \"/\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.head","location":"http_server/com.hexagonkt.http.server/-router/head.html","searchKeys":["head","fun head(path: String = \"/\", block: RouteCallback)","com.hexagonkt.http.server.Router.head"]},{"name":"fun initialize()","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.initialize","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/initialize.html","searchKeys":["initialize","fun initialize()","com.hexagonkt.http.server.PortHttpServerSamplesTest.initialize"]},{"name":"fun initialize()","description":"com.hexagonkt.http.server.examples.BooksTest.initialize","location":"http_server/com.hexagonkt.http.server.examples/-books-test/initialize.html","searchKeys":["initialize","fun initialize()","com.hexagonkt.http.server.examples.BooksTest.initialize"]},{"name":"fun initialize()","description":"com.hexagonkt.http.server.examples.CookiesTest.initialize","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/initialize.html","searchKeys":["initialize","fun initialize()","com.hexagonkt.http.server.examples.CookiesTest.initialize"]},{"name":"fun initialize()","description":"com.hexagonkt.http.server.examples.CorsTest.initialize","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/initialize.html","searchKeys":["initialize","fun initialize()","com.hexagonkt.http.server.examples.CorsTest.initialize"]},{"name":"fun initialize()","description":"com.hexagonkt.http.server.examples.ErrorsTest.initialize","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/initialize.html","searchKeys":["initialize","fun initialize()","com.hexagonkt.http.server.examples.ErrorsTest.initialize"]},{"name":"fun initialize()","description":"com.hexagonkt.http.server.examples.FilesTest.initialize","location":"http_server/com.hexagonkt.http.server.examples/-files-test/initialize.html","searchKeys":["initialize","fun initialize()","com.hexagonkt.http.server.examples.FilesTest.initialize"]},{"name":"fun initialize()","description":"com.hexagonkt.http.server.examples.FiltersTest.initialize","location":"http_server/com.hexagonkt.http.server.examples/-filters-test/initialize.html","searchKeys":["initialize","fun initialize()","com.hexagonkt.http.server.examples.FiltersTest.initialize"]},{"name":"fun initialize()","description":"com.hexagonkt.http.server.examples.GenericTest.initialize","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/initialize.html","searchKeys":["initialize","fun initialize()","com.hexagonkt.http.server.examples.GenericTest.initialize"]},{"name":"fun initialize()","description":"com.hexagonkt.http.server.examples.SessionTest.initialize","location":"http_server/com.hexagonkt.http.server.examples/-session-test/initialize.html","searchKeys":["initialize","fun initialize()","com.hexagonkt.http.server.examples.SessionTest.initialize"]},{"name":"fun invalidate()","description":"com.hexagonkt.http.server.Session.invalidate","location":"http_server/com.hexagonkt.http.server/-session/invalidate.html","searchKeys":["invalidate","fun invalidate()","com.hexagonkt.http.server.Session.invalidate"]},{"name":"fun isNew(): Boolean","description":"com.hexagonkt.http.server.Session.isNew","location":"http_server/com.hexagonkt.http.server/-session/is-new.html","searchKeys":["isNew","fun isNew(): Boolean","com.hexagonkt.http.server.Session.isNew"]},{"name":"fun notFound()","description":"com.hexagonkt.http.server.examples.GenericTest.notFound","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/not-found.html","searchKeys":["notFound","fun notFound()","com.hexagonkt.http.server.examples.GenericTest.notFound"]},{"name":"fun ok(content: Any = \"\", contentType: String? = null)","description":"com.hexagonkt.http.server.Call.ok","location":"http_server/com.hexagonkt.http.server/-call/ok.html","searchKeys":["ok","fun ok(content: Any = \"\", contentType: String? = null)","com.hexagonkt.http.server.Call.ok"]},{"name":"fun ok(content: Any, serializationFormat: SerializationFormat = responseFormat, charset: Charset? = null)","description":"com.hexagonkt.http.server.Call.ok","location":"http_server/com.hexagonkt.http.server/-call/ok.html","searchKeys":["ok","fun ok(content: Any, serializationFormat: SerializationFormat = responseFormat, charset: Charset? = null)","com.hexagonkt.http.server.Call.ok"]},{"name":"fun options(path: String = \"/\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.options","location":"http_server/com.hexagonkt.http.server/-router/options.html","searchKeys":["options","fun options(path: String = \"/\", block: RouteCallback)","com.hexagonkt.http.server.Router.options"]},{"name":"fun patch(path: String = \"/\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.patch","location":"http_server/com.hexagonkt.http.server/-router/patch.html","searchKeys":["patch","fun patch(path: String = \"/\", block: RouteCallback)","com.hexagonkt.http.server.Router.patch"]},{"name":"fun path(block: Router.() -> Unit)","description":"com.hexagonkt.http.server.Router.path","location":"http_server/com.hexagonkt.http.server/-router/path.html","searchKeys":["path","fun path(block: Router.() -> Unit)","com.hexagonkt.http.server.Router.path"]},{"name":"fun path(handler: Router)","description":"com.hexagonkt.http.server.Router.path","location":"http_server/com.hexagonkt.http.server/-router/path.html","searchKeys":["path","fun path(handler: Router)","com.hexagonkt.http.server.Router.path"]},{"name":"fun path(path: Path, router: Router)","description":"com.hexagonkt.http.server.Router.path","location":"http_server/com.hexagonkt.http.server/-router/path.html","searchKeys":["path","fun path(path: Path, router: Router)","com.hexagonkt.http.server.Router.path"]},{"name":"fun path(path: String, block: Router.() -> Unit)","description":"com.hexagonkt.http.server.Router.path","location":"http_server/com.hexagonkt.http.server/-router/path.html","searchKeys":["path","fun path(path: String, block: Router.() -> Unit)","com.hexagonkt.http.server.Router.path"]},{"name":"fun path(path: String, router: Router)","description":"com.hexagonkt.http.server.Router.path","location":"http_server/com.hexagonkt.http.server/-router/path.html","searchKeys":["path","fun path(path: String, router: Router)","com.hexagonkt.http.server.Router.path"]},{"name":"fun post(path: String = \"/\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.post","location":"http_server/com.hexagonkt.http.server/-router/post.html","searchKeys":["post","fun post(path: String = \"/\", block: RouteCallback)","com.hexagonkt.http.server.Router.post"]},{"name":"fun put(path: String = \"/\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.put","location":"http_server/com.hexagonkt.http.server/-router/put.html","searchKeys":["put","fun put(path: String = \"/\", block: RouteCallback)","com.hexagonkt.http.server.Router.put"]},{"name":"fun redirect()","description":"com.hexagonkt.http.server.examples.GenericTest.redirect","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/redirect.html","searchKeys":["redirect","fun redirect()","com.hexagonkt.http.server.examples.GenericTest.redirect"]},{"name":"fun redirect(url: String)","description":"com.hexagonkt.http.server.Call.redirect","location":"http_server/com.hexagonkt.http.server/-call/redirect.html","searchKeys":["redirect","fun redirect(url: String)","com.hexagonkt.http.server.Call.redirect"]},{"name":"fun redirect(url: String)","description":"com.hexagonkt.http.server.Response.redirect","location":"http_server/com.hexagonkt.http.server/-response/redirect.html","searchKeys":["redirect","fun redirect(url: String)","com.hexagonkt.http.server.Response.redirect"]},{"name":"fun remove(name: String)","description":"com.hexagonkt.http.server.Session.remove","location":"http_server/com.hexagonkt.http.server/-session/remove.html","searchKeys":["remove","fun remove(name: String)","com.hexagonkt.http.server.Session.remove"]},{"name":"fun removeAttribute(name: String)","description":"com.hexagonkt.http.server.Session.removeAttribute","location":"http_server/com.hexagonkt.http.server/-session/remove-attribute.html","searchKeys":["removeAttribute","fun removeAttribute(name: String)","com.hexagonkt.http.server.Session.removeAttribute"]},{"name":"fun removeCookie(name: String)","description":"com.hexagonkt.http.server.Response.removeCookie","location":"http_server/com.hexagonkt.http.server/-response/remove-cookie.html","searchKeys":["removeCookie","fun removeCookie(name: String)","com.hexagonkt.http.server.Response.removeCookie"]},{"name":"fun requestDataWithDifferentHeaders()","description":"com.hexagonkt.http.server.examples.GenericTest.requestDataWithDifferentHeaders","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/request-data-with-different-headers.html","searchKeys":["requestDataWithDifferentHeaders","fun requestDataWithDifferentHeaders()","com.hexagonkt.http.server.examples.GenericTest.requestDataWithDifferentHeaders"]},{"name":"fun routeGroups()","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.routeGroups","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/route-groups.html","searchKeys":["routeGroups","fun routeGroups()","com.hexagonkt.http.server.PortHttpServerSamplesTest.routeGroups"]},{"name":"fun routers()","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.routers","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/routers.html","searchKeys":["routers","fun routers()","com.hexagonkt.http.server.PortHttpServerSamplesTest.routers"]},{"name":"fun routesCreation()","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.routesCreation","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/routes-creation.html","searchKeys":["routesCreation","fun routesCreation()","com.hexagonkt.http.server.PortHttpServerSamplesTest.routesCreation"]},{"name":"fun send(code: Int, content: Any = \"\", contentType: String? = null)","description":"com.hexagonkt.http.server.Call.send","location":"http_server/com.hexagonkt.http.server/-call/send.html","searchKeys":["send","fun send(code: Int, content: Any = \"\", contentType: String? = null)","com.hexagonkt.http.server.Call.send"]},{"name":"fun send(code: Int, content: Any, contentType: ContentType)","description":"com.hexagonkt.http.server.Call.send","location":"http_server/com.hexagonkt.http.server/-call/send.html","searchKeys":["send","fun send(code: Int, content: Any, contentType: ContentType)","com.hexagonkt.http.server.Call.send"]},{"name":"fun send(code: Int, content: Any, serializationFormat: SerializationFormat, charset: Charset?)","description":"com.hexagonkt.http.server.Call.send","location":"http_server/com.hexagonkt.http.server/-call/send.html","searchKeys":["send","fun send(code: Int, content: Any, serializationFormat: SerializationFormat, charset: Charset?)","com.hexagonkt.http.server.Call.send"]},{"name":"fun serve(settings: ServerSettings = ServerSettings(), adapter: ServerPort, block: Router.() -> Unit): Server","description":"com.hexagonkt.http.server.serve","location":"http_server/com.hexagonkt.http.server/serve.html","searchKeys":["serve","fun serve(settings: ServerSettings = ServerSettings(), adapter: ServerPort, block: Router.() -> Unit): Server","com.hexagonkt.http.server.serve"]},{"name":"fun serve(settings: ServerSettings = ServerSettings(), router: Router, adapter: ServerPort): Server","description":"com.hexagonkt.http.server.serve","location":"http_server/com.hexagonkt.http.server/serve.html","searchKeys":["serve","fun serve(settings: ServerSettings = ServerSettings(), router: Router, adapter: ServerPort): Server","com.hexagonkt.http.server.serve"]},{"name":"fun serverCreation()","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.serverCreation","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/server-creation.html","searchKeys":["serverCreation","fun serverCreation()","com.hexagonkt.http.server.PortHttpServerSamplesTest.serverCreation"]},{"name":"fun set(name: String, value: Any)","description":"com.hexagonkt.http.server.Session.set","location":"http_server/com.hexagonkt.http.server/-session/set.html","searchKeys":["set","fun set(name: String, value: Any)","com.hexagonkt.http.server.Session.set"]},{"name":"fun shutdown()","description":"com.hexagonkt.http.server.examples.BooksTest.shutdown","location":"http_server/com.hexagonkt.http.server.examples/-books-test/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.hexagonkt.http.server.examples.BooksTest.shutdown"]},{"name":"fun shutdown()","description":"com.hexagonkt.http.server.examples.CookiesTest.shutdown","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.hexagonkt.http.server.examples.CookiesTest.shutdown"]},{"name":"fun shutdown()","description":"com.hexagonkt.http.server.examples.CorsTest.shutdown","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.hexagonkt.http.server.examples.CorsTest.shutdown"]},{"name":"fun shutdown()","description":"com.hexagonkt.http.server.examples.ErrorsTest.shutdown","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.hexagonkt.http.server.examples.ErrorsTest.shutdown"]},{"name":"fun shutdown()","description":"com.hexagonkt.http.server.examples.FilesTest.shutdown","location":"http_server/com.hexagonkt.http.server.examples/-files-test/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.hexagonkt.http.server.examples.FilesTest.shutdown"]},{"name":"fun shutdown()","description":"com.hexagonkt.http.server.examples.FiltersTest.shutdown","location":"http_server/com.hexagonkt.http.server.examples/-filters-test/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.hexagonkt.http.server.examples.FiltersTest.shutdown"]},{"name":"fun shutdown()","description":"com.hexagonkt.http.server.examples.GenericTest.shutdown","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.hexagonkt.http.server.examples.GenericTest.shutdown"]},{"name":"fun shutdown()","description":"com.hexagonkt.http.server.examples.SessionTest.shutdown","location":"http_server/com.hexagonkt.http.server.examples/-session-test/shutdown.html","searchKeys":["shutdown","fun shutdown()","com.hexagonkt.http.server.examples.SessionTest.shutdown"]},{"name":"fun start()","description":"com.hexagonkt.http.server.Server.start","location":"http_server/com.hexagonkt.http.server/-server/start.html","searchKeys":["start","fun start()","com.hexagonkt.http.server.Server.start"]},{"name":"fun started(): Boolean","description":"com.hexagonkt.http.server.Server.started","location":"http_server/com.hexagonkt.http.server/-server/started.html","searchKeys":["started","fun started(): Boolean","com.hexagonkt.http.server.Server.started"]},{"name":"fun stop()","description":"com.hexagonkt.http.server.Server.stop","location":"http_server/com.hexagonkt.http.server/-server/stop.html","searchKeys":["stop","fun stop()","com.hexagonkt.http.server.Server.stop"]},{"name":"fun test()","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.test","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/test.html","searchKeys":["test","fun test()","com.hexagonkt.http.server.PortHttpServerSamplesTest.test"]},{"name":"fun testCall(request: TestRequest = TestRequest(), response: TestResponse = TestResponse(), session: TestSession = TestSession()): Call","description":"com.hexagonkt.http.server.test.testCall","location":"http_server/com.hexagonkt.http.server.test/test-call.html","searchKeys":["testCall","fun testCall(request: TestRequest = TestRequest(), response: TestResponse = TestResponse(), session: TestSession = TestSession()): Call","com.hexagonkt.http.server.test.testCall"]},{"name":"fun trace(path: String = \"/\", block: RouteCallback)","description":"com.hexagonkt.http.server.Router.trace","location":"http_server/com.hexagonkt.http.server/-router/trace.html","searchKeys":["trace","fun trace(path: String = \"/\", block: RouteCallback)","com.hexagonkt.http.server.Router.trace"]},{"name":"fun twoRoutesWithDifferentCase()","description":"com.hexagonkt.http.server.examples.GenericTest.twoRoutesWithDifferentCase","location":"http_server/com.hexagonkt.http.server.examples/-generic-test/two-routes-with-different-case.html","searchKeys":["twoRoutesWithDifferentCase","fun twoRoutesWithDifferentCase()","com.hexagonkt.http.server.examples.GenericTest.twoRoutesWithDifferentCase"]},{"name":"inline fun <T : Any> body(): T","description":"com.hexagonkt.http.server.Request.body","location":"http_server/com.hexagonkt.http.server/-request/body.html","searchKeys":["body","inline fun <T : Any> body(): T","com.hexagonkt.http.server.Request.body"]},{"name":"inline fun <T : Any> bodyObjects(): List<T>","description":"com.hexagonkt.http.server.Request.bodyObjects","location":"http_server/com.hexagonkt.http.server/-request/body-objects.html","searchKeys":["bodyObjects","inline fun <T : Any> bodyObjects(): List<T>","com.hexagonkt.http.server.Request.bodyObjects"]},{"name":"interface MapInterface<K, V>","description":"com.hexagonkt.http.server.Response.MapInterface","location":"http_server/com.hexagonkt.http.server/-response/-map-interface/index.html","searchKeys":["MapInterface","interface MapInterface<K, V>","com.hexagonkt.http.server.Response.MapInterface"]},{"name":"interface RequestPort","description":"com.hexagonkt.http.server.RequestPort","location":"http_server/com.hexagonkt.http.server/-request-port/index.html","searchKeys":["RequestPort","interface RequestPort","com.hexagonkt.http.server.RequestPort"]},{"name":"interface ResponsePort","description":"com.hexagonkt.http.server.ResponsePort","location":"http_server/com.hexagonkt.http.server/-response-port/index.html","searchKeys":["ResponsePort","interface ResponsePort","com.hexagonkt.http.server.ResponsePort"]},{"name":"interface ServerPort","description":"com.hexagonkt.http.server.ServerPort","location":"http_server/com.hexagonkt.http.server/-server-port/index.html","searchKeys":["ServerPort","interface ServerPort","com.hexagonkt.http.server.ServerPort"]},{"name":"interface SessionPort","description":"com.hexagonkt.http.server.SessionPort","location":"http_server/com.hexagonkt.http.server/-session-port/index.html","searchKeys":["SessionPort","interface SessionPort","com.hexagonkt.http.server.SessionPort"]},{"name":"object Companion","description":"com.hexagonkt.http.server.Server.Companion","location":"http_server/com.hexagonkt.http.server/-server/-companion/index.html","searchKeys":["Companion","object Companion","com.hexagonkt.http.server.Server.Companion"]},{"name":"object UnsupportedSessionAdapter : SessionPort","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/index.html","searchKeys":["UnsupportedSessionAdapter","object UnsupportedSessionAdapter : SessionPort","com.hexagonkt.http.server.UnsupportedSessionAdapter"]},{"name":"open override fun addCookie(cookie: Cookie)","description":"com.hexagonkt.http.server.test.TestResponse.addCookie","location":"http_server/com.hexagonkt.http.server.test/-test-response/add-cookie.html","searchKeys":["addCookie","open override fun addCookie(cookie: Cookie)","com.hexagonkt.http.server.test.TestResponse.addCookie"]},{"name":"open override fun attributes(): Map<String, Any?>","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.attributes","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/attributes.html","searchKeys":["attributes","open override fun attributes(): Map<String, Any?>","com.hexagonkt.http.server.UnsupportedSessionAdapter.attributes"]},{"name":"open override fun attributes(): Map<String, Any?>","description":"com.hexagonkt.http.server.test.TestSession.attributes","location":"http_server/com.hexagonkt.http.server.test/-test-session/attributes.html","searchKeys":["attributes","open override fun attributes(): Map<String, Any?>","com.hexagonkt.http.server.test.TestSession.attributes"]},{"name":"open override fun body(): Any","description":"com.hexagonkt.http.server.test.TestResponse.body","location":"http_server/com.hexagonkt.http.server.test/-test-response/body.html","searchKeys":["body","open override fun body(): Any","com.hexagonkt.http.server.test.TestResponse.body"]},{"name":"open override fun body(value: Any)","description":"com.hexagonkt.http.server.test.TestResponse.body","location":"http_server/com.hexagonkt.http.server.test/-test-response/body.html","searchKeys":["body","open override fun body(value: Any)","com.hexagonkt.http.server.test.TestResponse.body"]},{"name":"open override fun certificateChain(): List<X509Certificate>","description":"com.hexagonkt.http.server.test.TestRequest.certificateChain","location":"http_server/com.hexagonkt.http.server.test/-test-request/certificate-chain.html","searchKeys":["certificateChain","open override fun certificateChain(): List<X509Certificate>","com.hexagonkt.http.server.test.TestRequest.certificateChain"]},{"name":"open override fun contentLength(): Long","description":"com.hexagonkt.http.server.test.TestRequest.contentLength","location":"http_server/com.hexagonkt.http.server.test/-test-request/content-length.html","searchKeys":["contentLength","open override fun contentLength(): Long","com.hexagonkt.http.server.test.TestRequest.contentLength"]},{"name":"open override fun contentType(): String?","description":"com.hexagonkt.http.server.test.TestRequest.contentType","location":"http_server/com.hexagonkt.http.server.test/-test-request/content-type.html","searchKeys":["contentType","open override fun contentType(): String?","com.hexagonkt.http.server.test.TestRequest.contentType"]},{"name":"open override fun contentType(): String?","description":"com.hexagonkt.http.server.test.TestResponse.contentType","location":"http_server/com.hexagonkt.http.server.test/-test-response/content-type.html","searchKeys":["contentType","open override fun contentType(): String?","com.hexagonkt.http.server.test.TestResponse.contentType"]},{"name":"open override fun contentType(value: String?)","description":"com.hexagonkt.http.server.test.TestResponse.contentType","location":"http_server/com.hexagonkt.http.server.test/-test-response/content-type.html","searchKeys":["contentType","open override fun contentType(value: String?)","com.hexagonkt.http.server.test.TestResponse.contentType"]},{"name":"open override fun cookies(): Map<String, Cookie>","description":"com.hexagonkt.http.server.test.TestRequest.cookies","location":"http_server/com.hexagonkt.http.server.test/-test-request/cookies.html","searchKeys":["cookies","open override fun cookies(): Map<String, Cookie>","com.hexagonkt.http.server.test.TestRequest.cookies"]},{"name":"open override fun creationTime(): Long?","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.creationTime","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/creation-time.html","searchKeys":["creationTime","open override fun creationTime(): Long?","com.hexagonkt.http.server.UnsupportedSessionAdapter.creationTime"]},{"name":"open override fun creationTime(): Long?","description":"com.hexagonkt.http.server.test.TestSession.creationTime","location":"http_server/com.hexagonkt.http.server.test/-test-session/creation-time.html","searchKeys":["creationTime","open override fun creationTime(): Long?","com.hexagonkt.http.server.test.TestSession.creationTime"]},{"name":"open override fun formParameters(): Map<String, List<String>>","description":"com.hexagonkt.http.server.test.TestRequest.formParameters","location":"http_server/com.hexagonkt.http.server.test/-test-request/form-parameters.html","searchKeys":["formParameters","open override fun formParameters(): Map<String, List<String>>","com.hexagonkt.http.server.test.TestRequest.formParameters"]},{"name":"open override fun getAttribute(name: String): Any?","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.getAttribute","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/get-attribute.html","searchKeys":["getAttribute","open override fun getAttribute(name: String): Any?","com.hexagonkt.http.server.UnsupportedSessionAdapter.getAttribute"]},{"name":"open override fun getAttribute(name: String): Any?","description":"com.hexagonkt.http.server.test.TestSession.getAttribute","location":"http_server/com.hexagonkt.http.server.test/-test-session/get-attribute.html","searchKeys":["getAttribute","open override fun getAttribute(name: String): Any?","com.hexagonkt.http.server.test.TestSession.getAttribute"]},{"name":"open override fun headers(): Map<String, List<String>>","description":"com.hexagonkt.http.server.test.TestRequest.headers","location":"http_server/com.hexagonkt.http.server.test/-test-request/headers.html","searchKeys":["headers","open override fun headers(): Map<String, List<String>>","com.hexagonkt.http.server.test.TestRequest.headers"]},{"name":"open override fun host(): String","description":"com.hexagonkt.http.server.test.TestRequest.host","location":"http_server/com.hexagonkt.http.server.test/-test-request/host.html","searchKeys":["host","open override fun host(): String","com.hexagonkt.http.server.test.TestRequest.host"]},{"name":"open override fun id(): String?","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.id","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/id.html","searchKeys":["id","open override fun id(): String?","com.hexagonkt.http.server.UnsupportedSessionAdapter.id"]},{"name":"open override fun id(): String?","description":"com.hexagonkt.http.server.test.TestSession.id","location":"http_server/com.hexagonkt.http.server.test/-test-session/id.html","searchKeys":["id","open override fun id(): String?","com.hexagonkt.http.server.test.TestSession.id"]},{"name":"open override fun invalidate()","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.invalidate","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/invalidate.html","searchKeys":["invalidate","open override fun invalidate()","com.hexagonkt.http.server.UnsupportedSessionAdapter.invalidate"]},{"name":"open override fun invalidate()","description":"com.hexagonkt.http.server.test.TestSession.invalidate","location":"http_server/com.hexagonkt.http.server.test/-test-session/invalidate.html","searchKeys":["invalidate","open override fun invalidate()","com.hexagonkt.http.server.test.TestSession.invalidate"]},{"name":"open override fun ip(): String","description":"com.hexagonkt.http.server.test.TestRequest.ip","location":"http_server/com.hexagonkt.http.server.test/-test-request/ip.html","searchKeys":["ip","open override fun ip(): String","com.hexagonkt.http.server.test.TestRequest.ip"]},{"name":"open override fun isNew(): Boolean","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.isNew","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/is-new.html","searchKeys":["isNew","open override fun isNew(): Boolean","com.hexagonkt.http.server.UnsupportedSessionAdapter.isNew"]},{"name":"open override fun isNew(): Boolean","description":"com.hexagonkt.http.server.test.TestSession.isNew","location":"http_server/com.hexagonkt.http.server.test/-test-session/is-new.html","searchKeys":["isNew","open override fun isNew(): Boolean","com.hexagonkt.http.server.test.TestSession.isNew"]},{"name":"open override fun lastAccessedTime(): Long?","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.lastAccessedTime","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/last-accessed-time.html","searchKeys":["lastAccessedTime","open override fun lastAccessedTime(): Long?","com.hexagonkt.http.server.UnsupportedSessionAdapter.lastAccessedTime"]},{"name":"open override fun lastAccessedTime(): Long?","description":"com.hexagonkt.http.server.test.TestSession.lastAccessedTime","location":"http_server/com.hexagonkt.http.server.test/-test-session/last-accessed-time.html","searchKeys":["lastAccessedTime","open override fun lastAccessedTime(): Long?","com.hexagonkt.http.server.test.TestSession.lastAccessedTime"]},{"name":"open override fun loadBody(): String","description":"com.hexagonkt.http.server.test.TestRequest.loadBody","location":"http_server/com.hexagonkt.http.server.test/-test-request/load-body.html","searchKeys":["loadBody","open override fun loadBody(): String","com.hexagonkt.http.server.test.TestRequest.loadBody"]},{"name":"open override fun maxInactiveInterval(): Int?","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.maxInactiveInterval","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/max-inactive-interval.html","searchKeys":["maxInactiveInterval","open override fun maxInactiveInterval(): Int?","com.hexagonkt.http.server.UnsupportedSessionAdapter.maxInactiveInterval"]},{"name":"open override fun maxInactiveInterval(): Int?","description":"com.hexagonkt.http.server.test.TestSession.maxInactiveInterval","location":"http_server/com.hexagonkt.http.server.test/-test-session/max-inactive-interval.html","searchKeys":["maxInactiveInterval","open override fun maxInactiveInterval(): Int?","com.hexagonkt.http.server.test.TestSession.maxInactiveInterval"]},{"name":"open override fun maxInactiveInterval(value: Int?)","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.maxInactiveInterval","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/max-inactive-interval.html","searchKeys":["maxInactiveInterval","open override fun maxInactiveInterval(value: Int?)","com.hexagonkt.http.server.UnsupportedSessionAdapter.maxInactiveInterval"]},{"name":"open override fun maxInactiveInterval(value: Int?)","description":"com.hexagonkt.http.server.test.TestSession.maxInactiveInterval","location":"http_server/com.hexagonkt.http.server.test/-test-session/max-inactive-interval.html","searchKeys":["maxInactiveInterval","open override fun maxInactiveInterval(value: Int?)","com.hexagonkt.http.server.test.TestSession.maxInactiveInterval"]},{"name":"open override fun method(): Method","description":"com.hexagonkt.http.server.test.TestRequest.method","location":"http_server/com.hexagonkt.http.server.test/-test-request/method.html","searchKeys":["method","open override fun method(): Method","com.hexagonkt.http.server.test.TestRequest.method"]},{"name":"open override fun outputStream(): OutputStream","description":"com.hexagonkt.http.server.test.TestResponse.outputStream","location":"http_server/com.hexagonkt.http.server.test/-test-response/output-stream.html","searchKeys":["outputStream","open override fun outputStream(): OutputStream","com.hexagonkt.http.server.test.TestResponse.outputStream"]},{"name":"open override fun parts(): Map<String, Part>","description":"com.hexagonkt.http.server.test.TestRequest.parts","location":"http_server/com.hexagonkt.http.server.test/-test-request/parts.html","searchKeys":["parts","open override fun parts(): Map<String, Part>","com.hexagonkt.http.server.test.TestRequest.parts"]},{"name":"open override fun path(): String","description":"com.hexagonkt.http.server.test.TestRequest.path","location":"http_server/com.hexagonkt.http.server.test/-test-request/path.html","searchKeys":["path","open override fun path(): String","com.hexagonkt.http.server.test.TestRequest.path"]},{"name":"open override fun pathParameters(): Map<String, String>","description":"com.hexagonkt.http.server.test.TestRequest.pathParameters","location":"http_server/com.hexagonkt.http.server.test/-test-request/path-parameters.html","searchKeys":["pathParameters","open override fun pathParameters(): Map<String, String>","com.hexagonkt.http.server.test.TestRequest.pathParameters"]},{"name":"open override fun port(): Int","description":"com.hexagonkt.http.server.test.TestRequest.port","location":"http_server/com.hexagonkt.http.server.test/-test-request/port.html","searchKeys":["port","open override fun port(): Int","com.hexagonkt.http.server.test.TestRequest.port"]},{"name":"open override fun queryParameters(): Map<String, List<String>>","description":"com.hexagonkt.http.server.test.TestRequest.queryParameters","location":"http_server/com.hexagonkt.http.server.test/-test-request/query-parameters.html","searchKeys":["queryParameters","open override fun queryParameters(): Map<String, List<String>>","com.hexagonkt.http.server.test.TestRequest.queryParameters"]},{"name":"open override fun queryString(): String","description":"com.hexagonkt.http.server.test.TestRequest.queryString","location":"http_server/com.hexagonkt.http.server.test/-test-request/query-string.html","searchKeys":["queryString","open override fun queryString(): String","com.hexagonkt.http.server.test.TestRequest.queryString"]},{"name":"open override fun redirect(url: String)","description":"com.hexagonkt.http.server.test.TestResponse.redirect","location":"http_server/com.hexagonkt.http.server.test/-test-response/redirect.html","searchKeys":["redirect","open override fun redirect(url: String)","com.hexagonkt.http.server.test.TestResponse.redirect"]},{"name":"open override fun removeAttribute(name: String)","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.removeAttribute","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/remove-attribute.html","searchKeys":["removeAttribute","open override fun removeAttribute(name: String)","com.hexagonkt.http.server.UnsupportedSessionAdapter.removeAttribute"]},{"name":"open override fun removeAttribute(name: String)","description":"com.hexagonkt.http.server.test.TestSession.removeAttribute","location":"http_server/com.hexagonkt.http.server.test/-test-session/remove-attribute.html","searchKeys":["removeAttribute","open override fun removeAttribute(name: String)","com.hexagonkt.http.server.test.TestSession.removeAttribute"]},{"name":"open override fun removeCookie(name: String)","description":"com.hexagonkt.http.server.test.TestResponse.removeCookie","location":"http_server/com.hexagonkt.http.server.test/-test-response/remove-cookie.html","searchKeys":["removeCookie","open override fun removeCookie(name: String)","com.hexagonkt.http.server.test.TestResponse.removeCookie"]},{"name":"open override fun scheme(): String","description":"com.hexagonkt.http.server.test.TestRequest.scheme","location":"http_server/com.hexagonkt.http.server.test/-test-request/scheme.html","searchKeys":["scheme","open override fun scheme(): String","com.hexagonkt.http.server.test.TestRequest.scheme"]},{"name":"open override fun setAttribute(name: String, value: Any)","description":"com.hexagonkt.http.server.UnsupportedSessionAdapter.setAttribute","location":"http_server/com.hexagonkt.http.server/-unsupported-session-adapter/set-attribute.html","searchKeys":["setAttribute","open override fun setAttribute(name: String, value: Any)","com.hexagonkt.http.server.UnsupportedSessionAdapter.setAttribute"]},{"name":"open override fun setAttribute(name: String, value: Any)","description":"com.hexagonkt.http.server.test.TestSession.setAttribute","location":"http_server/com.hexagonkt.http.server.test/-test-session/set-attribute.html","searchKeys":["setAttribute","open override fun setAttribute(name: String, value: Any)","com.hexagonkt.http.server.test.TestSession.setAttribute"]},{"name":"open override fun status(): Int","description":"com.hexagonkt.http.server.test.TestResponse.status","location":"http_server/com.hexagonkt.http.server.test/-test-response/status.html","searchKeys":["status","open override fun status(): Int","com.hexagonkt.http.server.test.TestResponse.status"]},{"name":"open override fun status(value: Int)","description":"com.hexagonkt.http.server.test.TestResponse.status","location":"http_server/com.hexagonkt.http.server.test/-test-response/status.html","searchKeys":["status","open override fun status(value: Int)","com.hexagonkt.http.server.test.TestResponse.status"]},{"name":"open override fun url(): String","description":"com.hexagonkt.http.server.test.TestRequest.url","location":"http_server/com.hexagonkt.http.server.test/-test-request/url.html","searchKeys":["url","open override fun url(): String","com.hexagonkt.http.server.test.TestRequest.url"]},{"name":"open override val route: Route","description":"com.hexagonkt.http.server.RequestHandler.CodeHandler.route","location":"http_server/com.hexagonkt.http.server/-request-handler/-code-handler/route.html","searchKeys":["route","open override val route: Route","com.hexagonkt.http.server.RequestHandler.CodeHandler.route"]},{"name":"open override val route: Route","description":"com.hexagonkt.http.server.RequestHandler.ExceptionHandler.route","location":"http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/route.html","searchKeys":["route","open override val route: Route","com.hexagonkt.http.server.RequestHandler.ExceptionHandler.route"]},{"name":"open override val route: Route","description":"com.hexagonkt.http.server.RequestHandler.FileHandler.route","location":"http_server/com.hexagonkt.http.server/-request-handler/-file-handler/route.html","searchKeys":["route","open override val route: Route","com.hexagonkt.http.server.RequestHandler.FileHandler.route"]},{"name":"open override val route: Route","description":"com.hexagonkt.http.server.RequestHandler.FilterHandler.route","location":"http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/route.html","searchKeys":["route","open override val route: Route","com.hexagonkt.http.server.RequestHandler.FilterHandler.route"]},{"name":"open override val route: Route","description":"com.hexagonkt.http.server.RequestHandler.PathHandler.route","location":"http_server/com.hexagonkt.http.server/-request-handler/-path-handler/route.html","searchKeys":["route","open override val route: Route","com.hexagonkt.http.server.RequestHandler.PathHandler.route"]},{"name":"open override val route: Route","description":"com.hexagonkt.http.server.RequestHandler.ResourceHandler.route","location":"http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/route.html","searchKeys":["route","open override val route: Route","com.hexagonkt.http.server.RequestHandler.ResourceHandler.route"]},{"name":"open override val route: Route","description":"com.hexagonkt.http.server.RequestHandler.RouteHandler.route","location":"http_server/com.hexagonkt.http.server/-request-handler/-route-handler/route.html","searchKeys":["route","open override val route: Route","com.hexagonkt.http.server.RequestHandler.RouteHandler.route"]},{"name":"sealed class RequestHandler","description":"com.hexagonkt.http.server.RequestHandler","location":"http_server/com.hexagonkt.http.server/-request-handler/index.html","searchKeys":["RequestHandler","sealed class RequestHandler","com.hexagonkt.http.server.RequestHandler"]},{"name":"val accept: String?","description":"com.hexagonkt.http.server.Request.accept","location":"http_server/com.hexagonkt.http.server/-request/accept.html","searchKeys":["accept","val accept: String?","com.hexagonkt.http.server.Request.accept"]},{"name":"val acceptValues: List<String>","description":"com.hexagonkt.http.server.Request.acceptValues","location":"http_server/com.hexagonkt.http.server/-request/accept-values.html","searchKeys":["acceptValues","val acceptValues: List<String>","com.hexagonkt.http.server.Request.acceptValues"]},{"name":"val adapter: ResponsePort","description":"com.hexagonkt.http.server.Response.adapter","location":"http_server/com.hexagonkt.http.server/-response/adapter.html","searchKeys":["adapter","val adapter: ResponsePort","com.hexagonkt.http.server.Response.adapter"]},{"name":"val adapter: ServerPort","description":"com.hexagonkt.http.server.PortHttpServerSamplesTest.adapter","location":"http_server/com.hexagonkt.http.server/-port-http-server-samples-test/adapter.html","searchKeys":["adapter","val adapter: ServerPort","com.hexagonkt.http.server.PortHttpServerSamplesTest.adapter"]},{"name":"val adapter: SessionPort","description":"com.hexagonkt.http.server.Session.adapter","location":"http_server/com.hexagonkt.http.server/-session/adapter.html","searchKeys":["adapter","val adapter: SessionPort","com.hexagonkt.http.server.Session.adapter"]},{"name":"val allowedHeaders: Set<String>","description":"com.hexagonkt.http.server.CorsSettings.allowedHeaders","location":"http_server/com.hexagonkt.http.server/-cors-settings/allowed-headers.html","searchKeys":["allowedHeaders","val allowedHeaders: Set<String>","com.hexagonkt.http.server.CorsSettings.allowedHeaders"]},{"name":"val allowedMethods: Set<Method>","description":"com.hexagonkt.http.server.CorsSettings.allowedMethods","location":"http_server/com.hexagonkt.http.server/-cors-settings/allowed-methods.html","searchKeys":["allowedMethods","val allowedMethods: Set<Method>","com.hexagonkt.http.server.CorsSettings.allowedMethods"]},{"name":"val allowedOrigin: Regex","description":"com.hexagonkt.http.server.CorsSettings.allowedOrigin","location":"http_server/com.hexagonkt.http.server/-cors-settings/allowed-origin.html","searchKeys":["allowedOrigin","val allowedOrigin: Regex","com.hexagonkt.http.server.CorsSettings.allowedOrigin"]},{"name":"val attributes: Map<String, Any?>","description":"com.hexagonkt.http.server.Session.attributes","location":"http_server/com.hexagonkt.http.server/-session/attributes.html","searchKeys":["attributes","val attributes: Map<String, Any?>","com.hexagonkt.http.server.Session.attributes"]},{"name":"val attributes: MutableMap<String, Any>","description":"com.hexagonkt.http.server.Call.attributes","location":"http_server/com.hexagonkt.http.server/-call/attributes.html","searchKeys":["attributes","val attributes: MutableMap<String, Any>","com.hexagonkt.http.server.Call.attributes"]},{"name":"val author: String","description":"com.hexagonkt.http.server.examples.BooksTest.Book.author","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-book/author.html","searchKeys":["author","val author: String","com.hexagonkt.http.server.examples.BooksTest.Book.author"]},{"name":"val banner: String","description":"com.hexagonkt.http.server.Server.Companion.banner","location":"http_server/com.hexagonkt.http.server/-server/-companion/banner.html","searchKeys":["banner","val banner: String","com.hexagonkt.http.server.Server.Companion.banner"]},{"name":"val banner: String? = null","description":"com.hexagonkt.http.server.ServerSettings.banner","location":"http_server/com.hexagonkt.http.server/-server-settings/banner.html","searchKeys":["banner","val banner: String? = null","com.hexagonkt.http.server.ServerSettings.banner"]},{"name":"val bindAddress: InetAddress","description":"com.hexagonkt.http.server.ServerSettings.bindAddress","location":"http_server/com.hexagonkt.http.server/-server-settings/bind-address.html","searchKeys":["bindAddress","val bindAddress: InetAddress","com.hexagonkt.http.server.ServerSettings.bindAddress"]},{"name":"val bindPort: Int = 2010","description":"com.hexagonkt.http.server.ServerSettings.bindPort","location":"http_server/com.hexagonkt.http.server/-server-settings/bind-port.html","searchKeys":["bindPort","val bindPort: Int = 2010","com.hexagonkt.http.server.ServerSettings.bindPort"]},{"name":"val body: String","description":"com.hexagonkt.http.server.test.TestRequest.body","location":"http_server/com.hexagonkt.http.server.test/-test-request/body.html","searchKeys":["body","val body: String","com.hexagonkt.http.server.test.TestRequest.body"]},{"name":"val callback: ErrorCodeCallback","description":"com.hexagonkt.http.server.RequestHandler.CodeHandler.callback","location":"http_server/com.hexagonkt.http.server/-request-handler/-code-handler/callback.html","searchKeys":["callback","val callback: ErrorCodeCallback","com.hexagonkt.http.server.RequestHandler.CodeHandler.callback"]},{"name":"val callback: ExceptionCallback","description":"com.hexagonkt.http.server.RequestHandler.ExceptionHandler.callback","location":"http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/callback.html","searchKeys":["callback","val callback: ExceptionCallback","com.hexagonkt.http.server.RequestHandler.ExceptionHandler.callback"]},{"name":"val callback: RouteCallback","description":"com.hexagonkt.http.server.RequestHandler.FilterHandler.callback","location":"http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/callback.html","searchKeys":["callback","val callback: RouteCallback","com.hexagonkt.http.server.RequestHandler.FilterHandler.callback"]},{"name":"val callback: RouteCallback","description":"com.hexagonkt.http.server.RequestHandler.RouteHandler.callback","location":"http_server/com.hexagonkt.http.server/-request-handler/-route-handler/callback.html","searchKeys":["callback","val callback: RouteCallback","com.hexagonkt.http.server.RequestHandler.RouteHandler.callback"]},{"name":"val certificate: X509Certificate?","description":"com.hexagonkt.http.server.Request.certificate","location":"http_server/com.hexagonkt.http.server/-request/certificate.html","searchKeys":["certificate","val certificate: X509Certificate?","com.hexagonkt.http.server.Request.certificate"]},{"name":"val certificateChain: List<X509Certificate>","description":"com.hexagonkt.http.server.Request.certificateChain","location":"http_server/com.hexagonkt.http.server/-request/certificate-chain.html","searchKeys":["certificateChain","val certificateChain: List<X509Certificate>","com.hexagonkt.http.server.Request.certificateChain"]},{"name":"val code: Int","description":"com.hexagonkt.http.server.RequestHandler.CodeHandler.code","location":"http_server/com.hexagonkt.http.server/-request-handler/-code-handler/code.html","searchKeys":["code","val code: Int","com.hexagonkt.http.server.RequestHandler.CodeHandler.code"]},{"name":"val contentLength: Long","description":"com.hexagonkt.http.server.Request.contentLength","location":"http_server/com.hexagonkt.http.server/-request/content-length.html","searchKeys":["contentLength","val contentLength: Long","com.hexagonkt.http.server.Request.contentLength"]},{"name":"val contentType: String?","description":"com.hexagonkt.http.server.Request.contentType","location":"http_server/com.hexagonkt.http.server/-request/content-type.html","searchKeys":["contentType","val contentType: String?","com.hexagonkt.http.server.Request.contentType"]},{"name":"val contextPath: String","description":"com.hexagonkt.http.server.ServerSettings.contextPath","location":"http_server/com.hexagonkt.http.server/-server-settings/context-path.html","searchKeys":["contextPath","val contextPath: String","com.hexagonkt.http.server.ServerSettings.contextPath"]},{"name":"val contextRouter: Router","description":"com.hexagonkt.http.server.Server.contextRouter","location":"http_server/com.hexagonkt.http.server/-server/context-router.html","searchKeys":["contextRouter","val contextRouter: Router","com.hexagonkt.http.server.Server.contextRouter"]},{"name":"val cookies: Map<String, Cookie>","description":"com.hexagonkt.http.server.Request.cookies","location":"http_server/com.hexagonkt.http.server/-request/cookies.html","searchKeys":["cookies","val cookies: Map<String, Cookie>","com.hexagonkt.http.server.Request.cookies"]},{"name":"val creationTime: Long?","description":"com.hexagonkt.http.server.Session.creationTime","location":"http_server/com.hexagonkt.http.server/-session/creation-time.html","searchKeys":["creationTime","val creationTime: Long?","com.hexagonkt.http.server.Session.creationTime"]},{"name":"val exception: Class<out Exception>","description":"com.hexagonkt.http.server.RequestHandler.ExceptionHandler.exception","location":"http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/exception.html","searchKeys":["exception","val exception: Class<out Exception>","com.hexagonkt.http.server.RequestHandler.ExceptionHandler.exception"]},{"name":"val exposedHeaders: Set<String>","description":"com.hexagonkt.http.server.CorsSettings.exposedHeaders","location":"http_server/com.hexagonkt.http.server/-cors-settings/exposed-headers.html","searchKeys":["exposedHeaders","val exposedHeaders: Set<String>","com.hexagonkt.http.server.CorsSettings.exposedHeaders"]},{"name":"val features: Set<ServerFeature>","description":"com.hexagonkt.http.server.ServerSettings.features","location":"http_server/com.hexagonkt.http.server/-server-settings/features.html","searchKeys":["features","val features: Set<ServerFeature>","com.hexagonkt.http.server.ServerSettings.features"]},{"name":"val file: File","description":"com.hexagonkt.http.server.RequestHandler.FileHandler.file","location":"http_server/com.hexagonkt.http.server/-request-handler/-file-handler/file.html","searchKeys":["file","val file: File","com.hexagonkt.http.server.RequestHandler.FileHandler.file"]},{"name":"val formParameters: Map<String, String>","description":"com.hexagonkt.http.server.Call.formParameters","location":"http_server/com.hexagonkt.http.server/-call/form-parameters.html","searchKeys":["formParameters","val formParameters: Map<String, String>","com.hexagonkt.http.server.Call.formParameters"]},{"name":"val formParameters: Map<String, String>","description":"com.hexagonkt.http.server.Request.formParameters","location":"http_server/com.hexagonkt.http.server/-request/form-parameters.html","searchKeys":["formParameters","val formParameters: Map<String, String>","com.hexagonkt.http.server.Request.formParameters"]},{"name":"val formParametersValues: Map<String, List<String>>","description":"com.hexagonkt.http.server.Call.formParametersValues","location":"http_server/com.hexagonkt.http.server/-call/form-parameters-values.html","searchKeys":["formParametersValues","val formParametersValues: Map<String, List<String>>","com.hexagonkt.http.server.Call.formParametersValues"]},{"name":"val formParametersValues: Map<String, List<String>>","description":"com.hexagonkt.http.server.Request.formParametersValues","location":"http_server/com.hexagonkt.http.server/-request/form-parameters-values.html","searchKeys":["formParametersValues","val formParametersValues: Map<String, List<String>>","com.hexagonkt.http.server.Request.formParametersValues"]},{"name":"val headers: Map<String, String>","description":"com.hexagonkt.http.server.Request.headers","location":"http_server/com.hexagonkt.http.server/-request/headers.html","searchKeys":["headers","val headers: Map<String, String>","com.hexagonkt.http.server.Request.headers"]},{"name":"val headers: Response.MapInterface<String, Any>","description":"com.hexagonkt.http.server.Response.headers","location":"http_server/com.hexagonkt.http.server/-response/headers.html","searchKeys":["headers","val headers: Response.MapInterface<String, Any>","com.hexagonkt.http.server.Response.headers"]},{"name":"val headersValues: Map<String, List<String>>","description":"com.hexagonkt.http.server.Request.headersValues","location":"http_server/com.hexagonkt.http.server/-request/headers-values.html","searchKeys":["headersValues","val headersValues: Map<String, List<String>>","com.hexagonkt.http.server.Request.headersValues"]},{"name":"val headersValues: MutableMap<String, List<Any>>","description":"com.hexagonkt.http.server.Response.headersValues","location":"http_server/com.hexagonkt.http.server/-response/headers-values.html","searchKeys":["headersValues","val headersValues: MutableMap<String, List<Any>>","com.hexagonkt.http.server.Response.headersValues"]},{"name":"val host: String","description":"com.hexagonkt.http.server.Request.host","location":"http_server/com.hexagonkt.http.server/-request/host.html","searchKeys":["host","val host: String","com.hexagonkt.http.server.Request.host"]},{"name":"val id: String?","description":"com.hexagonkt.http.server.Session.id","location":"http_server/com.hexagonkt.http.server/-session/id.html","searchKeys":["id","val id: String?","com.hexagonkt.http.server.Session.id"]},{"name":"val ip: String","description":"com.hexagonkt.http.server.Request.ip","location":"http_server/com.hexagonkt.http.server/-request/ip.html","searchKeys":["ip","val ip: String","com.hexagonkt.http.server.Request.ip"]},{"name":"val lastAccessedTime: Long?","description":"com.hexagonkt.http.server.Session.lastAccessedTime","location":"http_server/com.hexagonkt.http.server/-session/last-accessed-time.html","searchKeys":["lastAccessedTime","val lastAccessedTime: Long?","com.hexagonkt.http.server.Session.lastAccessedTime"]},{"name":"val method: Method","description":"com.hexagonkt.http.server.Request.method","location":"http_server/com.hexagonkt.http.server/-request/method.html","searchKeys":["method","val method: Method","com.hexagonkt.http.server.Request.method"]},{"name":"val options: Map<String, Any>","description":"com.hexagonkt.http.server.ServerSettings.options","location":"http_server/com.hexagonkt.http.server/-server-settings/options.html","searchKeys":["options","val options: Map<String, Any>","com.hexagonkt.http.server.ServerSettings.options"]},{"name":"val order: FilterOrder","description":"com.hexagonkt.http.server.RequestHandler.FilterHandler.order","location":"http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/order.html","searchKeys":["order","val order: FilterOrder","com.hexagonkt.http.server.RequestHandler.FilterHandler.order"]},{"name":"val origin: String?","description":"com.hexagonkt.http.server.Request.origin","location":"http_server/com.hexagonkt.http.server/-request/origin.html","searchKeys":["origin","val origin: String?","com.hexagonkt.http.server.Request.origin"]},{"name":"val outputStream: OutputStream","description":"com.hexagonkt.http.server.Response.outputStream","location":"http_server/com.hexagonkt.http.server/-response/output-stream.html","searchKeys":["outputStream","val outputStream: OutputStream","com.hexagonkt.http.server.Response.outputStream"]},{"name":"val parts: Map<String, Part>","description":"com.hexagonkt.http.server.Request.parts","location":"http_server/com.hexagonkt.http.server/-request/parts.html","searchKeys":["parts","val parts: Map<String, Part>","com.hexagonkt.http.server.Request.parts"]},{"name":"val path: String","description":"com.hexagonkt.http.server.Request.path","location":"http_server/com.hexagonkt.http.server/-request/path.html","searchKeys":["path","val path: String","com.hexagonkt.http.server.Request.path"]},{"name":"val pathParameters: Map<String, String>","description":"com.hexagonkt.http.server.Call.pathParameters","location":"http_server/com.hexagonkt.http.server/-call/path-parameters.html","searchKeys":["pathParameters","val pathParameters: Map<String, String>","com.hexagonkt.http.server.Call.pathParameters"]},{"name":"val pathParameters: Map<String, String>","description":"com.hexagonkt.http.server.Request.pathParameters","location":"http_server/com.hexagonkt.http.server/-request/path-parameters.html","searchKeys":["pathParameters","val pathParameters: Map<String, String>","com.hexagonkt.http.server.Request.pathParameters"]},{"name":"val port: Int","description":"com.hexagonkt.http.server.Request.port","location":"http_server/com.hexagonkt.http.server/-request/port.html","searchKeys":["port","val port: Int","com.hexagonkt.http.server.Request.port"]},{"name":"val portName: String","description":"com.hexagonkt.http.server.Server.portName","location":"http_server/com.hexagonkt.http.server/-server/port-name.html","searchKeys":["portName","val portName: String","com.hexagonkt.http.server.Server.portName"]},{"name":"val preFlightMaxAge: Long = 0","description":"com.hexagonkt.http.server.CorsSettings.preFlightMaxAge","location":"http_server/com.hexagonkt.http.server/-cors-settings/pre-flight-max-age.html","searchKeys":["preFlightMaxAge","val preFlightMaxAge: Long = 0","com.hexagonkt.http.server.CorsSettings.preFlightMaxAge"]},{"name":"val preFlightStatus: Int = 204","description":"com.hexagonkt.http.server.CorsSettings.preFlightStatus","location":"http_server/com.hexagonkt.http.server/-cors-settings/pre-flight-status.html","searchKeys":["preFlightStatus","val preFlightStatus: Int = 204","com.hexagonkt.http.server.CorsSettings.preFlightStatus"]},{"name":"val preferredType: String?","description":"com.hexagonkt.http.server.Request.preferredType","location":"http_server/com.hexagonkt.http.server/-request/preferred-type.html","searchKeys":["preferredType","val preferredType: String?","com.hexagonkt.http.server.Request.preferredType"]},{"name":"val protocol: Protocol","description":"com.hexagonkt.http.server.ServerSettings.protocol","location":"http_server/com.hexagonkt.http.server/-server-settings/protocol.html","searchKeys":["protocol","val protocol: Protocol","com.hexagonkt.http.server.ServerSettings.protocol"]},{"name":"val queryParameters: Map<String, String>","description":"com.hexagonkt.http.server.Call.queryParameters","location":"http_server/com.hexagonkt.http.server/-call/query-parameters.html","searchKeys":["queryParameters","val queryParameters: Map<String, String>","com.hexagonkt.http.server.Call.queryParameters"]},{"name":"val queryParameters: Map<String, String>","description":"com.hexagonkt.http.server.Request.queryParameters","location":"http_server/com.hexagonkt.http.server/-request/query-parameters.html","searchKeys":["queryParameters","val queryParameters: Map<String, String>","com.hexagonkt.http.server.Request.queryParameters"]},{"name":"val queryParametersValues: Map<String, List<String>>","description":"com.hexagonkt.http.server.Call.queryParametersValues","location":"http_server/com.hexagonkt.http.server/-call/query-parameters-values.html","searchKeys":["queryParametersValues","val queryParametersValues: Map<String, List<String>>","com.hexagonkt.http.server.Call.queryParametersValues"]},{"name":"val queryParametersValues: Map<String, List<String>>","description":"com.hexagonkt.http.server.Request.queryParametersValues","location":"http_server/com.hexagonkt.http.server/-request/query-parameters-values.html","searchKeys":["queryParametersValues","val queryParametersValues: Map<String, List<String>>","com.hexagonkt.http.server.Request.queryParametersValues"]},{"name":"val queryString: String","description":"com.hexagonkt.http.server.Request.queryString","location":"http_server/com.hexagonkt.http.server/-request/query-string.html","searchKeys":["queryString","val queryString: String","com.hexagonkt.http.server.Request.queryString"]},{"name":"val referer: String?","description":"com.hexagonkt.http.server.Request.referer","location":"http_server/com.hexagonkt.http.server/-request/referer.html","searchKeys":["referer","val referer: String?","com.hexagonkt.http.server.Request.referer"]},{"name":"val request: Request","description":"com.hexagonkt.http.server.Call.request","location":"http_server/com.hexagonkt.http.server/-call/request.html","searchKeys":["request","val request: Request","com.hexagonkt.http.server.Call.request"]},{"name":"val requestFormat: SerializationFormat","description":"com.hexagonkt.http.server.Call.requestFormat","location":"http_server/com.hexagonkt.http.server/-call/request-format.html","searchKeys":["requestFormat","val requestFormat: SerializationFormat","com.hexagonkt.http.server.Call.requestFormat"]},{"name":"val requestType: String","description":"com.hexagonkt.http.server.Call.requestType","location":"http_server/com.hexagonkt.http.server/-call/request-type.html","searchKeys":["requestType","val requestType: String","com.hexagonkt.http.server.Call.requestType"]},{"name":"val resource: URL","description":"com.hexagonkt.http.server.RequestHandler.ResourceHandler.resource","location":"http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/resource.html","searchKeys":["resource","val resource: URL","com.hexagonkt.http.server.RequestHandler.ResourceHandler.resource"]},{"name":"val response: Response","description":"com.hexagonkt.http.server.Call.response","location":"http_server/com.hexagonkt.http.server/-call/response.html","searchKeys":["response","val response: Response","com.hexagonkt.http.server.Call.response"]},{"name":"val responseFormat: SerializationFormat","description":"com.hexagonkt.http.server.Call.responseFormat","location":"http_server/com.hexagonkt.http.server/-call/response-format.html","searchKeys":["responseFormat","val responseFormat: SerializationFormat","com.hexagonkt.http.server.Call.responseFormat"]},{"name":"val responseType: String","description":"com.hexagonkt.http.server.Call.responseType","location":"http_server/com.hexagonkt.http.server/-call/response-type.html","searchKeys":["responseType","val responseType: String","com.hexagonkt.http.server.Call.responseType"]},{"name":"val router: Router","description":"com.hexagonkt.http.server.RequestHandler.PathHandler.router","location":"http_server/com.hexagonkt.http.server/-request-handler/-path-handler/router.html","searchKeys":["router","val router: Router","com.hexagonkt.http.server.RequestHandler.PathHandler.router"]},{"name":"val runtimePort: Int","description":"com.hexagonkt.http.server.Server.runtimePort","location":"http_server/com.hexagonkt.http.server/-server/runtime-port.html","searchKeys":["runtimePort","val runtimePort: Int","com.hexagonkt.http.server.Server.runtimePort"]},{"name":"val scheme: String","description":"com.hexagonkt.http.server.Request.scheme","location":"http_server/com.hexagonkt.http.server/-request/scheme.html","searchKeys":["scheme","val scheme: String","com.hexagonkt.http.server.Request.scheme"]},{"name":"val secure: Boolean","description":"com.hexagonkt.http.server.Request.secure","location":"http_server/com.hexagonkt.http.server/-request/secure.html","searchKeys":["secure","val secure: Boolean","com.hexagonkt.http.server.Request.secure"]},{"name":"val server: Server","description":"com.hexagonkt.http.server.examples.BooksTest.server","location":"http_server/com.hexagonkt.http.server.examples/-books-test/server.html","searchKeys":["server","val server: Server","com.hexagonkt.http.server.examples.BooksTest.server"]},{"name":"val server: Server","description":"com.hexagonkt.http.server.examples.CookiesTest.server","location":"http_server/com.hexagonkt.http.server.examples/-cookies-test/server.html","searchKeys":["server","val server: Server","com.hexagonkt.http.server.examples.CookiesTest.server"]},{"name":"val server: Server","description":"com.hexagonkt.http.server.examples.CorsTest.server","location":"http_server/com.hexagonkt.http.server.examples/-cors-test/server.html","searchKeys":["server","val server: Server","com.hexagonkt.http.server.examples.CorsTest.server"]},{"name":"val server: Server","description":"com.hexagonkt.http.server.examples.ErrorsTest.server","location":"http_server/com.hexagonkt.http.server.examples/-errors-test/server.html","searchKeys":["server","val server: Server","com.hexagonkt.http.server.examples.ErrorsTest.server"]},{"name":"val server: Server","description":"com.hexagonkt.http.server.examples.SessionTest.server","location":"http_server/com.hexagonkt.http.server.examples/-session-test/server.html","searchKeys":["server","val server: Server","com.hexagonkt.http.server.examples.SessionTest.server"]},{"name":"val session: Session","description":"com.hexagonkt.http.server.Call.session","location":"http_server/com.hexagonkt.http.server/-call/session.html","searchKeys":["session","val session: Session","com.hexagonkt.http.server.Call.session"]},{"name":"val settings: ServerSettings","description":"com.hexagonkt.http.server.Server.settings","location":"http_server/com.hexagonkt.http.server/-server/settings.html","searchKeys":["settings","val settings: ServerSettings","com.hexagonkt.http.server.Server.settings"]},{"name":"val sslSettings: SslSettings? = null","description":"com.hexagonkt.http.server.ServerSettings.sslSettings","location":"http_server/com.hexagonkt.http.server/-server-settings/ssl-settings.html","searchKeys":["sslSettings","val sslSettings: SslSettings? = null","com.hexagonkt.http.server.ServerSettings.sslSettings"]},{"name":"val supportCredentials: Boolean = true","description":"com.hexagonkt.http.server.CorsSettings.supportCredentials","location":"http_server/com.hexagonkt.http.server/-cors-settings/support-credentials.html","searchKeys":["supportCredentials","val supportCredentials: Boolean = true","com.hexagonkt.http.server.CorsSettings.supportCredentials"]},{"name":"val title: String","description":"com.hexagonkt.http.server.examples.BooksTest.Book.title","location":"http_server/com.hexagonkt.http.server.examples/-books-test/-book/title.html","searchKeys":["title","val title: String","com.hexagonkt.http.server.examples.BooksTest.Book.title"]},{"name":"val url: String","description":"com.hexagonkt.http.server.Request.url","location":"http_server/com.hexagonkt.http.server/-request/url.html","searchKeys":["url","val url: String","com.hexagonkt.http.server.Request.url"]},{"name":"val userAgent: String?","description":"com.hexagonkt.http.server.Request.userAgent","location":"http_server/com.hexagonkt.http.server/-request/user-agent.html","searchKeys":["userAgent","val userAgent: String?","com.hexagonkt.http.server.Request.userAgent"]},{"name":"var body: Any","description":"com.hexagonkt.http.server.Response.body","location":"http_server/com.hexagonkt.http.server/-response/body.html","searchKeys":["body","var body: Any","com.hexagonkt.http.server.Response.body"]},{"name":"var contentType: String?","description":"com.hexagonkt.http.server.Response.contentType","location":"http_server/com.hexagonkt.http.server/-response/content-type.html","searchKeys":["contentType","var contentType: String?","com.hexagonkt.http.server.Response.contentType"]},{"name":"var cookies: Map<String, Cookie>","description":"com.hexagonkt.http.server.test.TestResponse.cookies","location":"http_server/com.hexagonkt.http.server.test/-test-response/cookies.html","searchKeys":["cookies","var cookies: Map<String, Cookie>","com.hexagonkt.http.server.test.TestResponse.cookies"]},{"name":"var maxInactiveInterval: Int?","description":"com.hexagonkt.http.server.Session.maxInactiveInterval","location":"http_server/com.hexagonkt.http.server/-session/max-inactive-interval.html","searchKeys":["maxInactiveInterval","var maxInactiveInterval: Int?","com.hexagonkt.http.server.Session.maxInactiveInterval"]},{"name":"var requestHandlers: List<RequestHandler>","description":"com.hexagonkt.http.server.Router.requestHandlers","location":"http_server/com.hexagonkt.http.server/-router/request-handlers.html","searchKeys":["requestHandlers","var requestHandlers: List<RequestHandler>","com.hexagonkt.http.server.Router.requestHandlers"]},{"name":"var status: Int","description":"com.hexagonkt.http.server.Response.status","location":"http_server/com.hexagonkt.http.server/-response/status.html","searchKeys":["status","var status: Int","com.hexagonkt.http.server.Response.status"]},{"name":"object Slf4jJulLoggingAdapter : LoggingPort","description":"com.hexagonkt.logging.slf4j.jul.Slf4jJulLoggingAdapter","location":"logging_slf4j_jul/com.hexagonkt.logging.slf4j.jul/-slf4j-jul-logging-adapter/index.html","searchKeys":["Slf4jJulLoggingAdapter","object Slf4jJulLoggingAdapter : LoggingPort","com.hexagonkt.logging.slf4j.jul.Slf4jJulLoggingAdapter"]},{"name":"open override fun createLogger(name: String): LoggerPort","description":"com.hexagonkt.logging.slf4j.jul.Slf4jJulLoggingAdapter.createLogger","location":"logging_slf4j_jul/com.hexagonkt.logging.slf4j.jul/-slf4j-jul-logging-adapter/create-logger.html","searchKeys":["createLogger","open override fun createLogger(name: String): LoggerPort","com.hexagonkt.logging.slf4j.jul.Slf4jJulLoggingAdapter.createLogger"]},{"name":"open override fun setLoggerLevel(name: String, level: LoggingLevel)","description":"com.hexagonkt.logging.slf4j.jul.Slf4jJulLoggingAdapter.setLoggerLevel","location":"logging_slf4j_jul/com.hexagonkt.logging.slf4j.jul/-slf4j-jul-logging-adapter/set-logger-level.html","searchKeys":["setLoggerLevel","open override fun setLoggerLevel(name: String, level: LoggingLevel)","com.hexagonkt.logging.slf4j.jul.Slf4jJulLoggingAdapter.setLoggerLevel"]},{"name":"object Xml : SerializationFormat","description":"com.hexagonkt.serialization.xml.Xml","location":"serialization_xml/com.hexagonkt.serialization.xml/-xml/index.html","searchKeys":["Xml","object Xml : SerializationFormat","com.hexagonkt.serialization.xml.Xml"]},{"name":"open override fun <T : Any> parse(input: InputStream, type: KClass<T>): T","description":"com.hexagonkt.serialization.xml.Xml.parse","location":"serialization_xml/com.hexagonkt.serialization.xml/-xml/parse.html","searchKeys":["parse","open override fun <T : Any> parse(input: InputStream, type: KClass<T>): T","com.hexagonkt.serialization.xml.Xml.parse"]},{"name":"open override fun <T : Any> parseObjects(input: InputStream, type: KClass<T>): List<T>","description":"com.hexagonkt.serialization.xml.Xml.parseObjects","location":"serialization_xml/com.hexagonkt.serialization.xml/-xml/parse-objects.html","searchKeys":["parseObjects","open override fun <T : Any> parseObjects(input: InputStream, type: KClass<T>): List<T>","com.hexagonkt.serialization.xml.Xml.parseObjects"]},{"name":"open override fun serialize(obj: Any): String","description":"com.hexagonkt.serialization.xml.Xml.serialize","location":"serialization_xml/com.hexagonkt.serialization.xml/-xml/serialize.html","searchKeys":["serialize","open override fun serialize(obj: Any): String","com.hexagonkt.serialization.xml.Xml.serialize"]},{"name":"open override fun serialize(obj: Any, output: OutputStream)","description":"com.hexagonkt.serialization.xml.Xml.serialize","location":"serialization_xml/com.hexagonkt.serialization.xml/-xml/serialize.html","searchKeys":["serialize","open override fun serialize(obj: Any, output: OutputStream)","com.hexagonkt.serialization.xml.Xml.serialize"]},{"name":"open override val contentType: String","description":"com.hexagonkt.serialization.xml.Xml.contentType","location":"serialization_xml/com.hexagonkt.serialization.xml/-xml/content-type.html","searchKeys":["contentType","open override val contentType: String","com.hexagonkt.serialization.xml.Xml.contentType"]},{"name":"open override val extensions: Set<String>","description":"com.hexagonkt.serialization.xml.Xml.extensions","location":"serialization_xml/com.hexagonkt.serialization.xml/-xml/extensions.html","searchKeys":["extensions","open override val extensions: Set<String>","com.hexagonkt.serialization.xml.Xml.extensions"]},{"name":"open override val isBinary: Boolean = false","description":"com.hexagonkt.serialization.xml.Xml.isBinary","location":"serialization_xml/com.hexagonkt.serialization.xml/-xml/is-binary.html","searchKeys":["isBinary","open override val isBinary: Boolean = false","com.hexagonkt.serialization.xml.Xml.isBinary"]},{"name":"val mapper: ObjectMapper","description":"com.hexagonkt.serialization.xml.Xml.mapper","location":"serialization_xml/com.hexagonkt.serialization.xml/-xml/mapper.html","searchKeys":["mapper","val mapper: ObjectMapper","com.hexagonkt.serialization.xml.Xml.mapper"]}]