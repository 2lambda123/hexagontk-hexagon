
name: Pull Request

on:
  - pull_request

jobs:
  pull_request:
    name: Pull Request
    runs-on: ubuntu-latest

    steps:
      # SET UP
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Restore Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      # BUILD
      - name: Build Project
        run: ./gradlew --warn --console=plain build

      - name: Check Artifacts
        run: ./gradlew --warn --console=plain createCa createIdentities buildSite tfb

      - name: Test Publishing
        run: ./gradlew --warn --console=plain publish -PbintrayDryRun=true

      - name: Start Benchmark Containers
        run: |
          export COMPOSE_FILE="docker-compose.yml:hexagon_benchmark/docker-compose.yml"
          docker-compose --log-level=warning up -d --build

      - name: Upload Tests Reports (ON FAILURE)
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test_reports
          path: "*/build/**/TEST-*.xml"

      # QUALITY ANALYSIS
      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        run: |
          export PULL_REQUEST=$(echo "$GITHUB_REF" | sed -e "s/refs\/pull\///" -e "s/\/merge//")
          export PULL_REQUEST_BRANCH="$GITHUB_SOURCE_REF"
          export PULL_REQUEST_BASE="$GITHUB_BASE_REF"
          ./gradlew --console=plain --no-daemon -x test sonarqube
