
name: Nightly DEBUG

on:
  push:
    branches-ignore:
      - master
      - develop

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:

      # SET UP
      - name: Check Out
        uses: actions/checkout@v2
#        with: { ref: develop }
      - name: Install Java
        uses: actions/setup-java@v2
        with: { java-version: 11, distribution: adopt }
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle*.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper

      # PROCESS
      - name: Set Up Runner (${{ matrix.os }})
        if: matrix.os == 'windows-latest'
        run: choco install docker-desktop
      - name: Set Up Runner (${{ matrix.os }})
        if: matrix.os == 'macos-latest'
        run: brew install docker docker-compose
      - name: Build Project
        run: ./gradlew --warn --console=plain build
        shell: bash
      - name: Log Build (ON FAILURE)
        if: failure()
        run: ./gradlew --info --stacktrace --console=plain build
        shell: bash

      # CLEAN UP
      - name: Clean Gradle Cache
        run: rm -f ~/.gradle/caches/modules-2/{modules-2.lock,gc.properties}

#  sample_keystores:
#    strategy:
#      matrix:
#        os: [ ubuntu-latest, windows-latest, macos-latest ]
#
#    name: Sample Keystores (${{ matrix.os }})
#    runs-on: ${{ matrix.os }}
#    steps:
#
#      # SET UP
#      - name: Check Out
#        uses: actions/checkout@v2
##        with: { ref: develop }
#      - name: Install Java
#        uses: actions/setup-java@v2
#        with: { java-version: 11, distribution: adopt }
#      - name: Restore Cache
#        uses: actions/cache@v2
#        with:
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle*.properties') }}
#          restore-keys: ${{ runner.os }}-gradle-
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#
#      # PROCESS
#      - name: Create Sample Keystores
#        run: ./gradlew --warn --console=plain createCa createIdentities
#        shell: bash
#
#      # CLEAN UP
#      - name: Clean Gradle Cache
#        run: rm -f ~/.gradle/caches/modules-2/{modules-2.lock,gc.properties}
#
#  build_site:
#    strategy:
#      matrix:
#        os: [ ubuntu-latest, windows-latest ]
#
#    name: Build Site (${{ matrix.os }})
#    runs-on: ${{ matrix.os }}
#    steps:
#
#      # SET UP
#      - name: Check Out
#        uses: actions/checkout@v2
##        with: { ref: develop }
#      - name: Install Java
#        uses: actions/setup-java@v2
#        with: { java-version: 11, distribution: adopt }
#      - name: Restore Cache
#        uses: actions/cache@v2
#        with:
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle*.properties') }}
#          restore-keys: ${{ runner.os }}-gradle-
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#
#      # PROCESS
#      - name: Build Site
#        shell: bash
#        run: |
#          ./gradlew --warn --console=plain --no-daemon build
#          ./gradlew --warn --console=plain --no-daemon -x test buildSite
#
#      # CLEAN UP
#      - name: Clean Gradle Cache
#        run: rm -f ~/.gradle/caches/modules-2/{modules-2.lock,gc.properties}
#
#  test_publishing:
#    strategy:
#      matrix:
#        os: [ ubuntu-latest, windows-latest, macos-latest ]
#
#    name: Test Publishing (${{ matrix.os }})
#    runs-on: ${{ matrix.os }}
#    steps:
#
#      # SET UP
#      - name: Check Out
#        uses: actions/checkout@v2
##        with: { ref: develop }
#      - name: Install Java
#        uses: actions/setup-java@v2
#        with: { java-version: 11, distribution: adopt }
#      - name: Restore Cache
#        uses: actions/cache@v2
#        with:
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle*.properties') }}
#          restore-keys: ${{ runner.os }}-gradle-
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#
#      # PROCESS
#      - name: Test Publishing
#        run: ./gradlew --warn --console=plain --no-daemon publishToMavenLocal
#        shell: bash
#
#      # CLEAN UP
#      - name: Clean Gradle Cache
#        run: rm -f ~/.gradle/caches/modules-2/{modules-2.lock,gc.properties}
