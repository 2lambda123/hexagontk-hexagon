
<project>
  <name>Kotlin POM</name>
  <description>Kotlin's starter POM.</description>

  <properties>
    <!-- Placeholder. Populated by Gradle build script -->
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.mockk</groupId>
      <artifactId>mockk</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.hexagonkt</groupId>
        <artifactId>hexagon_bom</artifactId>
        <version>${hexagon.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <defaultGoal>verify</defaultGoal>
    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>kotlin-maven-plugin</artifactId>
          <version>${kotlin.version}</version>

          <configuration>
            <jvmTarget>${maven.compiler.target}</jvmTarget>
          </configuration>

          <executions>
            <execution>
              <id>compile</id>
              <phase>process-sources</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>

            <execution>
              <id>test-compile</id>
              <phase>process-test-sources</phase>
              <goals>
                <goal>test-compile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>log</directory>
              </fileset>
              <fileset>
                <directory>${basedir}</directory>
                <includes>
                  <include>**/*.log</include>
                  <include>**/*.hprof</include>
                  <include>**/*.build_artifacts.txt</include>
                  <include>**/.attach_pid*</include>
                  <include>**/hs_err_pid*</include>
                  <include>**/dependency-reduced-pom.xml</include>
                </includes>
              </fileset>
            </filesets>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
          <configuration>
            <archive>
              <manifest>
                <mainClass>${exec.mainClass}</mainClass>
              </manifest>
            </archive>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
          </configuration>
          <executions>
            <execution>
              <id>jar-with-dependencies</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.4</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <transformers>
                  <transformer
                    implementation=
                      "org.apache.maven.plugins.shade.resource.ServicesResourceTransformer">
                  </transformer>
                  <transformer
                    implementation=
                      "org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    <mainClass>${exec.mainClass}</mainClass>
                  </transformer>
                </transformers>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.8</version>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.9.1</version>
          <configuration>
            <port>9000</port>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-markdown</artifactId>
              <version>1.9</version> <!-- 1.10 doesn't work properly -->
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.jetbrains.dokka</groupId>
          <artifactId>dokka-maven-plugin</artifactId>
          <version>${dokka.version}</version>
          <configuration>
            <includeNonPublic>false</includeNonPublic>
            <reportUndocumented>false</reportUndocumented>
            <samples>
              <dir>${project.build.testSourceDirectory}</dir>
            </samples>
          </configuration>
          <executions>
            <execution>
              <phase>pre-site</phase>
              <goals>
                <goal>dokka</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.graalvm.buildtools</groupId>
          <artifactId>native-maven-plugin</artifactId>
          <version>${native.tools.version}</version>
          <extensions>true</extensions>
          <executions>
            <execution>
              <id>build-native</id>
              <goals>
                <goal>build</goal>
              </goals>
              <phase>package</phase>
            </execution>
            <execution>
              <id>test-native</id>
              <goals>
                <goal>test</goal>
              </goals>
              <phase>test</phase>
            </execution>
          </executions>
          <configuration>
            <skipNativeTests>true</skipNativeTests>
            <metadataRepository>
              <enabled>true</enabled>
            </metadataRepository>
            <agent>
              <enabled>true</enabled>
            </agent>
            <configFiles>
              <configFile>${project.build.directory}/native/agent-output/test</configFile>
            </configFiles>
            <buildArgs>
              <buildArg>--enable-http</buildArg>
              <buildArg>--enable-https</buildArg>
              <buildArg>--enable-url-protocols=classpath</buildArg>
              <buildArg>--initialize-at-build-time=com.hexagonkt.core.ClasspathHandler</buildArg>
            </buildArgs>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.1.0</version>
          <executions>
            <execution>
              <id>build_properties</id>
              <phase>compile</phase>
              <configuration>
                <target>
                  <propertyfile file="${project.build.outputDirectory}/META-INF/build.properties">
                    <entry key="project" value="${project.parent.artifactId}"/>
                    <entry key="module" value="${project.artifactId}"/>
                    <entry key="version" value="${project.version}"/>
                    <entry key="group" value="${project.groupId}"/>
                    <entry key="description" value="${project.description}"/>
                  </propertyfile>
                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target>
                  <!--suppress UnresolvedMavenProperty-->
                  <exec dir="${project.build.directory}" executable="${env.JAVA_HOME}/bin/jpackage">
                    <arg value="--type"/>
                    <arg value="app-image"/>
                    <arg value="--app-version"/>
                    <arg value="${project.version}"/>
                    <arg value="--description"/>
                    <arg value="${project.description}"/>
                    <arg value="--name"/>
                    <arg value="${project.name}"/>
                    <arg value="--input"/>
                    <arg value="${project.build.directory}/archive-tmp"/>
                    <arg value="--add-modules"/>
                    <arg value="java.logging"/>
                    <arg value="--main-jar"/>
                    <arg value="${project.build.directory}/${project.name}-${project.version}-jar-with-dependencies.jar"/>
                  </exec>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
